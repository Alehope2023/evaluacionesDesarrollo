{"ast":null,"code":"import _slicedToArray from \"C:/trabajo/Alehope/actividadesPreBuild/Frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"C:\\\\trabajo\\\\Alehope\\\\actividadesPreBuild\\\\Frontend\\\\src\\\\screens\\\\control-panel\\\\Catalog\\\\TaskOther\\\\RegisterTaskOtherScreen\\\\RegisterTaskOtherScreen.js\",\n  _this = this,\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { Card, FormControl, InputLabel, MenuItem, Select } from '@material-ui/core';\nimport GridContainer from 'components/Grid/GridContainer';\nimport GridItem from 'components/Grid/GridItem';\nimport CardBody from 'components/Card/CardBody';\nimport CreateTaskExtOrdOther from './components/CreateTaskExtOrdOther';\nimport DuplicateTaskExtOrdOther from './components/DuplicateTaskExtOrdOther';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar RegisterTaskOtherScreen = function RegisterTaskOtherScreen() {\n  _s();\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    taskType = _useState2[0],\n    setTaskType = _useState2[1];\n  useEffect(function () {\n    return function () {\n      return setTaskType('');\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(GridContainer, {\n      children: /*#__PURE__*/_jsxDEV(GridItem, {\n        xs: 12,\n        md: 8,\n        style: {\n          margin: 'auto'\n        },\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardBody, {\n            children: /*#__PURE__*/_jsxDEV(GridContainer, {\n              children: [/*#__PURE__*/_jsxDEV(GridItem, {\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(FormControl, {\n                  fullWidth: true,\n                  children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                    id: \"task-action-type\",\n                    children: \"Tipo de Registro\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 25,\n                    columnNumber: 21\n                  }, _this), /*#__PURE__*/_jsxDEV(Select, {\n                    labelId: \"task-action-type\",\n                    id: \"task-action-type\",\n                    value: taskType,\n                    label: \"task-action-type\",\n                    onChange: function onChange(e) {\n                      return setTaskType(e.target.value);\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: 'create',\n                      children: \"Crear tarea nueva\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 33,\n                      columnNumber: 23\n                    }, _this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: 'duplicate',\n                      children: \"Duplicar tareas de perfil\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 34,\n                      columnNumber: 23\n                    }, _this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 26,\n                    columnNumber: 21\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 24,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 23,\n                columnNumber: 17\n              }, _this), taskType === 'create' ? /*#__PURE__*/_jsxDEV(CreateTaskExtOrdOther, {\n                taskType: taskType,\n                setTaskType: setTaskType\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 19\n              }, _this) : taskType === 'duplicate' ? /*#__PURE__*/_jsxDEV(DuplicateTaskExtOrdOther, {\n                taskType: taskType,\n                setTaskType: setTaskType\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 19\n              }, _this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false);\n};\n_s(RegisterTaskOtherScreen, \"TrGGXYRQRmYXoqLTBHBWdkfNXoM=\");\n_c = RegisterTaskOtherScreen;\nexport default RegisterTaskOtherScreen;\nvar _c;\n$RefreshReg$(_c, \"RegisterTaskOtherScreen\");","map":{"version":3,"names":["useEffect","useState","Card","FormControl","InputLabel","MenuItem","Select","GridContainer","GridItem","CardBody","CreateTaskExtOrdOther","DuplicateTaskExtOrdOther","jsxDEV","_jsxDEV","Fragment","_Fragment","RegisterTaskOtherScreen","_s","_useState","_useState2","_slicedToArray","taskType","setTaskType","children","xs","md","style","margin","fullWidth","id","fileName","_jsxFileName","lineNumber","columnNumber","_this","labelId","value","label","onChange","e","target","_c","$RefreshReg$"],"sources":["C:/trabajo/Alehope/actividadesPreBuild/Frontend/src/screens/control-panel/Catalog/TaskOther/RegisterTaskOtherScreen/RegisterTaskOtherScreen.js"],"sourcesContent":["import { useEffect, useState } from 'react'\r\nimport { Card, FormControl, InputLabel, MenuItem, Select } from '@material-ui/core'\r\nimport GridContainer from 'components/Grid/GridContainer'\r\nimport GridItem from 'components/Grid/GridItem'\r\nimport CardBody from 'components/Card/CardBody'\r\nimport CreateTaskExtOrdOther from './components/CreateTaskExtOrdOther'\r\nimport DuplicateTaskExtOrdOther from './components/DuplicateTaskExtOrdOther'\r\n\r\nconst RegisterTaskOtherScreen = () => {\r\n  const [taskType, setTaskType] = useState('')\r\n\r\n  useEffect(() => {\r\n    return () => setTaskType('')\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <GridContainer>\r\n        <GridItem xs={12} md={8} style={{ margin: 'auto' }}>\r\n          <Card>\r\n            <CardBody>\r\n              <GridContainer>\r\n                <GridItem xs={12}>\r\n                  <FormControl fullWidth>\r\n                    <InputLabel id='task-action-type'>Tipo de Registro</InputLabel>\r\n                    <Select\r\n                      labelId='task-action-type'\r\n                      id='task-action-type'\r\n                      value={taskType}\r\n                      label='task-action-type'\r\n                      onChange={(e) => setTaskType(e.target.value)}\r\n                    >\r\n                      <MenuItem value={'create'}>Crear tarea nueva</MenuItem>\r\n                      <MenuItem value={'duplicate'}>Duplicar tareas de perfil</MenuItem>\r\n                    </Select>\r\n                  </FormControl>\r\n                </GridItem>\r\n                {taskType === 'create' ? (\r\n                  <CreateTaskExtOrdOther taskType={taskType} setTaskType={setTaskType} />\r\n                ) : taskType === 'duplicate' ? (\r\n                  <DuplicateTaskExtOrdOther taskType={taskType} setTaskType={setTaskType} />\r\n                ) : (\r\n                  <></>\r\n                )}\r\n              </GridContainer>\r\n            </CardBody>\r\n          </Card>\r\n        </GridItem>\r\n      </GridContainer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default RegisterTaskOtherScreen\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}