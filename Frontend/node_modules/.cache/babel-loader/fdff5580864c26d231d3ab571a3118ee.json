{"ast":null,"code":"import _objectSpread from \"C:/trabajo/Alehope/actividadesPreBuild/Frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _jsxFileName = \"C:\\\\trabajo\\\\Alehope\\\\actividadesPreBuild\\\\Frontend\\\\src\\\\screens\\\\control-panel\\\\Catalog\\\\ObjetivesGeneral\\\\ObjetiveGeneralRegisterScreen\\\\components\\\\GeneralTaskSelect.js\",\n  _this = this,\n  _s = $RefreshSig$();\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { FormControl, Select as Selectable, InputLabel, makeStyles, MenuItem } from '@material-ui/core';\nimport GridItem from 'components/Grid/GridItem';\nimport { getTaskGenerals } from 'redux/actions/taskGeneralActions';\nimport { TASK_GENERAL_LIST_RESET } from 'redux/constants/taskGeneralConstants';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar GeneralTaskSelect = function GeneralTaskSelect(_ref) {\n  _s();\n  var toggleHasDifficulty = _ref.toggleHasDifficulty,\n    objetiveGeneral = _ref.objetiveGeneral,\n    setObjetiveGeneral = _ref.setObjetiveGeneral;\n  var dispatch = useDispatch();\n  var classes = {};\n  var _useSelector = useSelector(function (state) {\n      return state.taskGeneralList;\n    }),\n    loadingTaskGeneralList = _useSelector.loadingTaskGeneralList,\n    taskGenerals = _useSelector.taskGenerals,\n    successTaskGeneralList = _useSelector.successTaskGeneralList;\n  useEffect(function () {\n    if (!successTaskGeneralList) {\n      dispatch(getTaskGenerals());\n    }\n  }, [successTaskGeneralList]);\n  useEffect(function () {\n    return function () {\n      return dispatch({\n        type: TASK_GENERAL_LIST_RESET\n      });\n    };\n  }, [dispatch]);\n  var handleChange = function handleChange(e) {\n    var dificultad = e.target.value.dificultad;\n    setObjetiveGeneral(_objectSpread(_objectSpread({}, objetiveGeneral), {}, {\n      task: e.target.value\n    }));\n    dificultad === 'SI' && toggleHasDifficulty(true);\n  };\n  var isEmpty = function isEmpty(array) {\n    return array.length <= 0;\n  };\n  return /*#__PURE__*/_jsxDEV(GridItem, {\n    xs: 6,\n    children: loadingTaskGeneralList ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"Cargando\"\n    }, void 0, false) : taskGenerals && /*#__PURE__*/_jsxDEV(FormControl, {\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        htmlFor: \"tasks\",\n        children: isEmpty(taskGenerals) ? 'No hay tareas para seleccionar' : 'Tareas Generales'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, _this), /*#__PURE__*/_jsxDEV(Selectable, {\n        MenuProps: {\n          className: classes.selectMenu\n        },\n        className: classes.select,\n        value: objetiveGeneral.task,\n        onChange: function onChange(e) {\n          return handleChange(e);\n        },\n        disabled: isEmpty(taskGenerals),\n        inputProps: {\n          name: 'tasks',\n          id: 'tasks'\n        },\n        children: [(taskGenerals === null || taskGenerals === void 0 ? void 0 : taskGenerals.length) > 0 && /*#__PURE__*/_jsxDEV(MenuItem, {\n          disabled: true,\n          classes: {\n            root: classes.selectMenuItem\n          },\n          children: \"Seleccione una tarea\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, _this), (taskGenerals === null || taskGenerals === void 0 ? void 0 : taskGenerals.length) > 0 ? taskGenerals.map(function (task, index) {\n          return /*#__PURE__*/_jsxDEV(MenuItem, {\n            classes: {\n              root: classes.selectMenuItem,\n              selected: classes.selectMenuItemSelected\n            },\n            value: task,\n            id: task.id_tarea,\n            children: task.descripcion_tarea\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 19\n          }, _this);\n        }) : /*#__PURE__*/_jsxDEV(MenuItem, {\n          disabled: true,\n          children: \"No hay tareas de generales para seleccionar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, _this);\n};\n_s(GeneralTaskSelect, \"YAPBKMSbBJzJlANKIaXlPPViT0E=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = GeneralTaskSelect;\nexport default GeneralTaskSelect;\nvar _c;\n$RefreshReg$(_c, \"GeneralTaskSelect\");","map":{"version":3,"names":["useEffect","useDispatch","useSelector","FormControl","Select","Selectable","InputLabel","makeStyles","MenuItem","GridItem","getTaskGenerals","TASK_GENERAL_LIST_RESET","Fragment","_Fragment","jsxDEV","_jsxDEV","GeneralTaskSelect","_ref","_s","toggleHasDifficulty","objetiveGeneral","setObjetiveGeneral","dispatch","classes","_useSelector","state","taskGeneralList","loadingTaskGeneralList","taskGenerals","successTaskGeneralList","type","handleChange","e","dificultad","target","value","_objectSpread","task","isEmpty","array","length","xs","children","fullWidth","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","_this","MenuProps","className","selectMenu","select","onChange","disabled","inputProps","name","id","root","selectMenuItem","map","index","selected","selectMenuItemSelected","id_tarea","descripcion_tarea","_c","$RefreshReg$"],"sources":["C:/trabajo/Alehope/actividadesPreBuild/Frontend/src/screens/control-panel/Catalog/ObjetivesGeneral/ObjetiveGeneralRegisterScreen/components/GeneralTaskSelect.js"],"sourcesContent":["import { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { FormControl, Select as Selectable, InputLabel, makeStyles, MenuItem } from '@material-ui/core'\r\nimport GridItem from 'components/Grid/GridItem'\r\nimport { getTaskGenerals } from 'redux/actions/taskGeneralActions'\r\nimport { TASK_GENERAL_LIST_RESET } from 'redux/constants/taskGeneralConstants'\r\n\r\nconst GeneralTaskSelect = ({ toggleHasDifficulty, objetiveGeneral, setObjetiveGeneral }) => {\r\n  const dispatch = useDispatch()\r\n  const classes = {}\r\n\r\n  const { loadingTaskGeneralList, taskGenerals, successTaskGeneralList } = useSelector((state) => state.taskGeneralList)\r\n\r\n  useEffect(() => {\r\n    if (!successTaskGeneralList) {\r\n      dispatch(getTaskGenerals())\r\n    }\r\n  }, [successTaskGeneralList])\r\n\r\n  useEffect(() => {\r\n    return () => dispatch({ type: TASK_GENERAL_LIST_RESET })\r\n  }, [dispatch])\r\n\r\n  const handleChange = (e) => {\r\n    const { dificultad } = e.target.value\r\n    setObjetiveGeneral({ ...objetiveGeneral, task: e.target.value })\r\n    dificultad === 'SI' && toggleHasDifficulty(true)\r\n  }\r\n\r\n  const isEmpty = (array) => array.length <= 0\r\n\r\n  return (\r\n    <GridItem xs={6}>\r\n      {loadingTaskGeneralList ? (\r\n        <>Cargando</>\r\n      ) : (\r\n        taskGenerals && (\r\n          <FormControl fullWidth>\r\n            <InputLabel htmlFor='tasks'>\r\n              {isEmpty(taskGenerals) ? 'No hay tareas para seleccionar' : 'Tareas Generales'}\r\n            </InputLabel>\r\n            <Selectable\r\n              MenuProps={{\r\n                className: classes.selectMenu,\r\n              }}\r\n              className={classes.select}\r\n              value={objetiveGeneral.task}\r\n              onChange={(e) => handleChange(e)}\r\n              disabled={isEmpty(taskGenerals)}\r\n              inputProps={{\r\n                name: 'tasks',\r\n                id: 'tasks',\r\n              }}\r\n            >\r\n              {taskGenerals?.length > 0 && (\r\n                <MenuItem\r\n                  disabled\r\n                  classes={{\r\n                    root: classes.selectMenuItem,\r\n                  }}\r\n                >\r\n                  Seleccione una tarea\r\n                </MenuItem>\r\n              )}\r\n              {taskGenerals?.length > 0 ? (\r\n                taskGenerals.map((task, index) => (\r\n                  <MenuItem\r\n                    classes={{ root: classes.selectMenuItem, selected: classes.selectMenuItemSelected }}\r\n                    value={task}\r\n                    id={task.id_tarea}\r\n                    key={index}\r\n                  >\r\n                    {task.descripcion_tarea}\r\n                  </MenuItem>\r\n                ))\r\n              ) : (\r\n                <MenuItem disabled>No hay tareas de generales para seleccionar</MenuItem>\r\n              )}\r\n            </Selectable>\r\n          </FormControl>\r\n        )\r\n      )}\r\n    </GridItem>\r\n  )\r\n}\r\n\r\nexport default GeneralTaskSelect\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}