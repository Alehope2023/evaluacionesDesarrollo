{"ast":null,"code":"import _objectSpread from \"C:/trabajo/Alehope/actividadesPreBuild/Frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"C:/trabajo/Alehope/actividadesPreBuild/Frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"C:\\\\trabajo\\\\Alehope\\\\actividadesPreBuild\\\\Frontend\\\\src\\\\screens\\\\control-panel\\\\ActivitiesListScreen\\\\components\\\\UpdateActivityModal.js\",\n  _this = this,\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { format } from 'date-fns';\nimport { FormControl, InputLabel, ListItemText, makeStyles, MenuItem, Select } from '@material-ui/core';\nimport GridContainer from 'components/Grid/GridContainer';\nimport GridItem from 'components/Grid/GridItem';\nimport UpdateActionModal from 'components/ReactTableActions/Update/UpdateActionModal';\nimport CustomInput from 'components/CustomInput/CustomInput';\nimport DateFnsUtils from '@date-io/date-fns';\nimport esLocale from \"date-fns/locale/es\";\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from \"@material-ui/pickers\";\nimport TasksSelect from '../ActivitiesRegisterScreen/components/TasksSelect';\nimport { updateActivity } from 'redux/actions/activitiesActions';\nimport { ACTIVITIES_UPDATE_RESET, ACTIVITIES_LIST_RESET } from 'redux/constants/activitiesConstants';\nimport styles from '../styles/activitiesScreenStyles';\nimport SnackbarContent from 'components/Snackbar/SnackbarContent';\nimport { getConfiguracions } from 'redux/actions/configuracionActions';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar useStyles = makeStyles(styles);\nvar UpdateActivityModal = function UpdateActivityModal(_ref) {\n  _s();\n  var _updateInfo$tarea$, _updateInfo$tarea$2, _updateInfo$tarea$3;\n  var updateActivityModal = _ref.updateActivityModal,\n    closeUpdateActivityModal = _ref.closeUpdateActivityModal,\n    info = _ref.info;\n  var classes = useStyles();\n  var dispatch = useDispatch();\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    limiteFechas = _useState2[0],\n    setLimiteFechas = _useState2[1];\n  var _useSelector = useSelector(function (state) {\n      return state.configuracionList;\n    }),\n    configuracions = _useSelector.configuracions,\n    successConfiguracionList = _useSelector.successConfiguracionList;\n  useEffect(function () {\n    if (successConfiguracionList) {\n      var currentDate = new Date();\n      var rangoFechas = {\n        fecha_minima: currentDate,\n        fecha_maxima: new Date(currentDate.getFullYear(), currentDate.getMonth() + 2, 0)\n      };\n      var parametro_seleccionado = configuracions.filter(function (configuracion) {\n        return configuracion.parametro == 'registro_actividad';\n      })[0];\n      if (rangoFechas.fecha_minima.getDate() > parametro_seleccionado.valor) {\n        //Es el 1 del mes actual\n        rangoFechas.fecha_minima = new Date(currentDate.getFullYear(), currentDate.getMonth(), 1);\n      } else {\n        //Es el 1 del mes anterior\n        rangoFechas.fecha_minima = new Date(currentDate.getFullYear(), currentDate.getMonth() - 1, 1);\n      }\n      setLimiteFechas(rangoFechas);\n    } else {\n      dispatch(getConfiguracions());\n    }\n  }, [successConfiguracionList]);\n  var _useState3 = useState(_objectSpread(_objectSpread({}, info), {}, {\n      fecha_actividad: new Date(info.fecha_actividad),\n      fecha_modificacion: format(new Date(), 'yyyy-MM-dd'),\n      tarea: []\n      //unidades: info?.unidades || '',\n    })),\n    _useState4 = _slicedToArray(_useState3, 2),\n    updateInfo = _useState4[0],\n    setUpdateInfo = _useState4[1];\n  var _useState5 = useState(info.id_tarea),\n    _useState6 = _slicedToArray(_useState5, 2),\n    task = _useState6[0],\n    setTask = _useState6[1];\n  var _useState7 = useState( /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)),\n    _useState8 = _slicedToArray(_useState7, 2),\n    componenteCodigoTrazabilidad = _useState8[0],\n    setComponenteCodigoTrazabilidad = _useState8[1];\n  var _useState9 = useState(''),\n    _useState10 = _slicedToArray(_useState9, 2),\n    errorCodigosTrazabilidad = _useState10[0],\n    setErrorCodigosTrazabilidad = _useState10[1];\n  var cambioTareaSeleccionada = function cambioTareaSeleccionada(tarea_seleccionada) {\n    setTask(tarea_seleccionada.id_tarea);\n    if ((tarea_seleccionada === null || tarea_seleccionada === void 0 ? void 0 : tarea_seleccionada.cuantificable) === 'NO') {\n      //reseteamos las unidades.\n      updateInfo.unidades = '';\n      updateInfo.codigos_trazabilidad = [];\n    } else {\n      if ((tarea_seleccionada === null || tarea_seleccionada === void 0 ? void 0 : tarea_seleccionada.codigo_trazabilidad) == 'NO') {\n        //No lleva codigos de trazabilidad lo reseteamos.\n        updateInfo.codigos_trazabilidad = [];\n      }\n    }\n    setUpdateInfo(_objectSpread(_objectSpread({}, updateInfo), {}, {\n      tarea: [tarea_seleccionada]\n    }));\n    construirCodigoTrazabilidad(tarea_seleccionada, updateInfo.unidades);\n  };\n  var construirCodigoTrazabilidad = function construirCodigoTrazabilidad(tarea_seleccionada, unidades) {\n    if ((tarea_seleccionada === null || tarea_seleccionada === void 0 ? void 0 : tarea_seleccionada.cuantificable) === 'SI' && (tarea_seleccionada === null || tarea_seleccionada === void 0 ? void 0 : tarea_seleccionada.codigo_trazabilidad) != 'NO' && unidades > 0) {\n      var listado = [];\n      var expRegNumExp = /^[0-9]{3}\\/[0-9]{4}\\/[0-9]{5}$/;\n      var _loop = function _loop(i) {\n        var incorrecto_formato = false;\n        if ((tarea_seleccionada === null || tarea_seleccionada === void 0 ? void 0 : tarea_seleccionada.codigo_trazabilidad) == 'Nº Expediente') {\n          incorrecto_formato = !expRegNumExp.test(updateInfo.codigos_trazabilidad[i]);\n        }\n        listado.push( /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(GridItem, {\n            xs: 12,\n            children: [/*#__PURE__*/_jsxDEV(CustomInput, {\n              labelText: tarea_seleccionada === null || tarea_seleccionada === void 0 ? void 0 : tarea_seleccionada.codigo_trazabilidad,\n              id: \"codigo_trazabilidad\",\n              formControlProps: {\n                fullWidth: true\n              },\n              inputProps: {\n                value: updateInfo.codigos_trazabilidad[i],\n                onChange: function onChange(e) {\n                  updateInfo.codigos_trazabilidad[i] = e.target.value;\n                  construirCodigoTrazabilidad(tarea_seleccionada, unidades);\n                },\n                type: 'text',\n                maxLength: 50,\n                disabled: (tarea_seleccionada === null || tarea_seleccionada === void 0 ? void 0 : tarea_seleccionada.cuantificable) === 'SI' ? false : true,\n                required: (tarea_seleccionada === null || tarea_seleccionada === void 0 ? void 0 : tarea_seleccionada.codigo_trazabilidad) !== 'NO' ? true : false\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 17\n            }, _this), incorrecto_formato && /*#__PURE__*/_jsxDEV(GridItem, {\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: classes.incorrect_format,\n                children: \"El formato es incorrecto tiene que ser:  nnn/nnnn/nnnnn (n: C\\xF3digo n\\xFAmerico)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 21\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 20\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, _this)\n        }, void 0, false));\n      };\n      for (var i = 0; i < unidades; i++) {\n        _loop(i);\n      }\n      setComponenteCodigoTrazabilidad(listado);\n    } else {\n      setComponenteCodigoTrazabilidad( /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false));\n    }\n  };\n  var _useSelector2 = useSelector(function (state) {\n      return state.activitiesUpdate;\n    }),\n    loadingActivitiesUpdate = _useSelector2.loadingActivitiesUpdate,\n    successActivitiesUpdate = _useSelector2.successActivitiesUpdate,\n    errorActivitiesUpdate = _useSelector2.errorActivitiesUpdate;\n  useEffect(function () {\n    if (successActivitiesUpdate) {\n      dispatch({\n        type: ACTIVITIES_LIST_RESET\n      });\n      dispatch({\n        type: ACTIVITIES_UPDATE_RESET\n      });\n      setErrorCodigosTrazabilidad('');\n      closeUpdateActivityModal();\n    }\n  }, [successActivitiesUpdate]);\n  useEffect(function () {\n    return function () {\n      return dispatch({\n        type: ACTIVITIES_UPDATE_RESET\n      });\n    };\n  }, [dispatch]);\n  var handleUpdate = function handleUpdate(e) {\n    e.preventDefault();\n\n    //Validamos los codigos de trazabilidad si son de nº de expediente.\n    if (updateInfo.tarea[0].codigo_trazabilidad == 'Nº Expediente') {\n      var expRegNumExp = /^[0-9]{3}\\/[0-9]{4}\\/[0-9]{5}$/;\n      for (var i = 0; i < updateInfo.codigos_trazabilidad.length; i++) {\n        if (!expRegNumExp.test(updateInfo.codigos_trazabilidad[i])) {\n          return setErrorCodigosTrazabilidad('Tiene códigos de trazabilidad incorrectos.');\n        }\n      }\n    }\n    dispatch(updateActivity(_objectSpread(_objectSpread({}, updateInfo), {}, {\n      fecha_actividad: format(updateInfo.fecha_actividad, 'yyyy-MM-dd'),\n      codigos_trazabilidad: updateInfo.codigos_trazabilidad.slice(0, updateInfo.unidades)\n    })));\n  };\n  return /*#__PURE__*/_jsxDEV(UpdateActionModal, {\n    open: updateActivityModal,\n    handleCloseModal: closeUpdateActivityModal,\n    errorUpdate: errorActivitiesUpdate,\n    succesUpdate: successActivitiesUpdate,\n    loadingUpdate: loadingActivitiesUpdate,\n    modalTitle: \"Editar de Actividad\",\n    handleSubmit: handleUpdate,\n    children: /*#__PURE__*/_jsxDEV(GridContainer, {\n      children: [/*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n        locale: esLocale,\n        utils: DateFnsUtils,\n        children: /*#__PURE__*/_jsxDEV(GridItem, {\n          xs: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(KeyboardDatePicker, {\n            disableToolbar: true,\n            format: \"dd/MM/yyyy\",\n            margin: \"normal\",\n            minDate: new Date('12/01/2021'),\n            maxDate: limiteFechas.fecha_maxima,\n            id: \"fecha_actividad\",\n            label: \"Fecha de Actividad\",\n            value: updateInfo.fecha_actividad,\n            onChange: function onChange(e) {\n              return setUpdateInfo(_objectSpread(_objectSpread({}, updateInfo), {}, {\n                fecha_actividad: e\n              }));\n            },\n            required: true,\n            KeyboardButtonProps: {\n              \"aria-label\": \"change date\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 15\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(TasksSelect, {\n        activityInfo: updateInfo,\n        setActivityInfo: setUpdateInfo,\n        task: task,\n        setTask: cambioTareaSeleccionada\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"modalidad\",\n            children: \"Modalidad\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(Select, {\n            labelId: \"modalidad\",\n            id: \"modalidad\",\n            className: classes.select,\n            value: updateInfo.modalidad,\n            required: true,\n            onChange: function onChange(e) {\n              return setUpdateInfo(_objectSpread(_objectSpread({}, updateInfo), {}, {\n                modalidad: e.target.value\n              }));\n            },\n            MenuProps: {\n              className: classes.selectMenu\n            },\n            children: ['Oficina', 'Teletrabajo', 'N/A'].map(function (modalidad, index) {\n              return /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: modalidad,\n                children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: modalidad\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 207,\n                  columnNumber: 21\n                }, _this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 19\n              }, _this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 15\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(CustomInput, {\n          labelText: 'Horas',\n          id: \"horas\",\n          formControlProps: {\n            fullWidth: true\n          },\n          inputProps: {\n            value: updateInfo.horas,\n            onChange: function onChange(e) {\n              return setUpdateInfo(_objectSpread(_objectSpread({}, updateInfo), {}, {\n                horas: e.target.value\n              }));\n            },\n            type: 'number',\n            required: true\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(CustomInput, {\n          labelText: 'Unidades',\n          id: \"unidades\",\n          formControlProps: {\n            fullWidth: true\n          },\n          inputProps: {\n            value: updateInfo.unidades,\n            onChange: function onChange(e) {\n              setUpdateInfo(_objectSpread(_objectSpread({}, updateInfo), {}, {\n                unidades: e.target.value\n              }));\n              construirCodigoTrazabilidad(updateInfo === null || updateInfo === void 0 ? void 0 : updateInfo.tarea[0], e.target.value);\n            },\n            type: 'number',\n            disabled: (updateInfo === null || updateInfo === void 0 ? void 0 : (_updateInfo$tarea$ = updateInfo.tarea[0]) === null || _updateInfo$tarea$ === void 0 ? void 0 : _updateInfo$tarea$.cuantificable) === 'SI' ? false : true,\n            required: (updateInfo === null || updateInfo === void 0 ? void 0 : (_updateInfo$tarea$2 = updateInfo.tarea[0]) === null || _updateInfo$tarea$2 === void 0 ? void 0 : _updateInfo$tarea$2.cuantificable) === 'SI' ? true : false\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 11\n      }, _this), (updateInfo === null || updateInfo === void 0 ? void 0 : (_updateInfo$tarea$3 = updateInfo.tarea[0]) === null || _updateInfo$tarea$3 === void 0 ? void 0 : _updateInfo$tarea$3.codigo_trazabilidad) != 'NO' && (updateInfo === null || updateInfo === void 0 ? void 0 : updateInfo.unidades) > 0 && componenteCodigoTrazabilidad, /*#__PURE__*/_jsxDEV(GridItem, {\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(CustomInput, {\n          labelText: 'Observaciones',\n          id: \"observaciones\",\n          formControlProps: {\n            fullWidth: true\n          },\n          inputProps: {\n            value: updateInfo.observaciones,\n            onChange: function onChange(e) {\n              return setUpdateInfo(_objectSpread(_objectSpread({}, updateInfo), {}, {\n                observaciones: e.target.value\n              }));\n            },\n            type: 'text',\n            maxLength: 200\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 11\n      }, _this), errorCodigosTrazabilidad && /*#__PURE__*/_jsxDEV(GridItem, {\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(SnackbarContent, {\n          message: errorCodigosTrazabilidad,\n          color: \"danger\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 15\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 13\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 5\n  }, _this);\n};\n_s(UpdateActivityModal, \"K1DlFhSrpMyPFEHyt6tW8XUcH/w=\", false, function () {\n  return [useStyles, useDispatch, useSelector, useSelector];\n});\n_c = UpdateActivityModal;\nexport default UpdateActivityModal;\nvar _c;\n$RefreshReg$(_c, \"UpdateActivityModal\");","map":{"version":3,"names":["useEffect","useState","useDispatch","useSelector","format","FormControl","InputLabel","ListItemText","makeStyles","MenuItem","Select","GridContainer","GridItem","UpdateActionModal","CustomInput","DateFnsUtils","esLocale","MuiPickersUtilsProvider","KeyboardDatePicker","TasksSelect","updateActivity","ACTIVITIES_UPDATE_RESET","ACTIVITIES_LIST_RESET","styles","SnackbarContent","getConfiguracions","Fragment","_Fragment","jsxDEV","_jsxDEV","useStyles","UpdateActivityModal","_ref","_s","_updateInfo$tarea$","_updateInfo$tarea$2","_updateInfo$tarea$3","updateActivityModal","closeUpdateActivityModal","info","classes","dispatch","_useState","_useState2","_slicedToArray","limiteFechas","setLimiteFechas","_useSelector","state","configuracionList","configuracions","successConfiguracionList","currentDate","Date","rangoFechas","fecha_minima","fecha_maxima","getFullYear","getMonth","parametro_seleccionado","filter","configuracion","parametro","getDate","valor","_useState3","_objectSpread","fecha_actividad","fecha_modificacion","tarea","_useState4","updateInfo","setUpdateInfo","_useState5","id_tarea","_useState6","task","setTask","_useState7","_useState8","componenteCodigoTrazabilidad","setComponenteCodigoTrazabilidad","_useState9","_useState10","errorCodigosTrazabilidad","setErrorCodigosTrazabilidad","cambioTareaSeleccionada","tarea_seleccionada","cuantificable","unidades","codigos_trazabilidad","codigo_trazabilidad","construirCodigoTrazabilidad","listado","expRegNumExp","_loop","i","incorrecto_formato","test","push","children","xs","labelText","id","formControlProps","fullWidth","inputProps","value","onChange","e","target","type","maxLength","disabled","required","fileName","_jsxFileName","lineNumber","columnNumber","_this","className","incorrect_format","_useSelector2","activitiesUpdate","loadingActivitiesUpdate","successActivitiesUpdate","errorActivitiesUpdate","handleUpdate","preventDefault","length","slice","open","handleCloseModal","errorUpdate","succesUpdate","loadingUpdate","modalTitle","handleSubmit","locale","utils","md","disableToolbar","margin","minDate","maxDate","label","KeyboardButtonProps","activityInfo","setActivityInfo","labelId","select","modalidad","MenuProps","selectMenu","map","index","primary","horas","observaciones","message","color","_c","$RefreshReg$"],"sources":["C:/trabajo/Alehope/actividadesPreBuild/Frontend/src/screens/control-panel/ActivitiesListScreen/components/UpdateActivityModal.js"],"sourcesContent":["import { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { format } from 'date-fns'\r\nimport { FormControl, InputLabel, ListItemText, makeStyles, MenuItem, Select } from '@material-ui/core'\r\nimport GridContainer from 'components/Grid/GridContainer'\r\nimport GridItem from 'components/Grid/GridItem'\r\nimport UpdateActionModal from 'components/ReactTableActions/Update/UpdateActionModal'\r\nimport CustomInput from 'components/CustomInput/CustomInput'\r\nimport DateFnsUtils from '@date-io/date-fns'\r\nimport esLocale from \"date-fns/locale/es\";\r\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from \"@material-ui/pickers\";\r\nimport TasksSelect from '../ActivitiesRegisterScreen/components/TasksSelect'\r\nimport { updateActivity } from 'redux/actions/activitiesActions'\r\nimport { ACTIVITIES_UPDATE_RESET, ACTIVITIES_LIST_RESET } from 'redux/constants/activitiesConstants'\r\nimport styles from '../styles/activitiesScreenStyles'\r\nimport SnackbarContent from 'components/Snackbar/SnackbarContent'\r\nimport { getConfiguracions } from 'redux/actions/configuracionActions'\r\n\r\nconst useStyles = makeStyles(styles)\r\n\r\nconst UpdateActivityModal = ({ updateActivityModal, closeUpdateActivityModal, info }) => {\r\n  const classes = useStyles()\r\n  const dispatch = useDispatch()\r\n\r\n  const [limiteFechas, setLimiteFechas] = useState('')\r\n  const { configuracions, successConfiguracionList } = useSelector((state) => state.configuracionList)\r\n\r\n  useEffect(() => {\r\n    if (successConfiguracionList) {\r\n      const currentDate = new Date()\r\n      const rangoFechas = {\r\n        fecha_minima: currentDate,\r\n        fecha_maxima: new Date(currentDate.getFullYear(), currentDate.getMonth() + 2, 0)\r\n      }\r\n\r\n      const parametro_seleccionado = configuracions.filter((configuracion) => configuracion.parametro == 'registro_actividad' )[0];\r\n      if(rangoFechas.fecha_minima.getDate() > parametro_seleccionado.valor) {\r\n        //Es el 1 del mes actual\r\n        rangoFechas.fecha_minima = new Date(currentDate.getFullYear(), currentDate.getMonth(), 1);\r\n      }\r\n      else {\r\n        //Es el 1 del mes anterior\r\n        rangoFechas.fecha_minima = new Date(currentDate.getFullYear(), currentDate.getMonth()-1, 1);\r\n      }      \r\n      setLimiteFechas(rangoFechas)\r\n    }\r\n    else {\r\n      dispatch(getConfiguracions())\r\n    }\r\n    \r\n  }, [successConfiguracionList])\r\n\r\n  const [updateInfo, setUpdateInfo] = useState({\r\n    ...info,\r\n    fecha_actividad: new Date(info.fecha_actividad),\r\n    fecha_modificacion: format(new Date(), 'yyyy-MM-dd'),\r\n    tarea: [],\r\n    //unidades: info?.unidades || '',\r\n  })\r\n  const [task, setTask] = useState(info.id_tarea)\r\n  const [componenteCodigoTrazabilidad, setComponenteCodigoTrazabilidad] = useState(<></>)\r\n  const [errorCodigosTrazabilidad, setErrorCodigosTrazabilidad] = useState('')\r\n\r\n  const cambioTareaSeleccionada = (tarea_seleccionada) => {\r\n    setTask(tarea_seleccionada.id_tarea)\r\n    if(tarea_seleccionada?.cuantificable === 'NO') {\r\n      //reseteamos las unidades.\r\n      updateInfo.unidades = ''\r\n      updateInfo.codigos_trazabilidad = []\r\n    }\r\n    else {\r\n      if (tarea_seleccionada?.codigo_trazabilidad == 'NO') {\r\n        //No lleva codigos de trazabilidad lo reseteamos.\r\n        updateInfo.codigos_trazabilidad = []\r\n      }\r\n    }\r\n    setUpdateInfo({...updateInfo, tarea: [tarea_seleccionada]})\r\n    construirCodigoTrazabilidad(tarea_seleccionada, updateInfo.unidades)\r\n  }\r\n\r\n  const construirCodigoTrazabilidad = (tarea_seleccionada, unidades) => {\r\n    if (tarea_seleccionada?.cuantificable === 'SI' && \r\n        tarea_seleccionada?.codigo_trazabilidad != 'NO'  && unidades > 0) {\r\n      var listado = []\r\n      const expRegNumExp = /^[0-9]{3}\\/[0-9]{4}\\/[0-9]{5}$/;\r\n      for(let i = 0; i < unidades; i++) {\r\n          let incorrecto_formato = false\r\n\r\n          if(tarea_seleccionada?.codigo_trazabilidad == 'Nº Expediente') {\r\n            incorrecto_formato = !expRegNumExp.test(updateInfo.codigos_trazabilidad[i]);\r\n          }\r\n\r\n          listado.push(\r\n            <>\r\n              <GridItem xs={12}>\r\n                <CustomInput                    \r\n                  labelText={tarea_seleccionada?.codigo_trazabilidad}                    \r\n                  id='codigo_trazabilidad'\r\n                  formControlProps={{\r\n                    fullWidth: true,\r\n                  }}\r\n                  inputProps={{\r\n                    value: updateInfo.codigos_trazabilidad[i],\r\n                    onChange: (e) => { updateInfo.codigos_trazabilidad[i] = e.target.value; construirCodigoTrazabilidad(tarea_seleccionada, unidades)},\r\n                    type: 'text',\r\n                    maxLength: 50,\r\n                    disabled: tarea_seleccionada?.cuantificable === 'SI' ? false : true,\r\n                    required: tarea_seleccionada?.codigo_trazabilidad !== 'NO' ? true : false,\r\n                  }}\r\n                />\r\n                {incorrecto_formato &&\r\n                  (<GridItem xs={12}>\r\n                    <span className={classes.incorrect_format}>El formato es incorrecto tiene que ser:  nnn/nnnn/nnnnn (n: Código númerico)</span>\r\n                  </GridItem>\r\n                )}\r\n              </GridItem>\r\n            </>\r\n          )\r\n      }\r\n      setComponenteCodigoTrazabilidad(listado)\r\n    }\r\n    else {\r\n      setComponenteCodigoTrazabilidad(<></>)\r\n    }\r\n  }\r\n\r\n\r\n  const { loadingActivitiesUpdate, successActivitiesUpdate, errorActivitiesUpdate } = useSelector(\r\n    (state) => state.activitiesUpdate\r\n  )\r\n  useEffect(() => {\r\n    if (successActivitiesUpdate) {\r\n      dispatch({ type: ACTIVITIES_LIST_RESET })\r\n      dispatch({ type: ACTIVITIES_UPDATE_RESET })\r\n      setErrorCodigosTrazabilidad('')\r\n      closeUpdateActivityModal()\r\n    }\r\n  }, [successActivitiesUpdate])\r\n\r\n  useEffect(() => {\r\n    return () => dispatch({ type: ACTIVITIES_UPDATE_RESET })\r\n  }, [dispatch])\r\n\r\n  const handleUpdate = (e) => {\r\n    e.preventDefault()\r\n\r\n    //Validamos los codigos de trazabilidad si son de nº de expediente.\r\n    if(updateInfo.tarea[0].codigo_trazabilidad == 'Nº Expediente') {\r\n      const expRegNumExp = /^[0-9]{3}\\/[0-9]{4}\\/[0-9]{5}$/;\r\n      for(let i = 0; i < updateInfo.codigos_trazabilidad.length; i++) {\r\n        if(!expRegNumExp.test(updateInfo.codigos_trazabilidad[i])) {\r\n          return setErrorCodigosTrazabilidad('Tiene códigos de trazabilidad incorrectos.')\r\n        }\r\n      }\r\n    }\r\n\r\n    dispatch(updateActivity({ ...updateInfo,  fecha_actividad: format(updateInfo.fecha_actividad, 'yyyy-MM-dd'), codigos_trazabilidad: updateInfo.codigos_trazabilidad.slice(0, updateInfo.unidades) }))\r\n  }\r\n\r\n  return (\r\n    <UpdateActionModal\r\n      open={updateActivityModal}\r\n      handleCloseModal={closeUpdateActivityModal}\r\n      errorUpdate={errorActivitiesUpdate}\r\n      succesUpdate={successActivitiesUpdate}\r\n      loadingUpdate={loadingActivitiesUpdate}\r\n      modalTitle={`Editar de Actividad`}\r\n      handleSubmit={handleUpdate}\r\n      children={\r\n        <GridContainer>\r\n          <MuiPickersUtilsProvider locale={esLocale} utils={DateFnsUtils}>\r\n            <GridItem xs={12} md={6}>\r\n              <KeyboardDatePicker\r\n                disableToolbar\r\n                format=\"dd/MM/yyyy\"\r\n                margin=\"normal\"\r\n                minDate={new Date('12/01/2021')}\r\n                maxDate={limiteFechas.fecha_maxima}\r\n                id=\"fecha_actividad\"\r\n                label=\"Fecha de Actividad\"\r\n                value={updateInfo.fecha_actividad}\r\n                onChange={(e) => setUpdateInfo({ ...updateInfo, fecha_actividad: e })}\r\n                required={true}\r\n                KeyboardButtonProps={{\r\n                  \"aria-label\": \"change date\"\r\n                }}\r\n              />\r\n            </GridItem>\r\n          </MuiPickersUtilsProvider>\r\n          <TasksSelect activityInfo={updateInfo} setActivityInfo={setUpdateInfo} task={task} setTask={cambioTareaSeleccionada} />\r\n          <GridItem xs={12}>\r\n            <FormControl fullWidth>\r\n              <InputLabel id='modalidad'>Modalidad</InputLabel>\r\n              <Select\r\n                labelId='modalidad'\r\n                id='modalidad'\r\n                className={classes.select}\r\n                value={updateInfo.modalidad}\r\n                required={true}\r\n                onChange={(e) => setUpdateInfo({ ...updateInfo, modalidad: e.target.value })}\r\n                MenuProps={{\r\n                  className: classes.selectMenu,\r\n                }}\r\n              >\r\n                {['Oficina', 'Teletrabajo', 'N/A'].map((modalidad, index) => (\r\n                  <MenuItem key={index} value={modalidad}>\r\n                    <ListItemText primary={modalidad} />\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n          </GridItem>\r\n          <GridItem xs={12} md={6}>\r\n            <CustomInput\r\n              labelText={'Horas'}\r\n              id='horas'\r\n              formControlProps={{\r\n                fullWidth: true,\r\n              }}\r\n              inputProps={{\r\n                value: updateInfo.horas,\r\n                onChange: (e) => setUpdateInfo({ ...updateInfo, horas: e.target.value }),\r\n                type: 'number',\r\n                required: true,\r\n              }}\r\n            />\r\n          </GridItem>\r\n          <GridItem xs={12} md={6}>\r\n            <CustomInput\r\n              labelText={'Unidades'}\r\n              id='unidades'\r\n              formControlProps={{\r\n                fullWidth: true,\r\n              }}\r\n              inputProps={{\r\n                value: updateInfo.unidades,\r\n                onChange: (e) => {setUpdateInfo({ ...updateInfo, unidades: e.target.value }); construirCodigoTrazabilidad(updateInfo?.tarea[0], e.target.value)},\r\n                type: 'number',\r\n                disabled: updateInfo?.tarea[0]?.cuantificable === 'SI' ? false : true,\r\n                required: updateInfo?.tarea[0]?.cuantificable === 'SI' ? true : false,\r\n              }}\r\n            />\r\n          </GridItem>\r\n          {updateInfo?.tarea[0]?.codigo_trazabilidad != 'NO' && updateInfo?.unidades > 0 && (                                    \r\n            componenteCodigoTrazabilidad\r\n          )}\r\n          <GridItem xs={12}>\r\n            <CustomInput\r\n              labelText={'Observaciones'}\r\n              id='observaciones'\r\n              formControlProps={{\r\n                fullWidth: true,\r\n              }}\r\n              inputProps={{\r\n                value: updateInfo.observaciones,\r\n                onChange: (e) => setUpdateInfo({ ...updateInfo, observaciones: e.target.value }),\r\n                type: 'text',\r\n                maxLength: 200,\r\n              }}\r\n            />\r\n          </GridItem>\r\n\r\n          {errorCodigosTrazabilidad && (\r\n            <GridItem xs={12}>\r\n              <SnackbarContent message={errorCodigosTrazabilidad} color='danger' />\r\n            </GridItem>\r\n          )}\r\n        </GridContainer>\r\n      }\r\n    />\r\n  )\r\n}\r\n\r\nexport default UpdateActivityModal\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}