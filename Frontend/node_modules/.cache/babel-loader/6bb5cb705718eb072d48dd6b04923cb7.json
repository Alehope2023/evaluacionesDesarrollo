{"ast":null,"code":"import _objectSpread from\"C:/trabajo/Alehope/actividadesPreBuild/Frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"C:/trabajo/Alehope/actividadesPreBuild/Frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState,useEffect}from'react';import{useDispatch,useSelector}from'react-redux';import{format}from'date-fns';import SweetAlert from'react-bootstrap-sweetalert';import{Card,FormControl,InputLabel,makeStyles,MenuItem,Select}from'@material-ui/core';import CustomInput from'components/CustomInput/CustomInput';import GridContainer from'components/Grid/GridContainer';import GridItem from'components/Grid/GridItem';import CardBody from'components/Card/CardBody';import Button from'components/CustomButtons/Button';import SnackbarContent from'components/Snackbar/SnackbarContent';import JobSelect from'./components/JobSelect';import{TASK_SPECIFIC_REGISTER_RESET}from'redux/constants/taskSpecificConstants';import{TEAM_WORK_LIST_RESET}from'redux/constants/teamWorkConstants';import{registerTaskSpecific}from'redux/actions/taskSpecificActions';import styles from'./styles/taskRegisterScreenStyles';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var useStyles=makeStyles(styles);var RegisterTaskSpecificScreen=function RegisterTaskSpecificScreen(){var dispatch=useDispatch();var classes=useStyles();var initialState={descripcion_tarea:'',id_tipo_tarea:'1',indicador:'NO',cuantificable:'NO',dificultad:'NO',acumulativa:'NO',entrada:'NO',compartida:'NO',codigo_trazabilidad:'NO',fecha_alta:format(new Date(),'yyyy-MM-dd')};var _useState=useState(initialState),_useState2=_slicedToArray(_useState,2),taskSpecific=_useState2[0],setTaskSpecific=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),alert=_useState4[0],setAlert=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),currentJobPosition=_useState6[0],setCurrentJobPosition=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),errorJobPosition=_useState8[0],setErrorJobPosition=_useState8[1];var _useState9=useState('NO'),_useState10=_slicedToArray(_useState9,2),codTrazability=_useState10[0],setCodTrazability=_useState10[1];var _useSelector=useSelector(function(state){return state.taskSpecificRegister;}),loadingTaskSpecificRegister=_useSelector.loadingTaskSpecificRegister,successTaskSpecificRegister=_useSelector.successTaskSpecificRegister,errorTaskSpecificRegister=_useSelector.errorTaskSpecificRegister;useEffect(function(){if(successTaskSpecificRegister){setAlert(/*#__PURE__*/_jsx(SweetAlert,{success:true,style:{display:'block',marginTop:'-100px'},title:\"Hecho!\",onConfirm:function onConfirm(){return confirmSuccess();},onCancel:function onCancel(){return hideAlert();}//confirmBtnCssClass={classes.confirmBtnCssClass}\n,children:\"Tarea especifica guardada correctamente\"}));dispatch({type:TASK_SPECIFIC_REGISTER_RESET});setTaskSpecific(initialState);setCodTrazability('NO');}},[successTaskSpecificRegister]);useEffect(function(){return function(){return dispatch({type:TASK_SPECIFIC_REGISTER_RESET});};},[dispatch]);var confirmSuccess=function confirmSuccess(){setAlert(null);setTaskSpecific(initialState);dispatch({type:TASK_SPECIFIC_REGISTER_RESET});dispatch({type:TEAM_WORK_LIST_RESET});setErrorJobPosition('');setCurrentJobPosition('');};var hideAlert=function hideAlert(){setAlert(null);};var handleSubmit=function handleSubmit(e){e.preventDefault();if(!currentJobPosition){return setErrorJobPosition('El puesto de trabajo es obligatorio para registrar la tarea.');}dispatch(registerTaskSpecific(_objectSpread(_objectSpread({},taskSpecific),{},{id_puesto:currentJobPosition})));};var handleSelector=function handleSelector(e){var value=e.target.value;setCodTrazability(value);setTaskSpecific(_objectSpread(_objectSpread({},taskSpecific),{},{codigo_trazabilidad:e.target.value}));};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(GridContainer,{children:/*#__PURE__*/_jsx(GridItem,{xs:12,md:8,style:{margin:'auto'},children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsx(CardBody,{children:/*#__PURE__*/_jsx(\"form\",{onSubmit:handleSubmit,children:/*#__PURE__*/_jsxs(GridContainer,{children:[/*#__PURE__*/_jsx(JobSelect,{currentJobPositionId:currentJobPosition,setCurrentJobPositionId:setCurrentJobPosition}),/*#__PURE__*/_jsx(GridItem,{style:{marginBottom:'20px'},xs:12,children:/*#__PURE__*/_jsx(CustomInput,{labelText:'DESCRIPCION',id:\"description\",formControlProps:{fullWidth:true},inputProps:{value:taskSpecific.descripcion_tarea,onChange:function onChange(e){return setTaskSpecific(_objectSpread(_objectSpread({},taskSpecific),{},{descripcion_tarea:e.target.value}));},type:'text',maxLength:200,required:true}})}),/*#__PURE__*/_jsxs(GridContainer,{style:{margin:'20px 2px'},children:[/*#__PURE__*/_jsx(GridItem,{xs:12,md:6,children:/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,children:[/*#__PURE__*/_jsx(InputLabel,{id:\"indicador\",children:\"Indicador\"}),/*#__PURE__*/_jsxs(Select,{labelId:\"indicador\",id:\"indicador\",name:\"indicador\",value:taskSpecific.indicador,label:\"Indicador\",onChange:function onChange(e){return setTaskSpecific(_objectSpread(_objectSpread({},taskSpecific),{},{indicador:e.target.value}));},children:[/*#__PURE__*/_jsx(MenuItem,{value:'SI',children:\"SI\"}),/*#__PURE__*/_jsx(MenuItem,{value:'NO',children:\"NO\"})]})]})}),/*#__PURE__*/_jsx(GridItem,{xs:12,md:6,children:/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,children:[/*#__PURE__*/_jsx(InputLabel,{id:\"cuantificable\",children:\"Cuantificable\"}),/*#__PURE__*/_jsxs(Select,{labelId:\"cuantificable\",id:\"cuantificable\",value:taskSpecific.cuantificable,label:\"Cuantificable\",onChange:function onChange(e){return setTaskSpecific(_objectSpread(_objectSpread({},taskSpecific),{},{cuantificable:e.target.value}));},children:[/*#__PURE__*/_jsx(MenuItem,{value:'SI',children:\"SI\"}),/*#__PURE__*/_jsx(MenuItem,{value:'NO',children:\"NO\"})]})]})}),/*#__PURE__*/_jsx(GridItem,{xs:12,md:6,children:/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,children:[/*#__PURE__*/_jsx(InputLabel,{id:\"entrada\",children:\"Entrada\"}),/*#__PURE__*/_jsxs(Select,{labelId:\"entrada\",id:\"entrada\",value:taskSpecific.entrada,name:\"entrada\",label:\"Entrada\",onChange:function onChange(e){return setTaskSpecific(_objectSpread(_objectSpread({},taskSpecific),{},{entrada:e.target.value}));},children:[/*#__PURE__*/_jsx(MenuItem,{value:'SI',children:\"SI\"}),/*#__PURE__*/_jsx(MenuItem,{value:'NO',children:\"NO\"})]})]})}),/*#__PURE__*/_jsx(GridItem,{xs:12,md:6,children:/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,children:[/*#__PURE__*/_jsx(InputLabel,{id:\"compartida\",children:\"Compartida\"}),/*#__PURE__*/_jsxs(Select,{labelId:\"compartida\",id:\"compartida\",value:taskSpecific.compartida,label:\"Compartida\",onChange:function onChange(e){return setTaskSpecific(_objectSpread(_objectSpread({},taskSpecific),{},{compartida:e.target.value}));},children:[/*#__PURE__*/_jsx(MenuItem,{value:'SI',children:\"SI\"}),/*#__PURE__*/_jsx(MenuItem,{value:'NO',children:\"NO\"})]})]})}),/*#__PURE__*/_jsx(GridItem,{xs:12,md:6,children:/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,children:[/*#__PURE__*/_jsx(InputLabel,{id:\"dificultad\",children:\"Dificultad\"}),/*#__PURE__*/_jsxs(Select,{labelId:\"dificultad\",id:\"dificultad\",value:taskSpecific.dificultad,label:\"Dificultad\",onChange:function onChange(e){return setTaskSpecific(_objectSpread(_objectSpread({},taskSpecific),{},{dificultad:e.target.value}));},children:[/*#__PURE__*/_jsx(MenuItem,{value:'SI',children:\"SI\"}),/*#__PURE__*/_jsx(MenuItem,{value:'NO',children:\"NO\"})]})]})}),/*#__PURE__*/_jsx(GridItem,{xs:12,md:6,children:/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,children:[/*#__PURE__*/_jsx(InputLabel,{id:\"acumulativa\",children:\"Acumulativa\"}),/*#__PURE__*/_jsxs(Select,{labelId:\"acumulativa\",id:\"acumulativa\",value:taskSpecific.acumulativa,label:\"Acumulativa\",onChange:function onChange(e){return setTaskSpecific(_objectSpread(_objectSpread({},taskSpecific),{},{acumulativa:e.target.value}));},children:[/*#__PURE__*/_jsx(MenuItem,{value:'SI',children:\"SI\"}),/*#__PURE__*/_jsx(MenuItem,{value:'NO',children:\"NO\"})]})]})})]}),/*#__PURE__*/_jsxs(GridItem,{xs:12,md:12,children:[/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,children:[/*#__PURE__*/_jsx(InputLabel,{id:\"codigo_trazabilidad\",children:\"COD. TRAZABILIDAD\"}),/*#__PURE__*/_jsx(Select,{labelId:\"codigo_trazabilidad\",id:\"codigo_trazabilidad\",name:\"codigo_trazabilidad\",value:codTrazability,label:\"codigo_trazabilidad\",onChange:function onChange(e){return handleSelector(e);},children:['NO','Nº Expediente','Nombre de fichero','Nº comunicación','Nº de relación','Nº de lote','Otro'].map(function(cod){return/*#__PURE__*/_jsxs(MenuItem,{value:cod,children:[cod,\" \"]});})})]}),codTrazability==='Otro'&&/*#__PURE__*/_jsx(FormControl,{fullWidth:true,children:/*#__PURE__*/_jsx(CustomInput,{id:\"codigo_trazabilidad\",labelText:'Ingrese código de trazabilidad',inputProps:{onChange:function onChange(e){return setTaskSpecific(_objectSpread(_objectSpread({},taskSpecific),{},{codigo_trazabilidad:e.target.value}));},type:'text',required:true}})}),' ']}),errorTaskSpecificRegister&&/*#__PURE__*/_jsx(GridItem,{xs:12,children:/*#__PURE__*/_jsx(SnackbarContent,{message:errorTaskSpecificRegister,color:\"danger\"})}),errorJobPosition&&!currentJobPosition&&/*#__PURE__*/_jsx(GridItem,{xs:12,children:/*#__PURE__*/_jsx(SnackbarContent,{message:errorJobPosition,color:\"danger\"})}),/*#__PURE__*/_jsx(GridItem,{xs:12,style:{margin:'20px 0 0',display:'flex',justifyContent:'flex-end'},children:/*#__PURE__*/_jsx(Button,{type:\"submit\",color:\"primary\",children:loadingTaskSpecificRegister?'Guardando...':'Guardar'})})]})})})})})}),alert]});};export default RegisterTaskSpecificScreen;","map":{"version":3,"names":["useState","useEffect","useDispatch","useSelector","format","SweetAlert","Card","FormControl","InputLabel","makeStyles","MenuItem","Select","CustomInput","GridContainer","GridItem","CardBody","Button","SnackbarContent","JobSelect","TASK_SPECIFIC_REGISTER_RESET","TEAM_WORK_LIST_RESET","registerTaskSpecific","styles","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","useStyles","RegisterTaskSpecificScreen","dispatch","classes","initialState","descripcion_tarea","id_tipo_tarea","indicador","cuantificable","dificultad","acumulativa","entrada","compartida","codigo_trazabilidad","fecha_alta","Date","_useState","_useState2","_slicedToArray","taskSpecific","setTaskSpecific","_useState3","_useState4","alert","setAlert","_useState5","_useState6","currentJobPosition","setCurrentJobPosition","_useState7","_useState8","errorJobPosition","setErrorJobPosition","_useState9","_useState10","codTrazability","setCodTrazability","_useSelector","state","taskSpecificRegister","loadingTaskSpecificRegister","successTaskSpecificRegister","errorTaskSpecificRegister","success","style","display","marginTop","title","onConfirm","confirmSuccess","onCancel","hideAlert","children","type","handleSubmit","e","preventDefault","_objectSpread","id_puesto","handleSelector","value","target","xs","md","margin","onSubmit","currentJobPositionId","setCurrentJobPositionId","marginBottom","labelText","id","formControlProps","fullWidth","inputProps","onChange","maxLength","required","labelId","name","label","map","cod","message","color","justifyContent"],"sources":["C:/trabajo/Alehope/actividadesPreBuild/Frontend/src/screens/control-panel/Catalog/TaskSpecific/RegisterTaskSpecificScreen/RegisterTaskSpecificScreen.js"],"sourcesContent":["import { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { format } from 'date-fns'\r\nimport SweetAlert from 'react-bootstrap-sweetalert'\r\nimport { Card, FormControl, InputLabel, makeStyles, MenuItem, Select } from '@material-ui/core'\r\nimport CustomInput from 'components/CustomInput/CustomInput'\r\nimport GridContainer from 'components/Grid/GridContainer'\r\nimport GridItem from 'components/Grid/GridItem'\r\nimport CardBody from 'components/Card/CardBody'\r\nimport Button from 'components/CustomButtons/Button'\r\nimport SnackbarContent from 'components/Snackbar/SnackbarContent'\r\nimport JobSelect from './components/JobSelect'\r\nimport { TASK_SPECIFIC_REGISTER_RESET } from 'redux/constants/taskSpecificConstants'\r\nimport { TEAM_WORK_LIST_RESET } from 'redux/constants/teamWorkConstants'\r\nimport { registerTaskSpecific } from 'redux/actions/taskSpecificActions'\r\nimport styles from './styles/taskRegisterScreenStyles'\r\n\r\nconst useStyles = makeStyles(styles)\r\n\r\nconst RegisterTaskSpecificScreen = () => {\r\n  const dispatch = useDispatch()\r\n  const classes = useStyles()\r\n  const initialState = {\r\n    descripcion_tarea: '',\r\n    id_tipo_tarea: '1',\r\n    indicador: 'NO',\r\n    cuantificable: 'NO',\r\n    dificultad: 'NO',\r\n    acumulativa: 'NO',\r\n    entrada: 'NO',\r\n    compartida: 'NO',\r\n    codigo_trazabilidad: 'NO',\r\n    fecha_alta: format(new Date(), 'yyyy-MM-dd'),\r\n  }\r\n\r\n  const [taskSpecific, setTaskSpecific] = useState(initialState)\r\n  const [alert, setAlert] = useState(null)\r\n  const [currentJobPosition, setCurrentJobPosition] = useState('')\r\n  const [errorJobPosition, setErrorJobPosition] = useState('')\r\n  const [codTrazability, setCodTrazability] = useState('NO')\r\n\r\n  const { loadingTaskSpecificRegister, successTaskSpecificRegister, errorTaskSpecificRegister } = useSelector(\r\n    (state) => state.taskSpecificRegister\r\n  )\r\n\r\n  useEffect(() => {\r\n    if (successTaskSpecificRegister) {\r\n      setAlert(\r\n        <SweetAlert\r\n          success\r\n          style={{ display: 'block', marginTop: '-100px' }}\r\n          title='Hecho!'\r\n          onConfirm={() => confirmSuccess()}\r\n          onCancel={() => hideAlert()}\r\n          //confirmBtnCssClass={classes.confirmBtnCssClass}\r\n        >\r\n          Tarea especifica guardada correctamente\r\n        </SweetAlert>\r\n      )\r\n      dispatch({ type: TASK_SPECIFIC_REGISTER_RESET })\r\n      setTaskSpecific(initialState)\r\n      setCodTrazability('NO')\r\n    }\r\n  }, [successTaskSpecificRegister])\r\n\r\n  useEffect(() => {\r\n    return () => dispatch({ type: TASK_SPECIFIC_REGISTER_RESET })\r\n  }, [dispatch])\r\n\r\n  const confirmSuccess = () => {\r\n    setAlert(null)\r\n    setTaskSpecific(initialState)\r\n    dispatch({ type: TASK_SPECIFIC_REGISTER_RESET })\r\n    dispatch({ type: TEAM_WORK_LIST_RESET })\r\n    setErrorJobPosition('')\r\n    setCurrentJobPosition('')\r\n  }\r\n  const hideAlert = () => {\r\n    setAlert(null)\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    if (!currentJobPosition) {\r\n      return setErrorJobPosition('El puesto de trabajo es obligatorio para registrar la tarea.')\r\n    }\r\n\r\n    dispatch(registerTaskSpecific({ ...taskSpecific, id_puesto: currentJobPosition }))\r\n  }\r\n  const handleSelector = (e) => {\r\n    const {\r\n      target: { value },\r\n    } = e\r\n    setCodTrazability(value)\r\n    setTaskSpecific({ ...taskSpecific, codigo_trazabilidad: e.target.value })\r\n  }\r\n  return (\r\n    <>\r\n      <GridContainer>\r\n        <GridItem xs={12} md={8} style={{ margin: 'auto' }}>\r\n          <Card>\r\n            <CardBody>\r\n              <form onSubmit={handleSubmit}>\r\n                <GridContainer>\r\n                  <JobSelect\r\n                    currentJobPositionId={currentJobPosition}\r\n                    setCurrentJobPositionId={setCurrentJobPosition}\r\n                  />\r\n                  <GridItem style={{ marginBottom: '20px' }} xs={12}>\r\n                    <CustomInput\r\n                      labelText={'DESCRIPCION'}\r\n                      id='description'\r\n                      formControlProps={{\r\n                        fullWidth: true,\r\n                      }}\r\n                      inputProps={{\r\n                        value: taskSpecific.descripcion_tarea,\r\n                        onChange: (e) => setTaskSpecific({ ...taskSpecific, descripcion_tarea: e.target.value }),\r\n                        type: 'text',\r\n                        maxLength: 200,\r\n                        required: true,\r\n                      }}\r\n                    />\r\n                  </GridItem>                  \r\n                  <GridContainer style={{ margin: '20px 2px' }}>\r\n                    <GridItem xs={12} md={6}>\r\n                      <FormControl fullWidth>\r\n                        <InputLabel id='indicador'>Indicador</InputLabel>\r\n                        <Select\r\n                          labelId='indicador'\r\n                          id='indicador'\r\n                          name='indicador'\r\n                          value={taskSpecific.indicador}\r\n                          label='Indicador'\r\n                          onChange={(e) => setTaskSpecific({ ...taskSpecific, indicador: e.target.value })}\r\n                        >\r\n                          <MenuItem value={'SI'}>SI</MenuItem>\r\n                          <MenuItem value={'NO'}>NO</MenuItem>\r\n                        </Select>\r\n                      </FormControl>\r\n                    </GridItem>\r\n                    <GridItem xs={12} md={6}>\r\n                      <FormControl fullWidth>\r\n                        <InputLabel id='cuantificable'>Cuantificable</InputLabel>\r\n                        <Select\r\n                          labelId='cuantificable'\r\n                          id='cuantificable'\r\n                          value={taskSpecific.cuantificable}\r\n                          label='Cuantificable'\r\n                          onChange={(e) => setTaskSpecific({ ...taskSpecific, cuantificable: e.target.value })}\r\n                        >\r\n                          <MenuItem value={'SI'}>SI</MenuItem>\r\n                          <MenuItem value={'NO'}>NO</MenuItem>\r\n                        </Select>\r\n                      </FormControl>\r\n                    </GridItem>\r\n                    <GridItem xs={12} md={6}>\r\n                      <FormControl fullWidth>\r\n                        <InputLabel id='entrada'>Entrada</InputLabel>\r\n                        <Select\r\n                          labelId='entrada'\r\n                          id='entrada'\r\n                          value={taskSpecific.entrada}\r\n                          name='entrada'\r\n                          label='Entrada'\r\n                          onChange={(e) => setTaskSpecific({ ...taskSpecific, entrada: e.target.value })}\r\n                        >\r\n                          <MenuItem value={'SI'}>SI</MenuItem>\r\n                          <MenuItem value={'NO'}>NO</MenuItem>\r\n                        </Select>\r\n                      </FormControl>\r\n                    </GridItem>\r\n                    <GridItem xs={12} md={6}>\r\n                      <FormControl fullWidth>\r\n                        <InputLabel id='compartida'>Compartida</InputLabel>\r\n                        <Select\r\n                          labelId='compartida'\r\n                          id='compartida'\r\n                          value={taskSpecific.compartida}\r\n                          label='Compartida'\r\n                          onChange={(e) => setTaskSpecific({ ...taskSpecific, compartida: e.target.value })}\r\n                        >\r\n                          <MenuItem value={'SI'}>SI</MenuItem>\r\n                          <MenuItem value={'NO'}>NO</MenuItem>\r\n                        </Select>\r\n                      </FormControl>\r\n                    </GridItem>\r\n                    <GridItem xs={12} md={6}>\r\n                      <FormControl fullWidth>\r\n                        <InputLabel id='dificultad'>Dificultad</InputLabel>\r\n                        <Select\r\n                          labelId='dificultad'\r\n                          id='dificultad'\r\n                          value={taskSpecific.dificultad}\r\n                          label='Dificultad'\r\n                          onChange={(e) => setTaskSpecific({ ...taskSpecific, dificultad: e.target.value })}\r\n                        >\r\n                          <MenuItem value={'SI'}>SI</MenuItem>\r\n                          <MenuItem value={'NO'}>NO</MenuItem>\r\n                        </Select>\r\n                      </FormControl>\r\n                    </GridItem>\r\n                    <GridItem xs={12} md={6}>\r\n                      <FormControl fullWidth>\r\n                        <InputLabel id='acumulativa'>Acumulativa</InputLabel>\r\n                        <Select\r\n                          labelId='acumulativa'\r\n                          id='acumulativa'\r\n                          value={taskSpecific.acumulativa}\r\n                          label='Acumulativa'\r\n                          onChange={(e) => setTaskSpecific({ ...taskSpecific, acumulativa: e.target.value })}\r\n                        >\r\n                          <MenuItem value={'SI'}>SI</MenuItem>\r\n                          <MenuItem value={'NO'}>NO</MenuItem>\r\n                        </Select>\r\n                      </FormControl>\r\n                    </GridItem>                    \r\n                  </GridContainer>\r\n\t\t\t\t          <GridItem xs={12} md={12}>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel id='codigo_trazabilidad'>COD. TRAZABILIDAD</InputLabel>\r\n                      <Select\r\n                        labelId='codigo_trazabilidad'\r\n                        id='codigo_trazabilidad'\r\n                        name='codigo_trazabilidad'\r\n                        value={codTrazability}\r\n                        label='codigo_trazabilidad'\r\n                        onChange={(e) => handleSelector(e)}\r\n                      >\r\n                        {[\r\n                          'NO',\r\n                          'Nº Expediente',\r\n                          'Nombre de fichero',\r\n                          'Nº comunicación',\r\n                          'Nº de relación',\r\n                          'Nº de lote',\r\n                          'Otro',\r\n                        ].map((cod) => (\r\n                          <MenuItem value={cod}>{cod} </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    </FormControl>\r\n                    {codTrazability === 'Otro' && (\r\n                      <FormControl fullWidth>\r\n                        <CustomInput\r\n                          id='codigo_trazabilidad'\r\n                          labelText={'Ingrese código de trazabilidad'}\r\n                          inputProps={{\r\n                            onChange: (e) => setTaskSpecific({ ...taskSpecific, codigo_trazabilidad: e.target.value }),\r\n                            type: 'text',\r\n                            required: true,\r\n                          }}\r\n                        />\r\n                      </FormControl>\r\n                    )}{' '}\r\n                  </GridItem>\r\n                  {errorTaskSpecificRegister && (\r\n                    <GridItem xs={12}>\r\n                      <SnackbarContent message={errorTaskSpecificRegister} color='danger' />\r\n                    </GridItem>\r\n                  )}\r\n                  {errorJobPosition && !currentJobPosition && (\r\n                    <GridItem xs={12}>\r\n                      <SnackbarContent message={errorJobPosition} color='danger' />\r\n                    </GridItem>\r\n                  )}\r\n                  <GridItem xs={12} style={{ margin: '20px 0 0', display: 'flex', justifyContent: 'flex-end' }}>\r\n                    <Button type='submit' color='primary'>\r\n                      {loadingTaskSpecificRegister ? 'Guardando...' : 'Guardar'}\r\n                    </Button>\r\n                  </GridItem>\r\n                </GridContainer>\r\n              </form>\r\n            </CardBody>\r\n          </Card>\r\n        </GridItem>\r\n      </GridContainer>\r\n      {alert}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default RegisterTaskSpecificScreen\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}