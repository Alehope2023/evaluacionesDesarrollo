{"ast":null,"code":"var _jsxFileName = \"C:\\\\trabajo\\\\Alehope\\\\actividadesPreBuild\\\\Frontend\\\\src\\\\screens\\\\control-panel\\\\Catalog\\\\TaskShared\\\\TaskSharedRegisterScreen\\\\components\\\\TasksSharedSelect.js\",\n  _this = this,\n  _s = $RefreshSig$();\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { FormControl, InputLabel, makeStyles, MenuItem, Select as Selectable } from '@material-ui/core';\nimport GridItem from 'components/Grid/GridItem';\nimport { getTasksShared } from 'redux/actions/sharedActions';\nimport { SHARED_TO_MANAGER_LIST_RESET } from 'redux/constants/sharedConstants';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar TaskSharedSelect = function TaskSharedSelect(_ref) {\n  _s();\n  var setTaskSharedId = _ref.setTaskSharedId,\n    taskSharedId = _ref.taskSharedId;\n  var dispatch = useDispatch();\n  var classes = {};\n  var _useSelector = useSelector(function (state) {\n      return state.tasksShared;\n    }),\n    loadingTasksShared = _useSelector.loadingTasksShared,\n    successTasksShared = _useSelector.successTasksShared,\n    tasksShared = _useSelector.tasksShared;\n  var _useSelector2 = useSelector(function (state) {\n      return state.userLogin;\n    }),\n    userInfo = _useSelector2.userInfo;\n  useEffect(function () {\n    if (!successTasksShared) {\n      dispatch(getTasksShared(userInfo.id_puesto));\n    }\n  }, [successTasksShared]);\n  useEffect(function () {\n    return function () {\n      return dispatch({\n        type: SHARED_TO_MANAGER_LIST_RESET\n      });\n    };\n  }, [dispatch]);\n  var isEmpty = function isEmpty(arr) {\n    return arr && arr.length <= 0;\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loadingTasksShared ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"Cargando\"\n    }, void 0, false) : tasksShared && /*#__PURE__*/_jsxDEV(GridItem, {\n      xs: 12,\n      md: 6,\n      children: /*#__PURE__*/_jsxDEV(FormControl, {\n        fullWidth: true,\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          htmlFor: \"register-shared\",\n          children: isEmpty(tasksShared === null || tasksShared === void 0 ? void 0 : tasksShared.tasks) ? 'No hay Tareas Compartidas para seleccionar' : 'Tareas Compartidas*'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 15\n        }, _this), /*#__PURE__*/_jsxDEV(Selectable, {\n          MenuProps: {\n            className: classes.selectMenu\n          },\n          className: classes.select,\n          value: taskSharedId,\n          onChange: function onChange(e) {\n            setTaskSharedId(e.target.value);\n          },\n          disabled: isEmpty(tasksShared === null || tasksShared === void 0 ? void 0 : tasksShared.tasks),\n          inputProps: {\n            name: 'register-shared',\n            id: 'register-shared'\n          },\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            classes: {\n              root: classes.selectMenuItem\n            },\n            disabled: true,\n            children: \"Selecciona una\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }, _this), tasksShared.map(function (taskEntry, index) {\n            return /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: taskEntry.id_tarea,\n              classes: {\n                root: classes.selectMenuItem,\n                selected: classes.selectMenuItemSelected\n              },\n              children: \"TAREA: \".concat(taskEntry.descripcion_tarea, \" PERFIL: \").concat(taskEntry.codigo_perfil)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 19\n            }, _this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }, _this)\n  }, void 0, false);\n};\n_s(TaskSharedSelect, \"FgUO3hPqEstsHwaRfJMkfe9Rk4o=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = TaskSharedSelect;\nexport default TaskSharedSelect;\nvar _c;\n$RefreshReg$(_c, \"TaskSharedSelect\");","map":{"version":3,"names":["useEffect","useDispatch","useSelector","FormControl","InputLabel","makeStyles","MenuItem","Select","Selectable","GridItem","getTasksShared","SHARED_TO_MANAGER_LIST_RESET","Fragment","_Fragment","jsxDEV","_jsxDEV","TaskSharedSelect","_ref","_s","setTaskSharedId","taskSharedId","dispatch","classes","_useSelector","state","tasksShared","loadingTasksShared","successTasksShared","_useSelector2","userLogin","userInfo","id_puesto","type","isEmpty","arr","length","children","xs","md","fullWidth","htmlFor","tasks","fileName","_jsxFileName","lineNumber","columnNumber","_this","MenuProps","className","selectMenu","select","value","onChange","e","target","disabled","inputProps","name","id","root","selectMenuItem","map","taskEntry","index","id_tarea","selected","selectMenuItemSelected","concat","descripcion_tarea","codigo_perfil","_c","$RefreshReg$"],"sources":["C:/trabajo/Alehope/actividadesPreBuild/Frontend/src/screens/control-panel/Catalog/TaskShared/TaskSharedRegisterScreen/components/TasksSharedSelect.js"],"sourcesContent":["import { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { FormControl, InputLabel, makeStyles, MenuItem, Select as Selectable } from '@material-ui/core'\r\nimport GridItem from 'components/Grid/GridItem'\r\nimport { getTasksShared } from 'redux/actions/sharedActions'\r\nimport { SHARED_TO_MANAGER_LIST_RESET } from 'redux/constants/sharedConstants'\r\n\r\nconst TaskSharedSelect = ({ setTaskSharedId, taskSharedId }) => {\r\n  const dispatch = useDispatch()\r\n  const classes = {}\r\n\r\n  const { loadingTasksShared, successTasksShared, tasksShared } = useSelector((state) => state.tasksShared)\r\n\r\n  const { userInfo } = useSelector((state) => state.userLogin)\r\n\r\n  useEffect(() => {\r\n    if (!successTasksShared) {\r\n      dispatch(getTasksShared(userInfo.id_puesto))\r\n    }\r\n  }, [successTasksShared])\r\n\r\n  useEffect(() => {\r\n    return () => dispatch({ type: SHARED_TO_MANAGER_LIST_RESET })\r\n  }, [dispatch])\r\n\r\n  const isEmpty = (arr) => arr && arr.length <= 0\r\n  \r\n  return (\r\n    <>\r\n      {loadingTasksShared ? (\r\n        <>Cargando</>\r\n      ) : (\r\n        tasksShared && (\r\n          <GridItem xs={12} md={6}>\r\n            <FormControl fullWidth>\r\n              <InputLabel htmlFor='register-shared'>\r\n                {isEmpty(tasksShared?.tasks) ? 'No hay Tareas Compartidas para seleccionar' : 'Tareas Compartidas*'}\r\n              </InputLabel>\r\n              <Selectable\r\n                MenuProps={{\r\n                  className: classes.selectMenu,\r\n                }}\r\n                className={classes.select}\r\n                value={taskSharedId}\r\n                onChange={(e) => {\r\n                  setTaskSharedId(e.target.value)\r\n                }}\r\n                disabled={isEmpty(tasksShared?.tasks)}\r\n                inputProps={{\r\n                  name: 'register-shared',\r\n                  id: 'register-shared',\r\n                }}\r\n              >\r\n                <MenuItem\r\n                  classes={{\r\n                    root: classes.selectMenuItem,\r\n                  }}\r\n                  disabled\r\n                >\r\n                  Selecciona una\r\n                </MenuItem>\r\n                {tasksShared.map((taskEntry, index) => (\r\n                  <MenuItem\r\n                    value={taskEntry.id_tarea}\r\n                    key={index}\r\n                    classes={{ root: classes.selectMenuItem, selected: classes.selectMenuItemSelected }}\r\n                  >\r\n                    {`TAREA: ${taskEntry.descripcion_tarea} PERFIL: ${taskEntry.codigo_perfil}`}\r\n                  </MenuItem>\r\n                ))}\r\n              </Selectable>\r\n            </FormControl>\r\n          </GridItem>\r\n        )\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TaskSharedSelect\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}