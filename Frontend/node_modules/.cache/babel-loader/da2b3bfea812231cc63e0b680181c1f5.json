{"ast":null,"code":"import{useEffect}from'react';import{useDispatch,useSelector}from'react-redux';import{FormControl,InputLabel,makeStyles,MenuItem,Select as Selectable}from'@material-ui/core';import GridItem from'components/Grid/GridItem';// import { TEAM_WORKS_BY_RESPONSIBLE_RESET } from 'redux/constants/teamWorkConstants'\nimport{getEntriesToManager}from'redux/actions/entriesManagerActions';import{ENTRIES_TO_MANAGER_LIST_RESET}from'redux/constants/entriesManagerConstants';import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var TaskEntriesSelect=function TaskEntriesSelect(_ref){var setTaskEntryId=_ref.setTaskEntryId,taskEntryId=_ref.taskEntryId;var dispatch=useDispatch();var classes={};var _useSelector=useSelector(function(state){return state.entriesToManagerList;}),loadingEntriesToManagerList=_useSelector.loadingEntriesToManagerList,successEntriesToManagerList=_useSelector.successEntriesToManagerList,entriesToManagerList=_useSelector.entriesToManagerList;var _useSelector2=useSelector(function(state){return state.userLogin;}),userInfo=_useSelector2.userInfo;useEffect(function(){if(!successEntriesToManagerList){dispatch(getEntriesToManager(userInfo.id_puesto));}},[successEntriesToManagerList]);useEffect(function(){return function(){return dispatch({type:ENTRIES_TO_MANAGER_LIST_RESET});};},[dispatch]);var isEmpty=function isEmpty(arr){return arr.length<=0;};return/*#__PURE__*/_jsx(_Fragment,{children:loadingEntriesToManagerList?/*#__PURE__*/_jsx(_Fragment,{children:\"Cargando\"}):entriesToManagerList&&/*#__PURE__*/_jsx(GridItem,{xs:12,md:6,children:/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,children:[/*#__PURE__*/_jsx(InputLabel,{htmlFor:\"register-entry\",children:isEmpty(entriesToManagerList===null||entriesToManagerList===void 0?void 0:entriesToManagerList.assigned)?'No hay Tareas para seleccionar':'Tareas *'}),/*#__PURE__*/_jsxs(Selectable,{MenuProps:{className:classes.selectMenu},className:classes.select,value:taskEntryId,onChange:function onChange(e){setTaskEntryId(e.target.value);},disabled:isEmpty(entriesToManagerList===null||entriesToManagerList===void 0?void 0:entriesToManagerList.assigned),inputProps:{name:'register-entry',id:'register-entry'},children:[/*#__PURE__*/_jsx(MenuItem,{classes:{root:classes.selectMenuItem},disabled:true,children:\"Selecciona uno\"}),entriesToManagerList.assigned.map(function(taskEntry,index){return/*#__PURE__*/_jsxs(MenuItem,{value:taskEntry.id_tarea,classes:{root:classes.selectMenuItem,selected:classes.selectMenuItemSelected},children:[taskEntry.codigo_perfil&&\"TAREA: \".concat(taskEntry.descripcion_tarea,\" PERFIL: \").concat(taskEntry.codigo_perfil,\" \"),taskEntry.nombre&&\"TAREA: \".concat(taskEntry.descripcion_tarea,\" PUESTO: \").concat(taskEntry.nombre,\" \").concat(taskEntry.apellido1,\" \").concat(taskEntry.apellido2,\" \")]},index);})]})]})})});};export default TaskEntriesSelect;","map":{"version":3,"names":["useEffect","useDispatch","useSelector","FormControl","InputLabel","makeStyles","MenuItem","Select","Selectable","GridItem","getEntriesToManager","ENTRIES_TO_MANAGER_LIST_RESET","Fragment","_Fragment","jsx","_jsx","jsxs","_jsxs","TaskEntriesSelect","_ref","setTaskEntryId","taskEntryId","dispatch","classes","_useSelector","state","entriesToManagerList","loadingEntriesToManagerList","successEntriesToManagerList","_useSelector2","userLogin","userInfo","id_puesto","type","isEmpty","arr","length","children","xs","md","fullWidth","htmlFor","assigned","MenuProps","className","selectMenu","select","value","onChange","e","target","disabled","inputProps","name","id","root","selectMenuItem","map","taskEntry","index","id_tarea","selected","selectMenuItemSelected","codigo_perfil","concat","descripcion_tarea","nombre","apellido1","apellido2"],"sources":["C:/trabajo/Alehope/actividadesPreBuild/Frontend/src/screens/control-panel/AsignEntriesScreen/AsignEntryRegister/components/TaskEntriesSelect.js"],"sourcesContent":["import { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { FormControl, InputLabel, makeStyles, MenuItem, Select as Selectable } from '@material-ui/core'\r\nimport GridItem from 'components/Grid/GridItem'\r\n// import { TEAM_WORKS_BY_RESPONSIBLE_RESET } from 'redux/constants/teamWorkConstants'\r\nimport { getEntriesToManager } from 'redux/actions/entriesManagerActions'\r\nimport { ENTRIES_TO_MANAGER_LIST_RESET } from 'redux/constants/entriesManagerConstants'\r\n\r\nconst TaskEntriesSelect = ({ setTaskEntryId, taskEntryId }) => {\r\n  const dispatch = useDispatch()\r\n  const classes = {}\r\n\r\n  const { loadingEntriesToManagerList, successEntriesToManagerList, entriesToManagerList } = useSelector(\r\n    (state) => state.entriesToManagerList\r\n  )\r\n  const { userInfo } = useSelector((state) => state.userLogin)\r\n\r\n  useEffect(() => {\r\n    if (!successEntriesToManagerList) {\r\n      dispatch(getEntriesToManager(userInfo.id_puesto))\r\n    }\r\n  }, [successEntriesToManagerList])\r\n\r\n  useEffect(() => {\r\n    return () => dispatch({ type: ENTRIES_TO_MANAGER_LIST_RESET })\r\n  }, [dispatch])\r\n\r\n  const isEmpty = (arr) => arr.length <= 0\r\n\r\n  return (\r\n    <>\r\n      {loadingEntriesToManagerList ? (\r\n        <>Cargando</>\r\n      ) : (\r\n        entriesToManagerList && (\r\n          <GridItem xs={12} md={6}>\r\n            <FormControl fullWidth>\r\n              <InputLabel htmlFor='register-entry'>\r\n                {isEmpty(entriesToManagerList?.assigned) ? 'No hay Tareas para seleccionar' : 'Tareas *'}\r\n              </InputLabel>\r\n              <Selectable\r\n                MenuProps={{\r\n                  className: classes.selectMenu,\r\n                }}\r\n                className={classes.select}\r\n                value={taskEntryId}\r\n                onChange={(e) => {\r\n                  setTaskEntryId(e.target.value)\r\n                }}\r\n                disabled={isEmpty(entriesToManagerList?.assigned)}\r\n                inputProps={{\r\n                  name: 'register-entry',\r\n                  id: 'register-entry',\r\n                }}\r\n              >\r\n                <MenuItem\r\n                  classes={{\r\n                    root: classes.selectMenuItem,\r\n                  }}\r\n                  disabled\r\n                >\r\n                  Selecciona uno\r\n                </MenuItem>\r\n                {entriesToManagerList.assigned.map((taskEntry, index) => (\r\n                  <MenuItem\r\n                    value={taskEntry.id_tarea}\r\n                    key={index}\r\n                    classes={{ root: classes.selectMenuItem, selected: classes.selectMenuItemSelected }}\r\n                  >\r\n                    {taskEntry.codigo_perfil && (\r\n                       `TAREA: ${taskEntry.descripcion_tarea} PERFIL: ${taskEntry.codigo_perfil} `\r\n                     )}\r\n                    \r\n                    {taskEntry.nombre && (\r\n                       `TAREA: ${taskEntry.descripcion_tarea} PUESTO: ${taskEntry.nombre} ${taskEntry.apellido1} ${taskEntry.apellido2} `\r\n                    )}\r\n                  </MenuItem>\r\n                ))}\r\n              </Selectable>\r\n            </FormControl>\r\n          </GridItem>\r\n        )\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TaskEntriesSelect\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}