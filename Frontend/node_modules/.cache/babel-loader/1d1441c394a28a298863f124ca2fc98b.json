{"ast":null,"code":"import _slicedToArray from \"C:/trabajo/Alehope/actividadesPreBuild/Frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"C:\\\\trabajo\\\\Alehope\\\\actividadesPreBuild\\\\Frontend\\\\src\\\\screens\\\\control-panel\\\\Catalog\\\\TaskOther\\\\RegisterTaskOtherScreen\\\\components\\\\DuplicateTaskExtOrdOther.js\",\n  _this = this,\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { FormControl, InputLabel, MenuItem, Select } from '@material-ui/core';\nimport { NavLink } from 'react-router-dom';\nimport GridItem from 'components/Grid/GridItem';\nimport Button from 'components/CustomButtons/Button';\nimport DuplicateTaskExtOrdOtherList from './DuplicateTaskExtOrdOtherList';\nimport { PROFILE_LIST_RESET } from 'redux/constants/profileConstants';\nimport { getProfiles } from 'redux/actions/profileActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar DuplicateTaskExtOrdOther = function DuplicateTaskExtOrdOther(_ref) {\n  _s();\n  var taskType = _ref.taskType,\n    setTaskType = _ref.setTaskType;\n  var dispatch = useDispatch();\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    profileIdToClone = _useState2[0],\n    setProfileIdToClone = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    search = _useState4[0],\n    setSearch = _useState4[1];\n  var _useSelector = useSelector(function (state) {\n      return state.profileList;\n    }),\n    successProfileList = _useSelector.successProfileList,\n    loadingProfileList = _useSelector.loadingProfileList,\n    profiles = _useSelector.profiles;\n  useEffect(function () {\n    return function () {\n      return dispatch({\n        type: PROFILE_LIST_RESET\n      });\n    };\n  }, [dispatch]);\n  useEffect(function () {\n    if (!successProfileList) {\n      dispatch(getProfiles());\n    }\n  }, [successProfileList]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loadingProfileList ? 'Cargando Perfiles' : profiles ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(GridItem, {\n        xs: 12,\n        sm: 6,\n        style: {\n          display: 'flex',\n          alignItems: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"task-duplicate-type\",\n            children: \"Perfil a Duplicar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(Select, {\n            labelId: \"task-duplicate-type\",\n            id: \"task-duplicate-type\",\n            value: profileIdToClone,\n            label: \"task-duplicate-type\",\n            disabled: search,\n            onChange: function onChange(e) {\n              return setProfileIdToClone(e.target.value);\n            },\n            children: profiles.map(function (profile) {\n              return /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: profile.id_perfil,\n                children: profile.codigo_perfil\n              }, profile.id_perfil, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 19\n              }, _this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n        xs: 12,\n        sm: 6,\n        style: {\n          margin: '20px 0 0',\n          display: 'flex',\n          justifyContent: 'flex-end'\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          color: \"primary\",\n          disabled: profileIdToClone == '',\n          block: true,\n          onClick: function onClick() {\n            return setSearch(true);\n          },\n          children: 'Buscar asignaciones'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, _this), search && /*#__PURE__*/_jsxDEV(DuplicateTaskExtOrdOtherList, {\n        id: profileIdToClone,\n        taskType: taskType,\n        setTaskType: setTaskType\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, _this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n  }, void 0, false);\n};\n_s(DuplicateTaskExtOrdOther, \"SqXQAzZ7S2szOeDu1DOt4DnoUEI=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = DuplicateTaskExtOrdOther;\nexport default DuplicateTaskExtOrdOther;\nvar _c;\n$RefreshReg$(_c, \"DuplicateTaskExtOrdOther\");","map":{"version":3,"names":["useEffect","useState","useDispatch","useSelector","FormControl","InputLabel","MenuItem","Select","NavLink","GridItem","Button","DuplicateTaskExtOrdOtherList","PROFILE_LIST_RESET","getProfiles","jsxDEV","_jsxDEV","Fragment","_Fragment","DuplicateTaskExtOrdOther","_ref","_s","taskType","setTaskType","dispatch","_useState","_useState2","_slicedToArray","profileIdToClone","setProfileIdToClone","_useState3","_useState4","search","setSearch","_useSelector","state","profileList","successProfileList","loadingProfileList","profiles","type","children","xs","sm","style","display","alignItems","fullWidth","id","fileName","_jsxFileName","lineNumber","columnNumber","_this","labelId","value","label","disabled","onChange","e","target","map","profile","id_perfil","codigo_perfil","margin","justifyContent","color","block","onClick","_c","$RefreshReg$"],"sources":["C:/trabajo/Alehope/actividadesPreBuild/Frontend/src/screens/control-panel/Catalog/TaskOther/RegisterTaskOtherScreen/components/DuplicateTaskExtOrdOther.js"],"sourcesContent":["import { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { FormControl, InputLabel, MenuItem, Select } from '@material-ui/core'\r\nimport { NavLink } from 'react-router-dom'\r\nimport GridItem from 'components/Grid/GridItem'\r\nimport Button from 'components/CustomButtons/Button'\r\nimport DuplicateTaskExtOrdOtherList from './DuplicateTaskExtOrdOtherList'\r\nimport { PROFILE_LIST_RESET } from 'redux/constants/profileConstants'\r\nimport { getProfiles } from 'redux/actions/profileActions'\r\n\r\nconst DuplicateTaskExtOrdOther = ({ taskType, setTaskType }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const [profileIdToClone, setProfileIdToClone] = useState('')\r\n  const [search, setSearch] = useState(false)\r\n\r\n  const { successProfileList, loadingProfileList, profiles } = useSelector((state) => state.profileList)\r\n\r\n  useEffect(() => {\r\n    return () => dispatch({ type: PROFILE_LIST_RESET })\r\n  }, [dispatch])\r\n\r\n  useEffect(() => {\r\n    if (!successProfileList) {\r\n      dispatch(getProfiles())\r\n    }\r\n  }, [successProfileList])\r\n\r\n  return (\r\n    <>\r\n      {loadingProfileList ? (\r\n        'Cargando Perfiles'\r\n      ) : profiles ? (\r\n        <>\r\n          <GridItem xs={12} sm={6} style={{ display: 'flex', alignItems: 'center' }}>\r\n            <FormControl fullWidth>\r\n              <InputLabel id='task-duplicate-type'>Perfil a Duplicar</InputLabel>\r\n              <Select\r\n                labelId='task-duplicate-type'\r\n                id='task-duplicate-type'\r\n                value={profileIdToClone}\r\n                label='task-duplicate-type'\r\n                disabled={search}\r\n                onChange={(e) => setProfileIdToClone(e.target.value)}\r\n              >\r\n                {profiles.map((profile) => (\r\n                  <MenuItem key={profile.id_perfil} value={profile.id_perfil}>\r\n                    {profile.codigo_perfil}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n          </GridItem>\r\n          <GridItem xs={12} sm={6} style={{ margin: '20px 0 0', display: 'flex', justifyContent: 'flex-end' }}>\r\n            <Button type='submit' color='primary' disabled={profileIdToClone==''} block onClick={() => setSearch(true)} >\r\n              {'Buscar asignaciones'}\r\n            </Button>\r\n          </GridItem>\r\n          {search && (\r\n            <DuplicateTaskExtOrdOtherList id={profileIdToClone} taskType={taskType} setTaskType={setTaskType} />\r\n          )}\r\n        </>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default DuplicateTaskExtOrdOther\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}