{"ast":null,"code":"var _jsxFileName = \"C:\\\\trabajo\\\\Alehope\\\\actividadesPreBuild\\\\Frontend\\\\src\\\\screens\\\\control-panel\\\\AsignEntriesScreen\\\\AsignEntryRegister\\\\components\\\\TaskEntriesSelect.js\",\n  _this = this,\n  _s = $RefreshSig$();\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { FormControl, InputLabel, makeStyles, MenuItem, Select as Selectable } from '@material-ui/core';\nimport GridItem from 'components/Grid/GridItem';\n// import { TEAM_WORKS_BY_RESPONSIBLE_RESET } from 'redux/constants/teamWorkConstants'\nimport { getEntriesToManager } from 'redux/actions/entriesManagerActions';\nimport { ENTRIES_TO_MANAGER_LIST_RESET } from 'redux/constants/entriesManagerConstants';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar TaskEntriesSelect = function TaskEntriesSelect(_ref) {\n  _s();\n  var setTaskEntryId = _ref.setTaskEntryId,\n    taskEntryId = _ref.taskEntryId;\n  var dispatch = useDispatch();\n  var classes = {};\n  var _useSelector = useSelector(function (state) {\n      return state.entriesToManagerList;\n    }),\n    loadingEntriesToManagerList = _useSelector.loadingEntriesToManagerList,\n    successEntriesToManagerList = _useSelector.successEntriesToManagerList,\n    entriesToManagerList = _useSelector.entriesToManagerList;\n  var _useSelector2 = useSelector(function (state) {\n      return state.userLogin;\n    }),\n    userInfo = _useSelector2.userInfo;\n  useEffect(function () {\n    if (!successEntriesToManagerList) {\n      dispatch(getEntriesToManager(userInfo.id_puesto));\n    }\n  }, [successEntriesToManagerList]);\n  useEffect(function () {\n    return function () {\n      return dispatch({\n        type: ENTRIES_TO_MANAGER_LIST_RESET\n      });\n    };\n  }, [dispatch]);\n  var isEmpty = function isEmpty(arr) {\n    return arr.length <= 0;\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loadingEntriesToManagerList ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"Cargando\"\n    }, void 0, false) : entriesToManagerList && /*#__PURE__*/_jsxDEV(GridItem, {\n      xs: 12,\n      md: 6,\n      children: /*#__PURE__*/_jsxDEV(FormControl, {\n        fullWidth: true,\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          htmlFor: \"register-entry\",\n          children: isEmpty(entriesToManagerList === null || entriesToManagerList === void 0 ? void 0 : entriesToManagerList.assigned) ? 'No hay Tareas para seleccionar' : 'Tareas *'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }, _this), /*#__PURE__*/_jsxDEV(Selectable, {\n          MenuProps: {\n            className: classes.selectMenu\n          },\n          className: classes.select,\n          value: taskEntryId,\n          onChange: function onChange(e) {\n            setTaskEntryId(e.target.value);\n          },\n          disabled: isEmpty(entriesToManagerList === null || entriesToManagerList === void 0 ? void 0 : entriesToManagerList.assigned),\n          inputProps: {\n            name: 'register-entry',\n            id: 'register-entry'\n          },\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            classes: {\n              root: classes.selectMenuItem\n            },\n            disabled: true,\n            children: \"Selecciona uno\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, _this), entriesToManagerList.assigned.map(function (taskEntry, index) {\n            return /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: taskEntry.id_tarea,\n              classes: {\n                root: classes.selectMenuItem,\n                selected: classes.selectMenuItemSelected\n              },\n              children: [taskEntry.codigo_perfil && \"TAREA: \".concat(taskEntry.descripcion_tarea, \" PERFIL: \").concat(taskEntry.codigo_perfil, \" \"), taskEntry.nombre && \"TAREA: \".concat(taskEntry.descripcion_tarea, \" PUESTO: \").concat(taskEntry.nombre, \" \").concat(taskEntry.apellido1, \" \").concat(taskEntry.apellido2, \" \")]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 19\n            }, _this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }, _this)\n  }, void 0, false);\n};\n_s(TaskEntriesSelect, \"2aO8nVHHyBqYgyUHLnevBAz/dn4=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = TaskEntriesSelect;\nexport default TaskEntriesSelect;\nvar _c;\n$RefreshReg$(_c, \"TaskEntriesSelect\");","map":{"version":3,"names":["useEffect","useDispatch","useSelector","FormControl","InputLabel","makeStyles","MenuItem","Select","Selectable","GridItem","getEntriesToManager","ENTRIES_TO_MANAGER_LIST_RESET","Fragment","_Fragment","jsxDEV","_jsxDEV","TaskEntriesSelect","_ref","_s","setTaskEntryId","taskEntryId","dispatch","classes","_useSelector","state","entriesToManagerList","loadingEntriesToManagerList","successEntriesToManagerList","_useSelector2","userLogin","userInfo","id_puesto","type","isEmpty","arr","length","children","xs","md","fullWidth","htmlFor","assigned","fileName","_jsxFileName","lineNumber","columnNumber","_this","MenuProps","className","selectMenu","select","value","onChange","e","target","disabled","inputProps","name","id","root","selectMenuItem","map","taskEntry","index","id_tarea","selected","selectMenuItemSelected","codigo_perfil","concat","descripcion_tarea","nombre","apellido1","apellido2","_c","$RefreshReg$"],"sources":["C:/trabajo/Alehope/actividadesPreBuild/Frontend/src/screens/control-panel/AsignEntriesScreen/AsignEntryRegister/components/TaskEntriesSelect.js"],"sourcesContent":["import { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { FormControl, InputLabel, makeStyles, MenuItem, Select as Selectable } from '@material-ui/core'\r\nimport GridItem from 'components/Grid/GridItem'\r\n// import { TEAM_WORKS_BY_RESPONSIBLE_RESET } from 'redux/constants/teamWorkConstants'\r\nimport { getEntriesToManager } from 'redux/actions/entriesManagerActions'\r\nimport { ENTRIES_TO_MANAGER_LIST_RESET } from 'redux/constants/entriesManagerConstants'\r\n\r\nconst TaskEntriesSelect = ({ setTaskEntryId, taskEntryId }) => {\r\n  const dispatch = useDispatch()\r\n  const classes = {}\r\n\r\n  const { loadingEntriesToManagerList, successEntriesToManagerList, entriesToManagerList } = useSelector(\r\n    (state) => state.entriesToManagerList\r\n  )\r\n  const { userInfo } = useSelector((state) => state.userLogin)\r\n\r\n  useEffect(() => {\r\n    if (!successEntriesToManagerList) {\r\n      dispatch(getEntriesToManager(userInfo.id_puesto))\r\n    }\r\n  }, [successEntriesToManagerList])\r\n\r\n  useEffect(() => {\r\n    return () => dispatch({ type: ENTRIES_TO_MANAGER_LIST_RESET })\r\n  }, [dispatch])\r\n\r\n  const isEmpty = (arr) => arr.length <= 0\r\n\r\n  return (\r\n    <>\r\n      {loadingEntriesToManagerList ? (\r\n        <>Cargando</>\r\n      ) : (\r\n        entriesToManagerList && (\r\n          <GridItem xs={12} md={6}>\r\n            <FormControl fullWidth>\r\n              <InputLabel htmlFor='register-entry'>\r\n                {isEmpty(entriesToManagerList?.assigned) ? 'No hay Tareas para seleccionar' : 'Tareas *'}\r\n              </InputLabel>\r\n              <Selectable\r\n                MenuProps={{\r\n                  className: classes.selectMenu,\r\n                }}\r\n                className={classes.select}\r\n                value={taskEntryId}\r\n                onChange={(e) => {\r\n                  setTaskEntryId(e.target.value)\r\n                }}\r\n                disabled={isEmpty(entriesToManagerList?.assigned)}\r\n                inputProps={{\r\n                  name: 'register-entry',\r\n                  id: 'register-entry',\r\n                }}\r\n              >\r\n                <MenuItem\r\n                  classes={{\r\n                    root: classes.selectMenuItem,\r\n                  }}\r\n                  disabled\r\n                >\r\n                  Selecciona uno\r\n                </MenuItem>\r\n                {entriesToManagerList.assigned.map((taskEntry, index) => (\r\n                  <MenuItem\r\n                    value={taskEntry.id_tarea}\r\n                    key={index}\r\n                    classes={{ root: classes.selectMenuItem, selected: classes.selectMenuItemSelected }}\r\n                  >\r\n                    {taskEntry.codigo_perfil && (\r\n                       `TAREA: ${taskEntry.descripcion_tarea} PERFIL: ${taskEntry.codigo_perfil} `\r\n                     )}\r\n                    \r\n                    {taskEntry.nombre && (\r\n                       `TAREA: ${taskEntry.descripcion_tarea} PUESTO: ${taskEntry.nombre} ${taskEntry.apellido1} ${taskEntry.apellido2} `\r\n                    )}\r\n                  </MenuItem>\r\n                ))}\r\n              </Selectable>\r\n            </FormControl>\r\n          </GridItem>\r\n        )\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TaskEntriesSelect\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}