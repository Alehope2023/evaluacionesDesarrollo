{"ast":null,"code":"import{useEffect}from'react';import{useDispatch,useSelector}from'react-redux';import{FormControl,InputLabel,makeStyles,MenuItem,Select as Selectable}from'@material-ui/core';import GridItem from'components/Grid/GridItem';import{getTasksDificulties}from'redux/actions/difficultiesManagerActions';import{DIFFICULTIES_TO_MANAGER_LIST_RESET}from'redux/constants/difficultiesManagerConstants';import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var TaskDificultiesSelect=function TaskDificultiesSelect(_ref){var setTaskDificultyId=_ref.setTaskDificultyId,taskDificultyId=_ref.taskDificultyId;var dispatch=useDispatch();var classes={};var _useSelector=useSelector(function(state){return state.difficultiesToManagerList;}),loadingDifficultiesToManagerList=_useSelector.loadingDifficultiesToManagerList,successDifficultiesToManagerList=_useSelector.successDifficultiesToManagerList,difficultiesToManagerList=_useSelector.difficultiesToManagerList;var _useSelector2=useSelector(function(state){return state.userLogin;}),userInfo=_useSelector2.userInfo;useEffect(function(){if(!successDifficultiesToManagerList){dispatch(getTasksDificulties(userInfo.id_puesto));}},[successDifficultiesToManagerList]);useEffect(function(){return function(){return dispatch({type:DIFFICULTIES_TO_MANAGER_LIST_RESET});};},[dispatch]);var isEmpty=function isEmpty(arr){return arr&&arr.length<=0;};return/*#__PURE__*/_jsx(_Fragment,{children:loadingDifficultiesToManagerList?/*#__PURE__*/_jsx(_Fragment,{children:\"Cargando\"}):difficultiesToManagerList&&/*#__PURE__*/_jsx(GridItem,{xs:12,md:6,children:/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,children:[/*#__PURE__*/_jsx(InputLabel,{htmlFor:\"register-difulty\",children:isEmpty(difficultiesToManagerList)?'No hay Tareas para seleccionar':'Tareas *'}),/*#__PURE__*/_jsxs(Selectable,{MenuProps:{className:classes.selectMenu},className:classes.select,value:taskDificultyId,onChange:function onChange(e){setTaskDificultyId(e.target.value);},disabled:isEmpty(difficultiesToManagerList),inputProps:{name:'register-entry',id:'register-entry'},children:[/*#__PURE__*/_jsx(MenuItem,{classes:{root:classes.selectMenuItem},disabled:true,children:\"Selecciona una\"}),difficultiesToManagerList&&difficultiesToManagerList.map(function(taskDificulty,index){return/*#__PURE__*/_jsx(MenuItem,{value:taskDificulty.id_tarea,classes:{root:classes.selectMenuItem,selected:classes.selectMenuItemSelected},children:\"TAREA: \".concat(taskDificulty.descripcion_tarea,\" PERFIL: \").concat(taskDificulty.codigo_perfil)},index);})]})]})})});};export default TaskDificultiesSelect;","map":{"version":3,"names":["useEffect","useDispatch","useSelector","FormControl","InputLabel","makeStyles","MenuItem","Select","Selectable","GridItem","getTasksDificulties","DIFFICULTIES_TO_MANAGER_LIST_RESET","Fragment","_Fragment","jsx","_jsx","jsxs","_jsxs","TaskDificultiesSelect","_ref","setTaskDificultyId","taskDificultyId","dispatch","classes","_useSelector","state","difficultiesToManagerList","loadingDifficultiesToManagerList","successDifficultiesToManagerList","_useSelector2","userLogin","userInfo","id_puesto","type","isEmpty","arr","length","children","xs","md","fullWidth","htmlFor","MenuProps","className","selectMenu","select","value","onChange","e","target","disabled","inputProps","name","id","root","selectMenuItem","map","taskDificulty","index","id_tarea","selected","selectMenuItemSelected","concat","descripcion_tarea","codigo_perfil"],"sources":["C:/trabajo/Alehope/actividadesPreBuild/Frontend/src/screens/control-panel/AsignDificultiesScreen/AsignDificultiesRegister/components/TaskDificultiesSelect.js"],"sourcesContent":["import { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { FormControl, InputLabel, makeStyles, MenuItem, Select as Selectable } from '@material-ui/core'\r\nimport GridItem from 'components/Grid/GridItem'\r\nimport { getTasksDificulties } from 'redux/actions/difficultiesManagerActions'\r\nimport { DIFFICULTIES_TO_MANAGER_LIST_RESET } from 'redux/constants/difficultiesManagerConstants'\r\n\r\nconst TaskDificultiesSelect = ({ setTaskDificultyId, taskDificultyId }) => {\r\n  const dispatch = useDispatch()\r\n  const classes = {}\r\n\r\n  const { loadingDifficultiesToManagerList, successDifficultiesToManagerList, difficultiesToManagerList } = useSelector(\r\n    (state) => state.difficultiesToManagerList\r\n  )\r\n  const { userInfo } = useSelector((state) => state.userLogin)\r\n\r\n  useEffect(() => {\r\n    if (!successDifficultiesToManagerList) {\r\n      dispatch(getTasksDificulties(userInfo.id_puesto))\r\n    }\r\n  }, [successDifficultiesToManagerList])\r\n\r\n  useEffect(() => {\r\n    return () => dispatch({ type: DIFFICULTIES_TO_MANAGER_LIST_RESET })\r\n  }, [dispatch])\r\n\r\n  const isEmpty = (arr) => arr && arr.length <= 0\r\n\r\n  return (\r\n    <>\r\n      {loadingDifficultiesToManagerList ? (\r\n        <>Cargando</>\r\n      ) : (\r\n        difficultiesToManagerList && (\r\n          <GridItem xs={12} md={6}>\r\n            <FormControl fullWidth>\r\n              <InputLabel htmlFor='register-difulty'>\r\n                {isEmpty(difficultiesToManagerList) ? 'No hay Tareas para seleccionar' : 'Tareas *'}\r\n              </InputLabel>\r\n              <Selectable\r\n                MenuProps={{\r\n                  className: classes.selectMenu,\r\n                }}\r\n                className={classes.select}\r\n                value={taskDificultyId}\r\n                onChange={(e) => {\r\n                  setTaskDificultyId(e.target.value)\r\n                }}\r\n                disabled={isEmpty(difficultiesToManagerList)}\r\n                inputProps={{\r\n                  name: 'register-entry',\r\n                  id: 'register-entry',\r\n                }}\r\n              >\r\n                <MenuItem\r\n                  classes={{\r\n                    root: classes.selectMenuItem,\r\n                  }}\r\n                  disabled\r\n                >\r\n                  Selecciona una\r\n                </MenuItem>\r\n                {difficultiesToManagerList && difficultiesToManagerList.map((taskDificulty, index) => (\r\n                  <MenuItem\r\n                    value={taskDificulty.id_tarea}\r\n                    key={index}\r\n                    classes={{ root: classes.selectMenuItem, selected: classes.selectMenuItemSelected }}\r\n                  >\r\n                    {`TAREA: ${taskDificulty.descripcion_tarea} PERFIL: ${taskDificulty.codigo_perfil}`}\r\n                  </MenuItem>\r\n                ))}\r\n              </Selectable>\r\n            </FormControl>\r\n          </GridItem>\r\n        )\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TaskDificultiesSelect\r\n"],"mappings":"AAAA,OAASA,SAAS,KAAQ,OAAO,CACjC,OAASC,WAAW,CAAEC,WAAW,KAAQ,aAAa,CACtD,OAASC,WAAW,CAAEC,UAAU,CAAEC,UAAU,CAAEC,QAAQ,CAAEC,MAAM,GAAI,CAAAC,UAAU,KAAQ,mBAAmB,CACvG,MAAO,CAAAC,QAAQ,KAAM,0BAA0B,CAC/C,OAASC,mBAAmB,KAAQ,0CAA0C,CAC9E,OAASC,kCAAkC,KAAQ,8CAA8C,QAAAC,QAAA,IAAAC,SAAA,gCAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAEjG,GAAM,CAAAC,qBAAqB,CAAG,QAAxB,CAAAA,qBAAqBA,CAAAC,IAAA,CAAgD,IAA1C,CAAAC,kBAAkB,CAAAD,IAAA,CAAlBC,kBAAkB,CAAEC,eAAe,CAAAF,IAAA,CAAfE,eAAe,CAClE,GAAM,CAAAC,QAAQ,CAAGrB,WAAW,EAAE,CAC9B,GAAM,CAAAsB,OAAO,CAAG,CAAC,CAAC,CAElB,IAAAC,YAAA,CAA0GtB,WAAW,CACnH,SAACuB,KAAK,QAAK,CAAAA,KAAK,CAACC,yBAAyB,GAC3C,CAFOC,gCAAgC,CAAAH,YAAA,CAAhCG,gCAAgC,CAAEC,gCAAgC,CAAAJ,YAAA,CAAhCI,gCAAgC,CAAEF,yBAAyB,CAAAF,YAAA,CAAzBE,yBAAyB,CAGrG,IAAAG,aAAA,CAAqB3B,WAAW,CAAC,SAACuB,KAAK,QAAK,CAAAA,KAAK,CAACK,SAAS,GAAC,CAApDC,QAAQ,CAAAF,aAAA,CAARE,QAAQ,CAEhB/B,SAAS,CAAC,UAAM,CACd,GAAI,CAAC4B,gCAAgC,CAAE,CACrCN,QAAQ,CAACZ,mBAAmB,CAACqB,QAAQ,CAACC,SAAS,CAAC,CAAC,CACnD,CACF,CAAC,CAAE,CAACJ,gCAAgC,CAAC,CAAC,CAEtC5B,SAAS,CAAC,UAAM,CACd,MAAO,kBAAM,CAAAsB,QAAQ,CAAC,CAAEW,IAAI,CAAEtB,kCAAmC,CAAC,CAAC,GACrE,CAAC,CAAE,CAACW,QAAQ,CAAC,CAAC,CAEd,GAAM,CAAAY,OAAO,CAAG,QAAV,CAAAA,OAAOA,CAAIC,GAAG,QAAK,CAAAA,GAAG,EAAIA,GAAG,CAACC,MAAM,EAAI,CAAC,GAE/C,mBACErB,IAAA,CAAAF,SAAA,EAAAwB,QAAA,CACGV,gCAAgC,cAC/BZ,IAAA,CAAAF,SAAA,EAAAwB,QAAA,CAAE,UAAQ,EAAG,CAEbX,yBAAyB,eACvBX,IAAA,CAACN,QAAQ,EAAC6B,EAAE,CAAE,EAAG,CAACC,EAAE,CAAE,CAAE,CAAAF,QAAA,cACtBpB,KAAA,CAACd,WAAW,EAACqC,SAAS,MAAAH,QAAA,eACpBtB,IAAA,CAACX,UAAU,EAACqC,OAAO,CAAC,kBAAkB,CAAAJ,QAAA,CACnCH,OAAO,CAACR,yBAAyB,CAAC,CAAG,gCAAgC,CAAG,UAAU,EACxE,cACbT,KAAA,CAACT,UAAU,EACTkC,SAAS,CAAE,CACTC,SAAS,CAAEpB,OAAO,CAACqB,UACrB,CAAE,CACFD,SAAS,CAAEpB,OAAO,CAACsB,MAAO,CAC1BC,KAAK,CAAEzB,eAAgB,CACvB0B,QAAQ,CAAE,SAAAA,SAACC,CAAC,CAAK,CACf5B,kBAAkB,CAAC4B,CAAC,CAACC,MAAM,CAACH,KAAK,CAAC,CACpC,CAAE,CACFI,QAAQ,CAAEhB,OAAO,CAACR,yBAAyB,CAAE,CAC7CyB,UAAU,CAAE,CACVC,IAAI,CAAE,gBAAgB,CACtBC,EAAE,CAAE,gBACN,CAAE,CAAAhB,QAAA,eAEFtB,IAAA,CAACT,QAAQ,EACPiB,OAAO,CAAE,CACP+B,IAAI,CAAE/B,OAAO,CAACgC,cAChB,CAAE,CACFL,QAAQ,MAAAb,QAAA,CACT,gBAED,EAAW,CACVX,yBAAyB,EAAIA,yBAAyB,CAAC8B,GAAG,CAAC,SAACC,aAAa,CAAEC,KAAK,qBAC/E3C,IAAA,CAACT,QAAQ,EACPwC,KAAK,CAAEW,aAAa,CAACE,QAAS,CAE9BpC,OAAO,CAAE,CAAE+B,IAAI,CAAE/B,OAAO,CAACgC,cAAc,CAAEK,QAAQ,CAAErC,OAAO,CAACsC,sBAAuB,CAAE,CAAAxB,QAAA,WAAAyB,MAAA,CAEzEL,aAAa,CAACM,iBAAiB,cAAAD,MAAA,CAAYL,aAAa,CAACO,aAAa,GAH5EN,KAAK,CAID,EACZ,CAAC,GACS,GACD,EAGnB,EACA,CAEP,CAAC,CAED,cAAe,CAAAxC,qBAAqB"},"metadata":{},"sourceType":"module"}