{"ast":null,"code":"import _objectSpread from\"C:/trabajo/Alehope/actividadesPreBuild/Frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"C:/trabajo/Alehope/actividadesPreBuild/Frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from'react';import{useDispatch,useSelector}from'react-redux';import{Dialog,DialogContent,DialogTitle,makeStyles}from'@material-ui/core';import{Close}from'@material-ui/icons';import Button from'components/CustomButtons/Button';import GridContainer from'components/Grid/GridContainer';import CustomInput from'components/CustomInput/CustomInput';import GridItem from'components/Grid/GridItem';import SnackbarContent from'components/Snackbar/SnackbarContent';import{SERVICE_UPDATE_RESET}from'redux/constants/serviceConstants';import{serviceUpdateInfo,getServices}from'redux/actions/serviceActions';import styles from'../styles/updateServiceModalStyles';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var useStyles=makeStyles(styles);var UpdateServiceModal=function UpdateServiceModal(_ref){var handleCloseModal=_ref.handleCloseModal,updateServiceModal=_ref.updateServiceModal,showUpdateService=_ref.showUpdateService;var classes=useStyles();var dispatch=useDispatch();var _useState=useState(showUpdateService),_useState2=_slicedToArray(_useState,2),infoService=_useState2[0],setInfoService=_useState2[1];var _useSelector=useSelector(function(state){return state.serviceUpdate;}),loadingServiceUpdate=_useSelector.loadingServiceUpdate,errorServiceUpdate=_useSelector.errorServiceUpdate,successServiceUpdate=_useSelector.successServiceUpdate;useEffect(function(){if(successServiceUpdate){dispatch(getServices());setTimeout(function(){dispatch({type:SERVICE_UPDATE_RESET});handleCloseModal();},1000);}},[successServiceUpdate]);var updateServiceHandler=function updateServiceHandler(e){e.preventDefault();dispatch(serviceUpdateInfo(infoService));};return/*#__PURE__*/_jsx(Dialog,{open:updateServiceModal,keepMounted:true,onClose:handleCloseModal,\"aria-labelledby\":\"notice-modal-slide-title\",\"aria-describedby\":\"notice-modal-slide-description\",children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:updateServiceHandler,autoComplete:\"false\",children:[/*#__PURE__*/_jsxs(DialogTitle,{id:\"notice-modal-slide-title\",disableTypography:true,className:classes.modalHeader,children:[/*#__PURE__*/_jsx(Button,{justIcon:true,className:classes.modalCloseButton,\"aria-label\":\"Close\",color:\"transparent\",onClick:handleCloseModal,children:/*#__PURE__*/_jsx(Close,{className:classes.modalClose})},'close'),/*#__PURE__*/_jsx(\"h4\",{className:classes.modalTitle,children:\"Editar Servicio\"})]}),/*#__PURE__*/_jsxs(DialogContent,{id:\"notice-modal-slide-description\",className:classes.modalBody,children:[/*#__PURE__*/_jsxs(GridContainer,{children:[/*#__PURE__*/_jsx(GridItem,{xs:12,md:6,children:/*#__PURE__*/_jsx(CustomInput,{labelText:'COD. SERVICIO',id:\"codeService\",formControlProps:{fullWidth:true},inputProps:{value:infoService.codigo_servicio,onChange:function onChange(e){return setInfoService(_objectSpread(_objectSpread({},infoService),{},{codigo_servicio:e.target.value}));},type:'text',required:true}})}),/*#__PURE__*/_jsx(GridItem,{xs:12,md:6,children:/*#__PURE__*/_jsx(CustomInput,{labelText:'DESCRIPCION',id:\"description\",formControlProps:{fullWidth:true},inputProps:{value:infoService.descripcion_servicio,onChange:function onChange(e){return setInfoService(_objectSpread(_objectSpread({},infoService),{},{descripcion_servicio:e.target.value}));},type:'text',required:true}})}),/*#__PURE__*/_jsx(GridItem,{xs:12,style:{margin:'20px 0 0',display:'flex',justifyContent:'flex-end'},children:/*#__PURE__*/_jsx(Button,{type:\"submit\",color:successServiceUpdate?'success':'primary',block:true,children:loadingServiceUpdate?'Actualizando...':successServiceUpdate?'Servicio Actualizado':'Actualizar Servicio'})})]}),errorServiceUpdate&&/*#__PURE__*/_jsx(GridContainer,{children:/*#__PURE__*/_jsx(GridItem,{xs:12,children:/*#__PURE__*/_jsx(SnackbarContent,{message:errorServiceUpdate,color:\"danger\"})})})]})]})});};export default UpdateServiceModal;","map":{"version":3,"names":["React","useState","useEffect","useDispatch","useSelector","Dialog","DialogContent","DialogTitle","makeStyles","Close","Button","GridContainer","CustomInput","GridItem","SnackbarContent","SERVICE_UPDATE_RESET","serviceUpdateInfo","getServices","styles","jsx","_jsx","jsxs","_jsxs","useStyles","UpdateServiceModal","_ref","handleCloseModal","updateServiceModal","showUpdateService","classes","dispatch","_useState","_useState2","_slicedToArray","infoService","setInfoService","_useSelector","state","serviceUpdate","loadingServiceUpdate","errorServiceUpdate","successServiceUpdate","setTimeout","type","updateServiceHandler","e","preventDefault","open","keepMounted","onClose","children","onSubmit","autoComplete","id","disableTypography","className","modalHeader","justIcon","modalCloseButton","color","onClick","modalClose","modalTitle","modalBody","xs","md","labelText","formControlProps","fullWidth","inputProps","value","codigo_servicio","onChange","_objectSpread","target","required","descripcion_servicio","style","margin","display","justifyContent","block","message"],"sources":["C:/trabajo/Alehope/actividadesPreBuild/Frontend/src/screens/control-panel/Catalog/Service/ServiceListScreen/components/UpdateServiceModal.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Dialog, DialogContent, DialogTitle, makeStyles } from '@material-ui/core'\r\nimport { Close } from '@material-ui/icons'\r\nimport Button from 'components/CustomButtons/Button'\r\nimport GridContainer from 'components/Grid/GridContainer'\r\nimport CustomInput from 'components/CustomInput/CustomInput'\r\nimport GridItem from 'components/Grid/GridItem'\r\nimport SnackbarContent from 'components/Snackbar/SnackbarContent'\r\nimport { SERVICE_UPDATE_RESET } from 'redux/constants/serviceConstants'\r\nimport { serviceUpdateInfo, getServices } from 'redux/actions/serviceActions'\r\nimport styles from '../styles/updateServiceModalStyles'\r\n\r\nconst useStyles = makeStyles(styles)\r\n\r\nconst UpdateServiceModal = ({ handleCloseModal, updateServiceModal, showUpdateService }) => {\r\n  const classes = useStyles()\r\n  const dispatch = useDispatch()\r\n\r\n  const [infoService, setInfoService] = useState(showUpdateService)\r\n\r\n  const { loadingServiceUpdate, errorServiceUpdate, successServiceUpdate } = useSelector((state) => state.serviceUpdate)\r\n\r\n  useEffect(() => {\r\n    if (successServiceUpdate) {\r\n      dispatch(getServices())\r\n      setTimeout(() => {\r\n        dispatch({ type: SERVICE_UPDATE_RESET })\r\n        handleCloseModal()\r\n      }, 1000)\r\n    }\r\n  }, [successServiceUpdate])\r\n\r\n  const updateServiceHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(serviceUpdateInfo(infoService))\r\n  }\r\n  return (\r\n    <Dialog\r\n      open={updateServiceModal}\r\n      keepMounted\r\n      onClose={handleCloseModal}\r\n      aria-labelledby='notice-modal-slide-title'\r\n      aria-describedby='notice-modal-slide-description'\r\n    >\r\n      <form onSubmit={updateServiceHandler} autoComplete='false'>\r\n        <DialogTitle id='notice-modal-slide-title' disableTypography className={classes.modalHeader}>\r\n          <Button\r\n            justIcon\r\n            className={classes.modalCloseButton}\r\n            key='close'\r\n            aria-label='Close'\r\n            color='transparent'\r\n            onClick={handleCloseModal}\r\n          >\r\n            <Close className={classes.modalClose} />\r\n          </Button>\r\n          <h4 className={classes.modalTitle}>{`Editar Servicio`}</h4>\r\n        </DialogTitle>\r\n        <DialogContent id='notice-modal-slide-description' className={classes.modalBody}>\r\n          <GridContainer>\r\n            <GridItem xs={12} md={6}>\r\n              <CustomInput\r\n                labelText={'COD. SERVICIO'}\r\n                id='codeService'\r\n                formControlProps={{\r\n                  fullWidth: true,\r\n                }}\r\n                inputProps={{\r\n                  value: infoService.codigo_servicio,\r\n                  onChange: (e) => setInfoService({ ...infoService, codigo_servicio: e.target.value }),\r\n                  type: 'text',\r\n                  required: true,\r\n                }}\r\n              />\r\n            </GridItem>\r\n            <GridItem xs={12} md={6}>\r\n              <CustomInput\r\n                labelText={'DESCRIPCION'}\r\n                id='description'\r\n                formControlProps={{\r\n                  fullWidth: true,\r\n                }}\r\n                inputProps={{\r\n                  value: infoService.descripcion_servicio,\r\n                  onChange: (e) => setInfoService({ ...infoService, descripcion_servicio: e.target.value }),\r\n                  type: 'text',\r\n                  required: true,\r\n                }}\r\n              />\r\n            </GridItem>\r\n            <GridItem xs={12} style={{ margin: '20px 0 0', display: 'flex', justifyContent: 'flex-end' }}>\r\n              <Button type='submit' color={successServiceUpdate ? 'success' : 'primary'} block>\r\n                {loadingServiceUpdate\r\n                  ? 'Actualizando...'\r\n                  : successServiceUpdate\r\n                  ? 'Servicio Actualizado'\r\n                  : 'Actualizar Servicio'}\r\n              </Button>\r\n            </GridItem>\r\n          </GridContainer>\r\n          {errorServiceUpdate && (\r\n            <GridContainer>\r\n              <GridItem xs={12}>\r\n                <SnackbarContent message={errorServiceUpdate} color='danger' />\r\n              </GridItem>\r\n            </GridContainer>\r\n          )}\r\n        </DialogContent>\r\n      </form>\r\n    </Dialog>\r\n  )\r\n}\r\n\r\nexport default UpdateServiceModal\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}