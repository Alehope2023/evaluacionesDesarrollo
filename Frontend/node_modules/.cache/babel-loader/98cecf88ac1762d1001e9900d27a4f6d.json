{"ast":null,"code":"'use strict';\n\nimport _defineProperty from \"C:/trabajo/Alehope/actividadesPreBuild/Frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"C:/trabajo/Alehope/actividadesPreBuild/Frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _s = $RefreshSig$();\nimport { useLocation } from 'react-router-dom';\n\n// this verifies if any of the collapses should be default opened on a rerender of this component\nexport var getCollapseInitialState = function getCollapseInitialState(routes) {\n  for (var i = 0; i < routes.length; i++) {\n    if (routes[i].collapse && getCollapseInitialState(routes[i].views)) {\n      return true;\n    } else if (location.pathname === routes[i].layout + routes[i].path) {\n      return true;\n    }\n  }\n  return false;\n};\n\n// this creates the intial state of this component based on the collapse routes\n// that it gets through routes\nexport var getCollapseStates = function getCollapseStates(routes) {\n  var initialState = {};\n  routes.map(function (prop) {\n    if (prop.collapse) {\n      initialState = _objectSpread(_objectSpread(_defineProperty({}, prop.state, getCollapseInitialState(prop.views)), getCollapseStates(prop.views)), initialState);\n    }\n    return null;\n  });\n  return initialState;\n};\n\n// verifies if routeName is the one active (in browser input)\nexport var activeRoute = function activeRoute(routeName) {\n  _s();\n  return useLocation().pathname === routeName ? 'active' : '';\n};\n_s(activeRoute, \"EuD9q2dZ34PfN/QO2OBhBzeMxmY=\", false, function () {\n  return [useLocation];\n});","map":{"version":3,"names":["_defineProperty","_objectSpread","_s","$RefreshSig$","useLocation","getCollapseInitialState","routes","i","length","collapse","views","location","pathname","layout","path","getCollapseStates","initialState","map","prop","state","activeRoute","routeName"],"sources":["C:/trabajo/Alehope/actividadesPreBuild/Frontend/src/shared/mappers/routesMappers.js"],"sourcesContent":["'use strict'\r\n\r\nimport { useLocation } from 'react-router-dom'\r\n\r\n// this verifies if any of the collapses should be default opened on a rerender of this component\r\nexport const getCollapseInitialState = (routes) => {\r\n  for (let i = 0; i < routes.length; i++) {\r\n    if (routes[i].collapse && getCollapseInitialState(routes[i].views)) {\r\n      return true\r\n    } else if (location.pathname === routes[i].layout + routes[i].path) {\r\n      return true\r\n    }\r\n  }\r\n  return false\r\n}\r\n\r\n// this creates the intial state of this component based on the collapse routes\r\n// that it gets through routes\r\nexport const getCollapseStates = (routes) => {\r\n  let initialState = {}\r\n  routes.map((prop) => {\r\n    if (prop.collapse) {\r\n      initialState = {\r\n        [prop.state]: getCollapseInitialState(prop.views),\r\n        ...getCollapseStates(prop.views),\r\n        ...initialState,\r\n      }\r\n    }\r\n    return null\r\n  })\r\n  return initialState\r\n}\r\n\r\n// verifies if routeName is the one active (in browser input)\r\nexport const activeRoute = (routeName) => {\r\n  return useLocation().pathname === routeName ? 'active' : ''\r\n}\r\n"],"mappings":"AAAA,YAAY;;AAAA,OAAAA,eAAA;AAAA,OAAAC,aAAA;AAAA,IAAAC,EAAA,GAAAC,YAAA;AAEZ,SAASC,WAAW,QAAQ,kBAAkB;;AAE9C;AACA,OAAO,IAAMC,uBAAuB,GAAG,SAA1BA,uBAAuBA,CAAIC,MAAM,EAAK;EACjD,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,MAAM,CAACE,MAAM,EAAED,CAAC,EAAE,EAAE;IACtC,IAAID,MAAM,CAACC,CAAC,CAAC,CAACE,QAAQ,IAAIJ,uBAAuB,CAACC,MAAM,CAACC,CAAC,CAAC,CAACG,KAAK,CAAC,EAAE;MAClE,OAAO,IAAI;IACb,CAAC,MAAM,IAAIC,QAAQ,CAACC,QAAQ,KAAKN,MAAM,CAACC,CAAC,CAAC,CAACM,MAAM,GAAGP,MAAM,CAACC,CAAC,CAAC,CAACO,IAAI,EAAE;MAClE,OAAO,IAAI;IACb;EACF;EACA,OAAO,KAAK;AACd,CAAC;;AAED;AACA;AACA,OAAO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAIT,MAAM,EAAK;EAC3C,IAAIU,YAAY,GAAG,CAAC,CAAC;EACrBV,MAAM,CAACW,GAAG,CAAC,UAACC,IAAI,EAAK;IACnB,IAAIA,IAAI,CAACT,QAAQ,EAAE;MACjBO,YAAY,GAAAf,aAAA,CAAAA,aAAA,CAAAD,eAAA,KACTkB,IAAI,CAACC,KAAK,EAAGd,uBAAuB,CAACa,IAAI,CAACR,KAAK,CAAC,GAC9CK,iBAAiB,CAACG,IAAI,CAACR,KAAK,CAAC,GAC7BM,YAAY,CAChB;IACH;IACA,OAAO,IAAI;EACb,CAAC,CAAC;EACF,OAAOA,YAAY;AACrB,CAAC;;AAED;AACA,OAAO,IAAMI,WAAW,GAAG,SAAdA,WAAWA,CAAIC,SAAS,EAAK;EAAAnB,EAAA;EACxC,OAAOE,WAAW,EAAE,CAACQ,QAAQ,KAAKS,SAAS,GAAG,QAAQ,GAAG,EAAE;AAC7D,CAAC;AAAAnB,EAAA,CAFYkB,WAAW;EAAA,QACfhB,WAAW;AAAA"},"metadata":{},"sourceType":"module"}