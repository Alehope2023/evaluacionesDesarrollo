{"ast":null,"code":"import{useEffect}from'react';import{useDispatch,useSelector}from'react-redux';import{FormControl,InputLabel,makeStyles,MenuItem,Select as Selectable}from'@material-ui/core';import GridItem from'components/Grid/GridItem';import roles from'config/roles/roles';import{USER_LIST_BY_ROLE_NAME_RESET}from'redux/constants/userConstants';import{TEAM_WORKS_BY_VALIDATOR_RESET}from'redux/constants/teamWorkConstants';import{getUsersByRoleName}from'redux/actions/userActions';import styles from'../styles/asignValidatorStyles';import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var useStyles=makeStyles(styles);var AsignValidatorFilter=function AsignValidatorFilter(_ref){var setCurrentJobPositionId=_ref.setCurrentJobPositionId,currentJobPositionId=_ref.currentJobPositionId;var dispatch=useDispatch();var classes=useStyles();var _useSelector=useSelector(function(state){return state.userListByRoleName;}),successUserListByRoleName=_useSelector.successUserListByRoleName,loadingUserListByRoleName=_useSelector.loadingUserListByRoleName,userListByRoleNameData=_useSelector.userListByRoleNameData,errorUserListByRoleName=_useSelector.errorUserListByRoleName;useEffect(function(){if(!successUserListByRoleName&&!errorUserListByRoleName){dispatch(getUsersByRoleName(roles.VALIDADOR_ROLE));}},[successUserListByRoleName,errorUserListByRoleName]);useEffect(function(){return dispatch({type:USER_LIST_BY_ROLE_NAME_RESET});},[dispatch]);var isEmpty=function isEmpty(arr){return arr.length<=0;};return/*#__PURE__*/_jsx(_Fragment,{children:loadingUserListByRoleName?/*#__PURE__*/_jsx(_Fragment,{children:\"Cargando\"}):userListByRoleNameData&&/*#__PURE__*/_jsx(GridItem,{xs:12,md:6,children:/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,children:[/*#__PURE__*/_jsx(InputLabel,{htmlFor:\"asign-validator\",children:isEmpty(userListByRoleNameData)?'No hay Validadores para seleccionar':'Validador *'}),/*#__PURE__*/_jsxs(Selectable,{MenuProps:{className:classes.selectMenu},className:classes.select,value:currentJobPositionId,onChange:function onChange(e){dispatch({type:TEAM_WORKS_BY_VALIDATOR_RESET});setCurrentJobPositionId(e.target.value);},disabled:isEmpty(userListByRoleNameData),inputProps:{name:'asign-validator',id:'asign-validator'},children:[/*#__PURE__*/_jsx(MenuItem,{disabled:true,classes:{root:classes.selectMenuItem},children:\"Selecciona uno\"}),userListByRoleNameData.map(function(positionJob,index){return/*#__PURE__*/_jsx(MenuItem,{value:positionJob.id_puesto,classes:{root:classes.selectMenuItem,selected:classes.selectMenuItemSelected},children:\"\".concat(positionJob.nombre,\" \").concat(positionJob===null||positionJob===void 0?void 0:positionJob.apellido1,\" \").concat(positionJob===null||positionJob===void 0?void 0:positionJob.apellido2)},index);}),\")\"]})]})})});};export default AsignValidatorFilter;","map":{"version":3,"names":["useEffect","useDispatch","useSelector","FormControl","InputLabel","makeStyles","MenuItem","Select","Selectable","GridItem","roles","USER_LIST_BY_ROLE_NAME_RESET","TEAM_WORKS_BY_VALIDATOR_RESET","getUsersByRoleName","styles","Fragment","_Fragment","jsx","_jsx","jsxs","_jsxs","useStyles","AsignValidatorFilter","_ref","setCurrentJobPositionId","currentJobPositionId","dispatch","classes","_useSelector","state","userListByRoleName","successUserListByRoleName","loadingUserListByRoleName","userListByRoleNameData","errorUserListByRoleName","VALIDADOR_ROLE","type","isEmpty","arr","length","children","xs","md","fullWidth","htmlFor","MenuProps","className","selectMenu","select","value","onChange","e","target","disabled","inputProps","name","id","root","selectMenuItem","map","positionJob","index","id_puesto","selected","selectMenuItemSelected","concat","nombre","apellido1","apellido2"],"sources":["C:/trabajo/Alehope/actividadesPreBuild/Frontend/src/screens/control-panel/AsignValidatorScreen/components/AsignValidatorFilter.js"],"sourcesContent":["import { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { FormControl, InputLabel, makeStyles, MenuItem, Select as Selectable } from '@material-ui/core'\r\nimport GridItem from 'components/Grid/GridItem'\r\nimport roles from 'config/roles/roles'\r\nimport { USER_LIST_BY_ROLE_NAME_RESET } from 'redux/constants/userConstants'\r\nimport { TEAM_WORKS_BY_VALIDATOR_RESET } from 'redux/constants/teamWorkConstants'\r\nimport { getUsersByRoleName } from 'redux/actions/userActions'\r\nimport styles from '../styles/asignValidatorStyles'\r\n\r\nconst useStyles = makeStyles(styles)\r\n\r\nconst AsignValidatorFilter = ({ setCurrentJobPositionId, currentJobPositionId }) => {\r\n  const dispatch = useDispatch()\r\n  const classes = useStyles()\r\n\r\n  const {\r\n    successUserListByRoleName,\r\n    loadingUserListByRoleName,\r\n    userListByRoleNameData,\r\n    errorUserListByRoleName,\r\n  } = useSelector((state) => state.userListByRoleName)\r\n\r\n  useEffect(() => {\r\n    if (!successUserListByRoleName && !errorUserListByRoleName) {\r\n      dispatch(getUsersByRoleName(roles.VALIDADOR_ROLE))\r\n    }\r\n  }, [successUserListByRoleName, errorUserListByRoleName])\r\n\r\n  useEffect(() => {\r\n    return dispatch({ type: USER_LIST_BY_ROLE_NAME_RESET })\r\n  }, [dispatch])\r\n  const isEmpty = (arr) => arr.length <= 0\r\n  return (\r\n    <>\r\n      {loadingUserListByRoleName ? (\r\n        <>Cargando</>\r\n      ) : (\r\n        userListByRoleNameData && (\r\n          <GridItem xs={12} md={6}>\r\n            <FormControl fullWidth>\r\n              <InputLabel htmlFor='asign-validator'>\r\n                {isEmpty(userListByRoleNameData) ? 'No hay Validadores para seleccionar' : 'Validador *'}\r\n              </InputLabel>\r\n              <Selectable\r\n                MenuProps={{\r\n                  className: classes.selectMenu,\r\n                }}\r\n                className={classes.select}\r\n                value={currentJobPositionId}\r\n                onChange={(e) => {\r\n                  dispatch({ type: TEAM_WORKS_BY_VALIDATOR_RESET })\r\n                  setCurrentJobPositionId(e.target.value)\r\n                }}\r\n                disabled={isEmpty(userListByRoleNameData)}\r\n                inputProps={{\r\n                  name: 'asign-validator',\r\n                  id: 'asign-validator',\r\n                }}\r\n              >\r\n                <MenuItem\r\n                  disabled\r\n                  classes={{\r\n                    root: classes.selectMenuItem,\r\n                  }}\r\n                >\r\n                  Selecciona uno\r\n                </MenuItem>\r\n                {userListByRoleNameData.map((positionJob, index) => (\r\n                  <MenuItem\r\n                    value={positionJob.id_puesto}\r\n                    key={index}\r\n                    classes={{ root: classes.selectMenuItem, selected: classes.selectMenuItemSelected }}\r\n                  >\r\n                    {`${positionJob.nombre} ${positionJob?.apellido1} ${positionJob?.apellido2}`}\r\n                  </MenuItem>\r\n                ))}\r\n                )\r\n              </Selectable>\r\n            </FormControl>\r\n          </GridItem>\r\n        )\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AsignValidatorFilter\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}