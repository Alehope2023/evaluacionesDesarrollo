{"ast":null,"code":"var _jsxFileName = \"C:\\\\trabajo\\\\Alehope\\\\actividadesPreBuild\\\\Frontend\\\\src\\\\screens\\\\control-panel\\\\Catalog\\\\TaskSpecific\\\\RegisterTaskSpecificScreen\\\\components\\\\JobSelect.js\",\n  _this = this,\n  _s = $RefreshSig$();\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { FormControl, InputLabel, makeStyles, MenuItem, Select as Selectable } from '@material-ui/core';\nimport GridItem from 'components/Grid/GridItem';\nimport { TEAM_WORK_LIST_RESET } from 'redux/constants/teamWorkConstants';\nimport { getTeamWorks } from 'redux/actions/teamWorkActions';\n// import styles from '../styles/asignResponsiblFilerStyles'\n\n// const useStyles = makeStyles(styles)\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar JobSelect = function JobSelect(_ref) {\n  _s();\n  var setCurrentJobPositionId = _ref.setCurrentJobPositionId,\n    currentJobPositionId = _ref.currentJobPositionId;\n  var dispatch = useDispatch();\n  var classes = {};\n  var _useSelector = useSelector(function (state) {\n      return state.teamWorkList;\n    }),\n    loadingTeamWorkList = _useSelector.loadingTeamWorkList,\n    successTeamWorkList = _useSelector.successTeamWorkList,\n    teamWorkListData = _useSelector.teamWorkListData,\n    errorTeamWorkList = _useSelector.errorTeamWorkList;\n  useEffect(function () {\n    if (!successTeamWorkList && !errorTeamWorkList) {\n      dispatch(getTeamWorks());\n    }\n  }, [successTeamWorkList, errorTeamWorkList]);\n  useEffect(function () {\n    return dispatch({\n      type: TEAM_WORK_LIST_RESET\n    });\n  }, [dispatch]);\n  var isEmpty = function isEmpty(arr) {\n    return arr.length <= 0;\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loadingTeamWorkList ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"Cargando\"\n    }, void 0, false) : teamWorkListData && /*#__PURE__*/_jsxDEV(GridItem, {\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(FormControl, {\n        fullWidth: true,\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          htmlFor: \"job-position\",\n          children: isEmpty(teamWorkListData) ? 'No hay Puestos de trabajo para seleccionar' : 'Puesto de Trabajo *'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }, _this), /*#__PURE__*/_jsxDEV(Selectable, {\n          MenuProps: {\n            className: classes.selectMenu\n          },\n          className: classes.select,\n          value: currentJobPositionId,\n          onChange: function onChange(e) {\n            setCurrentJobPositionId(e.target.value);\n          },\n          inputProps: {\n            name: 'job-position',\n            id: 'job-position'\n          },\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            disabled: true,\n            classes: {\n              root: classes.selectMenuItem\n            },\n            children: \"Selecciona uno\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, _this), teamWorkListData.map(function (positionJob, index) {\n            return /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: positionJob.id_puesto,\n              classes: {\n                root: classes.selectMenuItem,\n                selected: classes.selectMenuItemSelected\n              },\n              children: \"\".concat(positionJob.nombre, \" \").concat(positionJob === null || positionJob === void 0 ? void 0 : positionJob.apellido1, \" \").concat(positionJob === null || positionJob === void 0 ? void 0 : positionJob.apellido2)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 19\n            }, _this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }, _this)\n  }, void 0, false);\n};\n_s(JobSelect, \"g1/pMcsSrzy1F8/T5CoV1Z3tK00=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = JobSelect;\nexport default JobSelect;\nvar _c;\n$RefreshReg$(_c, \"JobSelect\");","map":{"version":3,"names":["useEffect","useDispatch","useSelector","FormControl","InputLabel","makeStyles","MenuItem","Select","Selectable","GridItem","TEAM_WORK_LIST_RESET","getTeamWorks","Fragment","_Fragment","jsxDEV","_jsxDEV","JobSelect","_ref","_s","setCurrentJobPositionId","currentJobPositionId","dispatch","classes","_useSelector","state","teamWorkList","loadingTeamWorkList","successTeamWorkList","teamWorkListData","errorTeamWorkList","type","isEmpty","arr","length","children","xs","fullWidth","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","_this","MenuProps","className","selectMenu","select","value","onChange","e","target","inputProps","name","id","disabled","root","selectMenuItem","map","positionJob","index","id_puesto","selected","selectMenuItemSelected","concat","nombre","apellido1","apellido2","_c","$RefreshReg$"],"sources":["C:/trabajo/Alehope/actividadesPreBuild/Frontend/src/screens/control-panel/Catalog/TaskSpecific/RegisterTaskSpecificScreen/components/JobSelect.js"],"sourcesContent":["import { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { FormControl, InputLabel, makeStyles, MenuItem, Select as Selectable } from '@material-ui/core'\r\nimport GridItem from 'components/Grid/GridItem'\r\nimport { TEAM_WORK_LIST_RESET } from 'redux/constants/teamWorkConstants'\r\nimport { getTeamWorks } from 'redux/actions/teamWorkActions'\r\n// import styles from '../styles/asignResponsiblFilerStyles'\r\n\r\n// const useStyles = makeStyles(styles)\r\n\r\nconst JobSelect = ({ setCurrentJobPositionId, currentJobPositionId }) => {\r\n  const dispatch = useDispatch()\r\n  const classes = {}\r\n\r\n  const { loadingTeamWorkList, successTeamWorkList, teamWorkListData, errorTeamWorkList } = useSelector(\r\n    (state) => state.teamWorkList\r\n  )\r\n  useEffect(() => {\r\n    if (!successTeamWorkList && !errorTeamWorkList) {\r\n      dispatch(getTeamWorks())\r\n    }\r\n  }, [successTeamWorkList, errorTeamWorkList])\r\n\r\n  useEffect(() => {\r\n    return dispatch({ type: TEAM_WORK_LIST_RESET })\r\n  }, [dispatch])\r\n\r\n  const isEmpty = (arr) => arr.length <= 0\r\n\r\n  return (\r\n    <>\r\n      {loadingTeamWorkList ? (\r\n        <>Cargando</>\r\n      ) : (\r\n        teamWorkListData && (\r\n          <GridItem xs={12}>\r\n            <FormControl fullWidth>\r\n              <InputLabel htmlFor='job-position'>\r\n                {isEmpty(teamWorkListData) ? 'No hay Puestos de trabajo para seleccionar' : 'Puesto de Trabajo *'}\r\n              </InputLabel>\r\n              <Selectable\r\n                MenuProps={{\r\n                  className: classes.selectMenu,\r\n                }}\r\n                className={classes.select}\r\n                value={currentJobPositionId}\r\n                onChange={(e) => {\r\n                  setCurrentJobPositionId(e.target.value)\r\n                }}\r\n                inputProps={{\r\n                  name: 'job-position',\r\n                  id: 'job-position',\r\n                }}\r\n              >\r\n                <MenuItem\r\n                  disabled\r\n                  classes={{\r\n                    root: classes.selectMenuItem,\r\n                  }}\r\n                >\r\n                  Selecciona uno\r\n                </MenuItem>\r\n                {teamWorkListData.map((positionJob, index) => (\r\n                  <MenuItem\r\n                    value={positionJob.id_puesto}\r\n                    key={index}\r\n                    classes={{ root: classes.selectMenuItem, selected: classes.selectMenuItemSelected }}\r\n                  >{`${positionJob.nombre} ${positionJob?.apellido1} ${positionJob?.apellido2}`}</MenuItem>\r\n                ))}\r\n              </Selectable>\r\n            </FormControl>\r\n          </GridItem>\r\n        )\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default JobSelect\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}