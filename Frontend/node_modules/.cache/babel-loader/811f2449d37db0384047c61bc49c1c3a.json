{"ast":null,"code":"import _objectSpread from \"C:/trabajo/Alehope/actividadesPreBuild/Frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _jsxFileName = \"C:\\\\trabajo\\\\Alehope\\\\actividadesPreBuild\\\\Frontend\\\\src\\\\screens\\\\control-panel\\\\Catalog\\\\Task\\\\TaskListScreen\\\\components\\\\ActiveAndDesactiveModal\\\\ActiveAndDesactiveTaskModal.js\",\n  _this = this,\n  _s = $RefreshSig$();\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport ActiveAndDesactiveActionModal from 'components/ReactTableActions/ActiveAndDesactive/ActiveAndDesactiveActionModal';\nimport { taskUpdateInfo } from 'redux/actions/taskActions';\nimport { TASK_LIST_RESET } from 'redux/constants/taskConstants';\nimport { TASK_UPDATE_RESET } from 'redux/constants/taskConstants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar ActiveAndDesactiveTaskModal = function ActiveAndDesactiveTaskModal(_ref) {\n  _s();\n  var activeModal = _ref.activeModal,\n    closeActiveModal = _ref.closeActiveModal,\n    info = _ref.info,\n    active = _ref.active;\n  var dispatch = useDispatch();\n  var _useSelector = useSelector(function (state) {\n      return state.taskUpdate;\n    }),\n    loadingTaskUpdate = _useSelector.loadingTaskUpdate,\n    errorTaskUpdate = _useSelector.errorTaskUpdate,\n    successTaskUpdate = _useSelector.successTaskUpdate;\n  useEffect(function () {\n    if (successTaskUpdate) {\n      dispatch({\n        type: TASK_LIST_RESET\n      });\n      setTimeout(function () {\n        dispatch({\n          type: TASK_UPDATE_RESET\n        });\n        closeActiveModal();\n      }, 1000);\n    }\n  }, [successTaskUpdate]);\n  var activeOrDesactive = function activeOrDesactive(e) {\n    e.preventDefault();\n    if (active) {\n      dispatch(taskUpdateInfo(_objectSpread(_objectSpread({}, info), {}, {\n        id_puesto: 1,\n        activo: 'SI'\n      })));\n      return;\n    }\n    dispatch(taskUpdateInfo(_objectSpread(_objectSpread({}, info), {}, {\n      id_puesto: 1,\n      activo: 'NO'\n    })));\n  };\n  return /*#__PURE__*/_jsxDEV(ActiveAndDesactiveActionModal, {\n    open: activeModal,\n    handleCloseModal: closeActiveModal,\n    handleSubmit: activeOrDesactive,\n    message: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [\"Va a \", active ? 'activar' : 'desactivar', \" la tarea \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: info.id_tarea\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 61\n      }, _this)]\n    }, void 0, true),\n    modalTitle: \"\".concat(active ? 'Activar' : 'Desactivar', \" Tarea\"),\n    error: errorTaskUpdate,\n    success: successTaskUpdate,\n    loading: loadingTaskUpdate,\n    loadingMessageButton: active ? 'Activando...' : 'Desactivando',\n    succesMessageButton: active ? 'Activar' : 'Desactivar'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, _this);\n};\n_s(ActiveAndDesactiveTaskModal, \"syMETSF2H0b3gql3Ze+2har6zpw=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = ActiveAndDesactiveTaskModal;\nexport default ActiveAndDesactiveTaskModal;\nvar _c;\n$RefreshReg$(_c, \"ActiveAndDesactiveTaskModal\");","map":{"version":3,"names":["useEffect","useSelector","useDispatch","ActiveAndDesactiveActionModal","taskUpdateInfo","TASK_LIST_RESET","TASK_UPDATE_RESET","jsxDEV","_jsxDEV","Fragment","_Fragment","ActiveAndDesactiveTaskModal","_ref","_s","activeModal","closeActiveModal","info","active","dispatch","_useSelector","state","taskUpdate","loadingTaskUpdate","errorTaskUpdate","successTaskUpdate","type","setTimeout","activeOrDesactive","e","preventDefault","_objectSpread","id_puesto","activo","open","handleCloseModal","handleSubmit","message","children","id_tarea","fileName","_jsxFileName","lineNumber","columnNumber","_this","modalTitle","concat","error","success","loading","loadingMessageButton","succesMessageButton","_c","$RefreshReg$"],"sources":["C:/trabajo/Alehope/actividadesPreBuild/Frontend/src/screens/control-panel/Catalog/Task/TaskListScreen/components/ActiveAndDesactiveModal/ActiveAndDesactiveTaskModal.js"],"sourcesContent":["import { useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport ActiveAndDesactiveActionModal from 'components/ReactTableActions/ActiveAndDesactive/ActiveAndDesactiveActionModal'\r\nimport { taskUpdateInfo } from 'redux/actions/taskActions'\r\nimport { TASK_LIST_RESET } from 'redux/constants/taskConstants'\r\nimport { TASK_UPDATE_RESET } from 'redux/constants/taskConstants'\r\n\r\nconst ActiveAndDesactiveTaskModal = ({ activeModal, closeActiveModal, info, active }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const { loadingTaskUpdate, errorTaskUpdate, successTaskUpdate } = useSelector((state) => state.taskUpdate)\r\n\r\n  useEffect(() => {\r\n    if (successTaskUpdate) {\r\n      dispatch({ type: TASK_LIST_RESET })\r\n      setTimeout(() => {\r\n        dispatch({ type: TASK_UPDATE_RESET })\r\n        closeActiveModal()\r\n      }, 1000)\r\n    }\r\n  }, [successTaskUpdate])\r\n  const activeOrDesactive = (e) => {\r\n    e.preventDefault()\r\n    if (active) {\r\n      dispatch(taskUpdateInfo({ ...info, id_puesto: 1, activo: 'SI' }))\r\n      return\r\n    }\r\n    dispatch(taskUpdateInfo({ ...info, id_puesto: 1, activo: 'NO' }))\r\n  }\r\n  return (\r\n    <ActiveAndDesactiveActionModal\r\n      open={activeModal}\r\n      handleCloseModal={closeActiveModal}\r\n      handleSubmit={activeOrDesactive}\r\n      message={\r\n        <>\r\n          Va a {active ? 'activar' : 'desactivar'} la tarea <strong>{info.id_tarea}</strong>\r\n        </>\r\n      }\r\n      modalTitle={`${active ? 'Activar' : 'Desactivar'} Tarea`}\r\n      error={errorTaskUpdate}\r\n      success={successTaskUpdate}\r\n      loading={loadingTaskUpdate}\r\n      loadingMessageButton={active ? 'Activando...' : 'Desactivando'}\r\n      succesMessageButton={active ? 'Activar' : 'Desactivar'}\r\n    />\r\n  )\r\n}\r\n\r\nexport default ActiveAndDesactiveTaskModal\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}