{"ast":null,"code":"import _regeneratorRuntime from \"C:/trabajo/Alehope/actividadesPreBuild/Frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/trabajo/Alehope/actividadesPreBuild/Frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport axios from 'axios';\nimport { ENTRIES_TO_MANAGER_LIST_REQUEST, ENTRIES_TO_MANAGER_LIST_SUCCESS, ENTRIES_TO_MANAGER_LIST_FAIL, ENTRIES_TO_MANAGER_REGISTER_REQUEST, ENTRIES_TO_MANAGER_REGISTER_SUCCESS, ENTRIES_TO_MANAGER_REGISTER_FAIL } from '../constants/entriesManagerConstants';\nexport var getEntriesToManager = function getEntriesToManager(managerId) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(dispatch, getState) {\n      var _getState, userInfo, config, _yield$axios$get, data;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            dispatch({\n              type: ENTRIES_TO_MANAGER_LIST_REQUEST\n            });\n            _getState = getState(), userInfo = _getState.userLogin.userInfo;\n            config = {\n              headers: {\n                Authorization: \"Bearer \".concat(userInfo.token),\n                'Cache-Control': 'no-cache'\n              }\n            };\n            _context.next = 6;\n            return axios.get(\"/api/entradas/gestores-datos/\".concat(managerId), config);\n          case 6:\n            _yield$axios$get = _context.sent;\n            data = _yield$axios$get.data;\n            dispatch({\n              type: ENTRIES_TO_MANAGER_LIST_SUCCESS,\n              payload: data\n            });\n            _context.next = 14;\n            break;\n          case 11:\n            _context.prev = 11;\n            _context.t0 = _context[\"catch\"](0);\n            dispatch({\n              type: ENTRIES_TO_MANAGER_LIST_FAIL,\n              payload: _context.t0.response && _context.t0.response.data.message ? _context.t0.response.data.message : _context.t0.message\n            });\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee, null, [[0, 11]]);\n    }));\n    return function (_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport var assignEntriesToManager = function assignEntriesToManager(entries, currentJobPositionId) {\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(dispatch, getState) {\n      var _getState2, userInfo, config, _yield$axios$post, data;\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            dispatch({\n              type: ENTRIES_TO_MANAGER_REGISTER_REQUEST\n            });\n            _getState2 = getState(), userInfo = _getState2.userLogin.userInfo;\n            config = {\n              headers: {\n                Authorization: \"Bearer \".concat(userInfo.token),\n                'Cache-Control': 'no-cache'\n              }\n            };\n            _context2.next = 6;\n            return axios.post('/api/entradas/gestores-datos', {\n              assigned: entries,\n              id_puesto: currentJobPositionId\n            }, config);\n          case 6:\n            _yield$axios$post = _context2.sent;\n            data = _yield$axios$post.data;\n            dispatch({\n              type: ENTRIES_TO_MANAGER_REGISTER_SUCCESS,\n              payload: data\n            });\n            _context2.next = 14;\n            break;\n          case 11:\n            _context2.prev = 11;\n            _context2.t0 = _context2[\"catch\"](0);\n            dispatch({\n              type: ENTRIES_TO_MANAGER_REGISTER_FAIL,\n              payload: _context2.t0.response && _context2.t0.response.data.message ? _context2.t0.response.data.message : _context2.t0.message\n            });\n          case 14:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2, null, [[0, 11]]);\n    }));\n    return function (_x3, _x4) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"names":["axios","ENTRIES_TO_MANAGER_LIST_REQUEST","ENTRIES_TO_MANAGER_LIST_SUCCESS","ENTRIES_TO_MANAGER_LIST_FAIL","ENTRIES_TO_MANAGER_REGISTER_REQUEST","ENTRIES_TO_MANAGER_REGISTER_SUCCESS","ENTRIES_TO_MANAGER_REGISTER_FAIL","getEntriesToManager","managerId","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","dispatch","getState","_getState","userInfo","config","_yield$axios$get","data","wrap","_callee$","_context","prev","next","type","userLogin","headers","Authorization","concat","token","get","sent","payload","t0","response","message","stop","_x","_x2","apply","arguments","assignEntriesToManager","entries","currentJobPositionId","_ref2","_callee2","_getState2","_yield$axios$post","_callee2$","_context2","post","assigned","id_puesto","_x3","_x4"],"sources":["C:/trabajo/Alehope/actividadesPreBuild/Frontend/src/redux/actions/entriesManagerActions.js"],"sourcesContent":["import axios from 'axios'\r\nimport {\r\n  ENTRIES_TO_MANAGER_LIST_REQUEST,\r\n  ENTRIES_TO_MANAGER_LIST_SUCCESS,\r\n  ENTRIES_TO_MANAGER_LIST_FAIL,\r\n  ENTRIES_TO_MANAGER_REGISTER_REQUEST,\r\n  ENTRIES_TO_MANAGER_REGISTER_SUCCESS,\r\n  ENTRIES_TO_MANAGER_REGISTER_FAIL,\r\n} from '../constants/entriesManagerConstants'\r\n\r\nexport const getEntriesToManager = (managerId) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: ENTRIES_TO_MANAGER_LIST_REQUEST })\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n        'Cache-Control': 'no-cache',\r\n      },\r\n    }\r\n    const { data } = await axios.get(`/api/entradas/gestores-datos/${managerId}`, config)\r\n\r\n    dispatch({ type: ENTRIES_TO_MANAGER_LIST_SUCCESS, payload: data })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ENTRIES_TO_MANAGER_LIST_FAIL,\r\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const assignEntriesToManager = (entries, currentJobPositionId) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: ENTRIES_TO_MANAGER_REGISTER_REQUEST })\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n        'Cache-Control': 'no-cache',\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.post(\r\n      '/api/entradas/gestores-datos',\r\n      { assigned: entries, id_puesto: currentJobPositionId },\r\n      config\r\n    )\r\n\r\n    dispatch({ type: ENTRIES_TO_MANAGER_REGISTER_SUCCESS, payload: data })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ENTRIES_TO_MANAGER_REGISTER_FAIL,\r\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n    })\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}