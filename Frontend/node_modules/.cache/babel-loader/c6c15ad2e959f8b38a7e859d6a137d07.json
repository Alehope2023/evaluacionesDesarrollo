{"ast":null,"code":"import _objectSpread from \"C:/trabajo/Alehope/actividadesPreBuild/Frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"C:/trabajo/Alehope/actividadesPreBuild/Frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"C:\\\\trabajo\\\\Alehope\\\\actividadesPreBuild\\\\Frontend\\\\src\\\\screens\\\\control-panel\\\\ActivitiesListScreen\\\\ActivitiesRegisterScreen\\\\ActivitiesRegisterScreen.js\",\n  _this = this,\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { format } from 'date-fns';\nimport { FormControl, InputLabel, ListItemText, makeStyles, MenuItem, Select, DatePickerField } from '@material-ui/core';\nimport SweetAlert from 'react-bootstrap-sweetalert';\nimport Card from 'components/Card/Card';\nimport Button from 'components/CustomButtons/Button';\nimport CardBody from 'components/Card/CardBody';\nimport CustomInput from 'components/CustomInput/CustomInput';\nimport GridContainer from 'components/Grid/GridContainer';\nimport GridItem from 'components/Grid/GridItem';\nimport SnackbarContent from 'components/Snackbar/SnackbarContent';\nimport TasksSelect from './components/TasksSelect';\nimport { registerActivity } from 'redux/actions/activitiesActions';\nimport { ACTIVITIES_REGISTER_RESET } from 'redux/constants/activitiesConstants';\nimport styles from '../styles/activitiesScreenStyles';\nimport DateFnsUtils from '@date-io/date-fns';\nimport esLocale from \"date-fns/locale/es\";\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from \"@material-ui/pickers\";\nimport { getConfiguracions } from 'redux/actions/configuracionActions';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar useStyles = makeStyles(styles);\nvar ActivitiesRegisterScreen = function ActivitiesRegisterScreen() {\n  _s();\n  var _activityInfo$tarea$, _activityInfo$tarea$2, _activityInfo$tarea$3;\n  var dispatch = useDispatch();\n  var classes = useStyles();\n  var initialState = {\n    fecha_actividad: new Date(),\n    descripcion_tarea: '',\n    modalidad: '',\n    horas: '',\n    unidades: '',\n    codigo_trazabilidad: [],\n    observaciones: '',\n    tarea: '',\n    fecha_alta: format(new Date(), 'yyyy-MM-dd')\n  };\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    limiteFechas = _useState2[0],\n    setLimiteFechas = _useState2[1];\n  var _useSelector = useSelector(function (state) {\n      return state.configuracionList;\n    }),\n    configuracions = _useSelector.configuracions,\n    successConfiguracionList = _useSelector.successConfiguracionList;\n  var _useState3 = useState( /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)),\n    _useState4 = _slicedToArray(_useState3, 2),\n    componenteCodigoTrazabilidad = _useState4[0],\n    setComponenteCodigoTrazabilidad = _useState4[1];\n  var _useState5 = useState(initialState),\n    _useState6 = _slicedToArray(_useState5, 2),\n    activityInfo = _useState6[0],\n    setActivityInfo = _useState6[1];\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    task = _useState8[0],\n    setTask = _useState8[1];\n  var _useState9 = useState(null),\n    _useState10 = _slicedToArray(_useState9, 2),\n    alert = _useState10[0],\n    setAlert = _useState10[1];\n  var _useState11 = useState(''),\n    _useState12 = _slicedToArray(_useState11, 2),\n    errorTask = _useState12[0],\n    setErrorTask = _useState12[1];\n  var _useState13 = useState(''),\n    _useState14 = _slicedToArray(_useState13, 2),\n    errorCodigosTrazabilidad = _useState14[0],\n    setErrorCodigosTrazabilidad = _useState14[1];\n  var _useSelector2 = useSelector(function (state) {\n      return state.activitiesRegister;\n    }),\n    loadingActivitiesRegister = _useSelector2.loadingActivitiesRegister,\n    successActivitiesRegister = _useSelector2.successActivitiesRegister,\n    errorActivitiesRegister = _useSelector2.errorActivitiesRegister;\n  useEffect(function () {\n    if (successActivitiesRegister) {\n      setAlert( /*#__PURE__*/_jsxDEV(SweetAlert, {\n        success: true,\n        style: {\n          display: 'block',\n          marginTop: '-100px'\n        },\n        title: \"Hecho!\",\n        onConfirm: function onConfirm() {\n          return confirmSuccess();\n        },\n        onCancel: function onCancel() {\n          return hideAlert();\n        },\n        confirmBtnCssClass: classes.confirmBtnCssClass,\n        children: \"Actividad Registrada Correctamente\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, _this));\n    }\n  }, [successActivitiesRegister]);\n  useEffect(function () {\n    if (successConfiguracionList) {\n      var currentDate = new Date();\n      var rangoFechas = {\n        fecha_minima: currentDate,\n        fecha_maxima: new Date(currentDate.getFullYear(), currentDate.getMonth() + 2, 0)\n      };\n      var parametro_seleccionado = configuracions.filter(function (configuracion) {\n        return configuracion.parametro == 'registro_actividad';\n      })[0];\n      if (rangoFechas.fecha_minima.getDate() > parametro_seleccionado.valor) {\n        //Es el 1 del mes actual\n        rangoFechas.fecha_minima = new Date(currentDate.getFullYear(), currentDate.getMonth(), 1);\n      } else {\n        //Es el 1 del mes anterior\n        rangoFechas.fecha_minima = new Date(currentDate.getFullYear(), currentDate.getMonth() - 1, 1);\n      }\n      setLimiteFechas(rangoFechas);\n    } else {\n      dispatch(getConfiguracions());\n    }\n  }, [successConfiguracionList]);\n  useEffect(function () {\n    return function () {\n      return dispatch({\n        type: ACTIVITIES_REGISTER_RESET\n      });\n    };\n  }, [dispatch]);\n  var confirmSuccess = function confirmSuccess() {\n    setActivityInfo(initialState);\n    dispatch({\n      type: ACTIVITIES_REGISTER_RESET\n    });\n    setTask('');\n    setErrorTask('');\n    setErrorCodigosTrazabilidad('');\n    setAlert(null);\n  };\n  var hideAlert = function hideAlert() {\n    setAlert(null);\n  };\n  var handleRegisterActivity = function handleRegisterActivity(e) {\n    e.preventDefault();\n    if (activityInfo.tarea.length === 0) {\n      return setErrorTask('La tarea es obligatoria');\n    }\n\n    //Validamos los codigos de trazabilidad si son de nº de expediente.\n    if (activityInfo.tarea[0].codigo_trazabilidad == 'Nº Expediente') {\n      var expRegNumExp = /^[0-9]{3}\\/[0-9]{4}\\/[0-9]{5}$/;\n      for (var i = 0; i < activityInfo.codigo_trazabilidad.length; i++) {\n        if (!expRegNumExp.test(activityInfo.codigo_trazabilidad[i])) {\n          return setErrorCodigosTrazabilidad('Tiene códigos de trazabilidad incorrectos.');\n        }\n      }\n    }\n    var activity = _objectSpread(_objectSpread({}, activityInfo), {}, {\n      tarea: activityInfo.tarea[0],\n      fecha_actividad: format(activityInfo.fecha_actividad, 'yyyy-MM-dd'),\n      codigo_trazabilidad: activityInfo.codigo_trazabilidad.slice(0, activityInfo.unidades)\n    });\n    dispatch(registerActivity(activity));\n  };\n  var cambioTareaSeleccionada = function cambioTareaSeleccionada(tarea_seleccionada) {\n    setTask(tarea_seleccionada.id_tarea);\n    if ((tarea_seleccionada === null || tarea_seleccionada === void 0 ? void 0 : tarea_seleccionada.cuantificable) === 'NO') {\n      //reseteamos las unidades.\n      activityInfo.unidades = '';\n      activityInfo.codigo_trazabilidad = [];\n    } else {\n      if ((tarea_seleccionada === null || tarea_seleccionada === void 0 ? void 0 : tarea_seleccionada.codigo_trazabilidad) == 'NO') {\n        //No lleva codigos de trazabilidad lo reseteamos.\n        activityInfo.codigo_trazabilidad = [];\n      }\n    }\n    construirCodigoTrazabilidad(tarea_seleccionada, activityInfo.unidades);\n  };\n  var construirCodigoTrazabilidad = function construirCodigoTrazabilidad(tarea_seleccionada, unidades) {\n    if ((tarea_seleccionada === null || tarea_seleccionada === void 0 ? void 0 : tarea_seleccionada.cuantificable) === 'SI' && (tarea_seleccionada === null || tarea_seleccionada === void 0 ? void 0 : tarea_seleccionada.codigo_trazabilidad) != 'NO' && unidades > 0) {\n      var listado = [];\n      var expRegNumExp = /^[0-9]{3}\\/[0-9]{4}\\/[0-9]{5}$/;\n      var _loop = function _loop(i) {\n        var incorrecto_formato = false;\n        if ((tarea_seleccionada === null || tarea_seleccionada === void 0 ? void 0 : tarea_seleccionada.codigo_trazabilidad) == 'Nº Expediente') {\n          incorrecto_formato = !expRegNumExp.test(activityInfo.codigo_trazabilidad[i]);\n        }\n        listado.push( /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(GridItem, {\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(CustomInput, {\n              labelText: tarea_seleccionada === null || tarea_seleccionada === void 0 ? void 0 : tarea_seleccionada.codigo_trazabilidad,\n              id: \"codigo_trazabilidad\",\n              formControlProps: {\n                fullWidth: true\n              },\n              inputProps: {\n                value: activityInfo.codigo_trazabilidad[i],\n                onChange: function onChange(e) {\n                  activityInfo.codigo_trazabilidad[i] = e.target.value;\n                  construirCodigoTrazabilidad(tarea_seleccionada, unidades);\n                },\n                type: 'text',\n                maxLength: 50,\n                disabled: (tarea_seleccionada === null || tarea_seleccionada === void 0 ? void 0 : tarea_seleccionada.cuantificable) === 'SI' ? false : true,\n                required: (tarea_seleccionada === null || tarea_seleccionada === void 0 ? void 0 : tarea_seleccionada.codigo_trazabilidad) !== 'NO' ? true : false\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, _this), incorrecto_formato && /*#__PURE__*/_jsxDEV(GridItem, {\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: classes.incorrect_format,\n              children: \"El formato tiene que ser:  nnn/nnnn/nnnnn (n: C\\xF3digo n\\xFAmerico)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 16\n          }, _this)]\n        }, void 0, true));\n      };\n      for (var i = 0; i < unidades; i++) {\n        _loop(i);\n      }\n      setComponenteCodigoTrazabilidad(listado);\n    } else {\n      setComponenteCodigoTrazabilidad( /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(GridContainer, {\n    children: [/*#__PURE__*/_jsxDEV(GridItem, {\n      xs: 12,\n      sm: 12,\n      md: 10,\n      style: {\n        margin: '0 auto'\n      },\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(CardBody, {\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleRegisterActivity,\n            children: [/*#__PURE__*/_jsxDEV(GridContainer, {\n              children: [/*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n                locale: esLocale,\n                utils: DateFnsUtils,\n                children: /*#__PURE__*/_jsxDEV(GridItem, {\n                  xs: 12,\n                  md: 6,\n                  children: /*#__PURE__*/_jsxDEV(KeyboardDatePicker, {\n                    disableToolbar: true,\n                    format: \"dd/MM/yyyy\",\n                    margin: \"normal\",\n                    minDate: new Date('12/01/2021'),\n                    maxDate: limiteFechas.fecha_maxima,\n                    id: \"fecha_actividad\",\n                    label: \"Fecha de Actividad\",\n                    value: activityInfo.fecha_actividad,\n                    onChange: function onChange(e) {\n                      return setActivityInfo(_objectSpread(_objectSpread({}, activityInfo), {}, {\n                        fecha_actividad: e\n                      }));\n                    },\n                    required: true,\n                    KeyboardButtonProps: {\n                      \"aria-label\": \"change date\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 209,\n                    columnNumber: 21\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 208,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(TasksSelect, {\n                activityInfo: activityInfo,\n                setActivityInfo: setActivityInfo,\n                task: task,\n                setTask: cambioTareaSeleccionada\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(FormControl, {\n                  fullWidth: true,\n                  children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                    id: \"modalidad\",\n                    children: \"Modalidad\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 234,\n                    columnNumber: 21\n                  }, _this), /*#__PURE__*/_jsxDEV(Select, {\n                    labelId: \"modalidad\",\n                    id: \"modalidad\",\n                    className: classes.select,\n                    value: activityInfo.modalidad,\n                    required: true,\n                    onChange: function onChange(e) {\n                      return setActivityInfo(_objectSpread(_objectSpread({}, activityInfo), {}, {\n                        modalidad: e.target.value\n                      }));\n                    },\n                    MenuProps: {\n                      className: classes.selectMenu\n                    },\n                    children: ['Oficina', 'Teletrabajo', 'N/A'].map(function (modalidad, index) {\n                      return /*#__PURE__*/_jsxDEV(MenuItem, {\n                        value: modalidad,\n                        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                          primary: modalidad\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 248,\n                          columnNumber: 27\n                        }, _this)\n                      }, index, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 247,\n                        columnNumber: 25\n                      }, _this);\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 235,\n                    columnNumber: 21\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 233,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n                xs: 12,\n                md: 6,\n                children: /*#__PURE__*/_jsxDEV(CustomInput, {\n                  labelText: 'Horas',\n                  id: \"horas\",\n                  formControlProps: {\n                    fullWidth: true\n                  },\n                  inputProps: {\n                    value: activityInfo.horas,\n                    onChange: function onChange(e) {\n                      return setActivityInfo(_objectSpread(_objectSpread({}, activityInfo), {}, {\n                        horas: e.target.value\n                      }));\n                    },\n                    type: 'number',\n                    required: true\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 255,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n                xs: 12,\n                md: 6,\n                children: /*#__PURE__*/_jsxDEV(CustomInput, {\n                  labelText: 'Unidades',\n                  id: \"unidades\",\n                  formControlProps: {\n                    fullWidth: true\n                  },\n                  inputProps: {\n                    value: activityInfo.unidades,\n                    onChange: function onChange(e) {\n                      setActivityInfo(_objectSpread(_objectSpread({}, activityInfo), {}, {\n                        unidades: e.target.value\n                      }));\n                      construirCodigoTrazabilidad(activityInfo === null || activityInfo === void 0 ? void 0 : activityInfo.tarea[0], e.target.value);\n                    },\n                    type: 'number',\n                    disabled: (activityInfo === null || activityInfo === void 0 ? void 0 : (_activityInfo$tarea$ = activityInfo.tarea[0]) === null || _activityInfo$tarea$ === void 0 ? void 0 : _activityInfo$tarea$.cuantificable) === 'SI' ? false : true,\n                    required: (activityInfo === null || activityInfo === void 0 ? void 0 : (_activityInfo$tarea$2 = activityInfo.tarea[0]) === null || _activityInfo$tarea$2 === void 0 ? void 0 : _activityInfo$tarea$2.cuantificable) === 'SI' ? true : false\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 270,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 17\n              }, _this), (activityInfo === null || activityInfo === void 0 ? void 0 : (_activityInfo$tarea$3 = activityInfo.tarea[0]) === null || _activityInfo$tarea$3 === void 0 ? void 0 : _activityInfo$tarea$3.codigo_trazabilidad) != 'NO' && (activityInfo === null || activityInfo === void 0 ? void 0 : activityInfo.unidades) > 0 && componenteCodigoTrazabilidad, /*#__PURE__*/_jsxDEV(GridItem, {\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(CustomInput, {\n                  labelText: 'Observaciones',\n                  id: \"observaciones\",\n                  formControlProps: {\n                    fullWidth: true\n                  },\n                  inputProps: {\n                    value: activityInfo.observaciones,\n                    onChange: function onChange(e) {\n                      return setActivityInfo(_objectSpread(_objectSpread({}, activityInfo), {}, {\n                        observaciones: e.target.value\n                      }));\n                    },\n                    type: 'text',\n                    maxLength: 200\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 289,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 17\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 15\n            }, _this), errorActivitiesRegister && /*#__PURE__*/_jsxDEV(GridContainer, {\n              children: /*#__PURE__*/_jsxDEV(GridItem, {\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(SnackbarContent, {\n                  message: errorActivitiesRegister,\n                  color: \"danger\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 307,\n                  columnNumber: 21\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 19\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 17\n            }, _this), errorTask && !activityInfo.tarea.length > 0 && /*#__PURE__*/_jsxDEV(GridContainer, {\n              children: /*#__PURE__*/_jsxDEV(GridItem, {\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(SnackbarContent, {\n                  message: errorTask,\n                  color: \"danger\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 314,\n                  columnNumber: 21\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 313,\n                columnNumber: 19\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 17\n            }, _this), errorCodigosTrazabilidad && /*#__PURE__*/_jsxDEV(GridContainer, {\n              children: /*#__PURE__*/_jsxDEV(GridItem, {\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(SnackbarContent, {\n                  message: errorCodigosTrazabilidad,\n                  color: \"danger\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 321,\n                  columnNumber: 21\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 320,\n                columnNumber: 19\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              color: \"primary\",\n              className: classes.registerButton,\n              children: loadingActivitiesRegister ? 'Registrando Actividad...' : 'Registrar Actividad'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, _this), alert]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 201,\n    columnNumber: 5\n  }, _this);\n};\n_s(ActivitiesRegisterScreen, \"2P90Yq4AX1fWGF0a67gYs/suxeY=\", false, function () {\n  return [useDispatch, useStyles, useSelector, useSelector];\n});\n_c = ActivitiesRegisterScreen;\nexport default ActivitiesRegisterScreen;\nvar _c;\n$RefreshReg$(_c, \"ActivitiesRegisterScreen\");","map":{"version":3,"names":["useEffect","useState","useDispatch","useSelector","format","FormControl","InputLabel","ListItemText","makeStyles","MenuItem","Select","DatePickerField","SweetAlert","Card","Button","CardBody","CustomInput","GridContainer","GridItem","SnackbarContent","TasksSelect","registerActivity","ACTIVITIES_REGISTER_RESET","styles","DateFnsUtils","esLocale","MuiPickersUtilsProvider","KeyboardDatePicker","getConfiguracions","Fragment","_Fragment","jsxDEV","_jsxDEV","useStyles","ActivitiesRegisterScreen","_s","_activityInfo$tarea$","_activityInfo$tarea$2","_activityInfo$tarea$3","dispatch","classes","initialState","fecha_actividad","Date","descripcion_tarea","modalidad","horas","unidades","codigo_trazabilidad","observaciones","tarea","fecha_alta","_useState","_useState2","_slicedToArray","limiteFechas","setLimiteFechas","_useSelector","state","configuracionList","configuracions","successConfiguracionList","_useState3","_useState4","componenteCodigoTrazabilidad","setComponenteCodigoTrazabilidad","_useState5","_useState6","activityInfo","setActivityInfo","_useState7","_useState8","task","setTask","_useState9","_useState10","alert","setAlert","_useState11","_useState12","errorTask","setErrorTask","_useState13","_useState14","errorCodigosTrazabilidad","setErrorCodigosTrazabilidad","_useSelector2","activitiesRegister","loadingActivitiesRegister","successActivitiesRegister","errorActivitiesRegister","success","style","display","marginTop","title","onConfirm","confirmSuccess","onCancel","hideAlert","confirmBtnCssClass","children","fileName","_jsxFileName","lineNumber","columnNumber","_this","currentDate","rangoFechas","fecha_minima","fecha_maxima","getFullYear","getMonth","parametro_seleccionado","filter","configuracion","parametro","getDate","valor","type","handleRegisterActivity","e","preventDefault","length","expRegNumExp","i","test","activity","_objectSpread","slice","cambioTareaSeleccionada","tarea_seleccionada","id_tarea","cuantificable","construirCodigoTrazabilidad","listado","_loop","incorrecto_formato","push","xs","labelText","id","formControlProps","fullWidth","inputProps","value","onChange","target","maxLength","disabled","required","className","incorrect_format","sm","md","margin","onSubmit","locale","utils","disableToolbar","minDate","maxDate","label","KeyboardButtonProps","labelId","select","MenuProps","selectMenu","map","index","primary","message","color","registerButton","_c","$RefreshReg$"],"sources":["C:/trabajo/Alehope/actividadesPreBuild/Frontend/src/screens/control-panel/ActivitiesListScreen/ActivitiesRegisterScreen/ActivitiesRegisterScreen.js"],"sourcesContent":["import { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { format } from 'date-fns'\r\nimport { FormControl, InputLabel, ListItemText, makeStyles, MenuItem, Select, DatePickerField } from '@material-ui/core'\r\nimport SweetAlert from 'react-bootstrap-sweetalert'\r\nimport Card from 'components/Card/Card'\r\nimport Button from 'components/CustomButtons/Button'\r\nimport CardBody from 'components/Card/CardBody'\r\nimport CustomInput from 'components/CustomInput/CustomInput'\r\nimport GridContainer from 'components/Grid/GridContainer'\r\nimport GridItem from 'components/Grid/GridItem'\r\nimport SnackbarContent from 'components/Snackbar/SnackbarContent'\r\nimport TasksSelect from './components/TasksSelect'\r\nimport { registerActivity } from 'redux/actions/activitiesActions'\r\nimport { ACTIVITIES_REGISTER_RESET } from 'redux/constants/activitiesConstants'\r\nimport styles from '../styles/activitiesScreenStyles'\r\nimport DateFnsUtils from '@date-io/date-fns'\r\nimport esLocale from \"date-fns/locale/es\";\r\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from \"@material-ui/pickers\";\r\nimport { getConfiguracions } from 'redux/actions/configuracionActions'\r\n\r\nconst useStyles = makeStyles(styles)\r\n\r\nconst ActivitiesRegisterScreen = () => {\r\n  const dispatch = useDispatch()\r\n  const classes = useStyles()\r\n\r\n  const initialState = {\r\n    fecha_actividad: new Date(),    \r\n    descripcion_tarea: '',\r\n    modalidad: '',\r\n    horas: '',\r\n    unidades: '',\r\n    codigo_trazabilidad: [],\r\n    observaciones: '',\r\n    tarea: '',\r\n    fecha_alta: format(new Date(), 'yyyy-MM-dd'),\r\n  }\r\n\r\n  \r\n  const [limiteFechas, setLimiteFechas] = useState('')\r\n  const { configuracions, successConfiguracionList } = useSelector((state) => state.configuracionList)\r\n\r\n  const [componenteCodigoTrazabilidad, setComponenteCodigoTrazabilidad] = useState(<></>)\r\n  const [activityInfo, setActivityInfo] = useState(initialState)\r\n  const [task, setTask] = useState('')\r\n  const [alert, setAlert] = useState(null)\r\n  const [errorTask, setErrorTask] = useState('')\r\n  const [errorCodigosTrazabilidad, setErrorCodigosTrazabilidad] = useState('')\r\n  const { loadingActivitiesRegister, successActivitiesRegister, errorActivitiesRegister } = useSelector(\r\n    (state) => state.activitiesRegister\r\n  )\r\n\r\n  useEffect(() => {\r\n    if (successActivitiesRegister) {\r\n      setAlert(\r\n        <SweetAlert\r\n          success\r\n          style={{ display: 'block', marginTop: '-100px' }}\r\n          title='Hecho!'\r\n          onConfirm={() => confirmSuccess()}\r\n          onCancel={() => hideAlert()}\r\n          confirmBtnCssClass={classes.confirmBtnCssClass}\r\n        >\r\n          Actividad Registrada Correctamente\r\n        </SweetAlert>\r\n      )\r\n    }\r\n  }, [successActivitiesRegister])\r\n\r\n\r\n  useEffect(() => {\r\n    if (successConfiguracionList) {\r\n      const currentDate = new Date()\r\n      const rangoFechas = {\r\n        fecha_minima: currentDate,\r\n        fecha_maxima: new Date(currentDate.getFullYear(), currentDate.getMonth() + 2, 0)\r\n      }\r\n\r\n      const parametro_seleccionado = configuracions.filter((configuracion) => configuracion.parametro == 'registro_actividad' )[0];\r\n      if(rangoFechas.fecha_minima.getDate() > parametro_seleccionado.valor) {\r\n        //Es el 1 del mes actual\r\n        rangoFechas.fecha_minima = new Date(currentDate.getFullYear(), currentDate.getMonth(), 1);\r\n      }\r\n      else {\r\n        //Es el 1 del mes anterior\r\n        rangoFechas.fecha_minima = new Date(currentDate.getFullYear(), currentDate.getMonth()-1, 1);\r\n      }      \r\n      setLimiteFechas(rangoFechas)\r\n    }\r\n    else {\r\n      dispatch(getConfiguracions())\r\n    }\r\n    \r\n  }, [successConfiguracionList])\r\n\r\n\r\n  useEffect(() => {\r\n    return () => dispatch({ type: ACTIVITIES_REGISTER_RESET })\r\n  }, [dispatch])\r\n\r\n  const confirmSuccess = () => {\r\n    setActivityInfo(initialState)\r\n    dispatch({ type: ACTIVITIES_REGISTER_RESET })\r\n    setTask('')\r\n    setErrorTask('')\r\n    setErrorCodigosTrazabilidad('')\r\n    setAlert(null)\r\n  }\r\n  const hideAlert = () => {\r\n    setAlert(null)\r\n  }\r\n  const handleRegisterActivity = (e) => {\r\n    e.preventDefault()\r\n    if (activityInfo.tarea.length === 0) {\r\n      return setErrorTask('La tarea es obligatoria')\r\n    }\r\n\r\n    //Validamos los codigos de trazabilidad si son de nº de expediente.\r\n    if(activityInfo.tarea[0].codigo_trazabilidad == 'Nº Expediente') {\r\n      const expRegNumExp = /^[0-9]{3}\\/[0-9]{4}\\/[0-9]{5}$/;\r\n      for(let i = 0; i < activityInfo.codigo_trazabilidad.length; i++) {\r\n        if(!expRegNumExp.test(activityInfo.codigo_trazabilidad[i])) {\r\n          return setErrorCodigosTrazabilidad('Tiene códigos de trazabilidad incorrectos.')\r\n        }\r\n      }\r\n    }\r\n\r\n    const activity = {\r\n      ...activityInfo,\r\n      tarea: activityInfo.tarea[0],\r\n      fecha_actividad: format(activityInfo.fecha_actividad, 'yyyy-MM-dd'),\r\n      codigo_trazabilidad: activityInfo.codigo_trazabilidad.slice(0, activityInfo.unidades)\r\n    }\r\n    dispatch(registerActivity(activity))\r\n  }\r\n\r\n  const cambioTareaSeleccionada = (tarea_seleccionada) => {\r\n    setTask(tarea_seleccionada.id_tarea)\r\n    if(tarea_seleccionada?.cuantificable === 'NO') {\r\n      //reseteamos las unidades.\r\n      activityInfo.unidades = ''\r\n      activityInfo.codigo_trazabilidad = []\r\n    }\r\n    else {\r\n      if (tarea_seleccionada?.codigo_trazabilidad == 'NO') {\r\n        //No lleva codigos de trazabilidad lo reseteamos.\r\n        activityInfo.codigo_trazabilidad = []\r\n      }\r\n    }\r\n    construirCodigoTrazabilidad(tarea_seleccionada, activityInfo.unidades)\r\n  }\r\n\r\n  const construirCodigoTrazabilidad = (tarea_seleccionada, unidades) => {\r\n    if (tarea_seleccionada?.cuantificable === 'SI' && \r\n        tarea_seleccionada?.codigo_trazabilidad != 'NO'  && unidades > 0) {\r\n      var listado = []\r\n      const expRegNumExp = /^[0-9]{3}\\/[0-9]{4}\\/[0-9]{5}$/;\r\n      for(let i = 0; i < unidades; i++) {\r\n          let incorrecto_formato = false\r\n\r\n          if(tarea_seleccionada?.codigo_trazabilidad == 'Nº Expediente') {\r\n            incorrecto_formato = !expRegNumExp.test(activityInfo.codigo_trazabilidad[i]);\r\n          }\r\n\r\n          listado.push(\r\n          <>\r\n            <GridItem xs={12}>\r\n              <CustomInput                    \r\n                labelText={tarea_seleccionada?.codigo_trazabilidad}                    \r\n                id='codigo_trazabilidad'\r\n                formControlProps={{\r\n                  fullWidth: true,\r\n                }}\r\n                inputProps={{\r\n                  value: activityInfo.codigo_trazabilidad[i],\r\n                  onChange: (e) => { activityInfo.codigo_trazabilidad[i] = e.target.value; construirCodigoTrazabilidad(tarea_seleccionada, unidades)},\r\n                  type: 'text',\r\n                  maxLength: 50,\r\n                  disabled: tarea_seleccionada?.cuantificable === 'SI' ? false : true,\r\n                  required: tarea_seleccionada?.codigo_trazabilidad !== 'NO' ? true : false,\r\n                }}\r\n              />\r\n            </GridItem>\r\n            {incorrecto_formato &&\r\n              (<GridItem xs={12}>\r\n                <span className={classes.incorrect_format}>El formato tiene que ser:  nnn/nnnn/nnnnn (n: Código númerico)</span>\r\n              </GridItem>\r\n            )}\r\n          </>\r\n          )\r\n      }\r\n      setComponenteCodigoTrazabilidad(listado)\r\n    }\r\n    else {\r\n      setComponenteCodigoTrazabilidad(<></>)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <GridContainer>\r\n      <GridItem xs={12} sm={12} md={10} style={{ margin: '0 auto' }}>\r\n        <Card>\r\n          <CardBody>\r\n            <form onSubmit={handleRegisterActivity}>\r\n              <GridContainer>\r\n                <MuiPickersUtilsProvider locale={esLocale} utils={DateFnsUtils}>\r\n                  <GridItem xs={12} md={6}>\r\n                    <KeyboardDatePicker\r\n                      disableToolbar\r\n                      format=\"dd/MM/yyyy\"\r\n                      margin=\"normal\"\r\n                      minDate={new Date('12/01/2021')}\r\n                      maxDate={limiteFechas.fecha_maxima}\r\n                      id=\"fecha_actividad\"\r\n                      label=\"Fecha de Actividad\"\r\n                      value={activityInfo.fecha_actividad}\r\n                      onChange={(e) => setActivityInfo({ ...activityInfo, fecha_actividad: e })}\r\n                      required={true}\r\n                      KeyboardButtonProps={{\r\n                        \"aria-label\": \"change date\"\r\n                      }}\r\n                    />\r\n                  </GridItem>\r\n                </MuiPickersUtilsProvider>                \r\n                <TasksSelect\r\n                  activityInfo={activityInfo}\r\n                  setActivityInfo={setActivityInfo}\r\n                  task={task}\r\n                  setTask={cambioTareaSeleccionada}\r\n                />\r\n                <GridItem xs={12}>\r\n                  <FormControl fullWidth>\r\n                    <InputLabel id='modalidad'>Modalidad</InputLabel>\r\n                    <Select\r\n                      labelId='modalidad'\r\n                      id='modalidad'\r\n                      className={classes.select}\r\n                      value={activityInfo.modalidad}           \r\n                      required= {true}           \r\n                      onChange={(e) => setActivityInfo({ ...activityInfo, modalidad: e.target.value })}\r\n                      MenuProps={{\r\n                        className: classes.selectMenu,\r\n                      }}\r\n                    >\r\n                      {['Oficina', 'Teletrabajo', 'N/A'].map((modalidad, index) => (\r\n                        <MenuItem key={index} value={modalidad}>\r\n                          <ListItemText primary={modalidad} />\r\n                        </MenuItem>\r\n                      ))}\r\n                    </Select>\r\n                  </FormControl>\r\n                </GridItem>\r\n                <GridItem xs={12} md={6}>\r\n                  <CustomInput\r\n                    labelText={'Horas'}\r\n                    id='horas'\r\n                    formControlProps={{\r\n                      fullWidth: true,\r\n                    }}\r\n                    inputProps={{\r\n                      value: activityInfo.horas,\r\n                      onChange: (e) => setActivityInfo({ ...activityInfo, horas: e.target.value }),\r\n                      type: 'number',\r\n                      required: true,\r\n                    }}\r\n                  />\r\n                </GridItem>\r\n                <GridItem xs={12} md={6}>\r\n                  <CustomInput\r\n                    labelText={'Unidades'}\r\n                    id='unidades'\r\n                    formControlProps={{\r\n                      fullWidth: true,\r\n                    }}\r\n                    inputProps={{\r\n                      value: activityInfo.unidades,\r\n                      onChange: (e) => {setActivityInfo({ ...activityInfo, unidades: e.target.value }); construirCodigoTrazabilidad(activityInfo?.tarea[0], e.target.value)},\r\n                      type: 'number',\r\n                      disabled: activityInfo?.tarea[0]?.cuantificable === 'SI' ? false : true,\r\n                      required: activityInfo?.tarea[0]?.cuantificable === 'SI' ? true : false,\r\n                    }}\r\n                  />\r\n                </GridItem>\r\n                {activityInfo?.tarea[0]?.codigo_trazabilidad != 'NO' && activityInfo?.unidades > 0 && (                                    \r\n                    componenteCodigoTrazabilidad\r\n                )}\r\n                <GridItem xs={12}>\r\n                  <CustomInput\r\n                    labelText={'Observaciones'}\r\n                    id='observaciones'\r\n                    formControlProps={{\r\n                      fullWidth: true,\r\n                    }}\r\n                    inputProps={{\r\n                      value: activityInfo.observaciones,\r\n                      onChange: (e) => setActivityInfo({ ...activityInfo, observaciones: e.target.value }),\r\n                      type: 'text',\r\n                      maxLength: 200,                      \r\n                    }}\r\n                  />\r\n                </GridItem>\r\n              </GridContainer>\r\n              {errorActivitiesRegister && (\r\n                <GridContainer>\r\n                  <GridItem xs={12}>\r\n                    <SnackbarContent message={errorActivitiesRegister} color='danger' />\r\n                  </GridItem>\r\n                </GridContainer>\r\n              )}\r\n              {errorTask && !activityInfo.tarea.length > 0 && (\r\n                <GridContainer>\r\n                  <GridItem xs={12}>\r\n                    <SnackbarContent message={errorTask} color='danger' />\r\n                  </GridItem>\r\n                </GridContainer>\r\n              )}\r\n              {errorCodigosTrazabilidad && (\r\n                <GridContainer>\r\n                  <GridItem xs={12}>\r\n                    <SnackbarContent message={errorCodigosTrazabilidad} color='danger' />\r\n                  </GridItem>\r\n                </GridContainer>\r\n              )}\r\n              <Button type='submit' color='primary' className={classes.registerButton}>\r\n                {loadingActivitiesRegister ? 'Registrando Actividad...' : 'Registrar Actividad'}\r\n              </Button>\r\n            </form>\r\n          </CardBody>\r\n        </Card>\r\n      </GridItem>\r\n      {alert}\r\n    </GridContainer>\r\n  )\r\n}\r\n\r\nexport default ActivitiesRegisterScreen\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}