{"ast":null,"code":"import _regeneratorRuntime from\"C:/trabajo/Alehope/actividadesPreBuild/Frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/trabajo/Alehope/actividadesPreBuild/Frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import axios from'axios';import{TASK_TYPE_REGISTER_REQUEST,TASK_TYPE_REGISTER_SUCCESS,TASK_TYPE_REGISTER_FAIL,TASK_TYPE_LIST_REQUEST,TASK_TYPE_LIST_SUCCESS,TASK_TYPE_LIST_FAIL,TASK_TYPE_UPDATE_SUCCESS,TASK_TYPE_UPDATE_REQUEST,TASK_TYPE_UPDATE_FAIL,TASK_TYPE_DELETE_FAIL,TASK_TYPE_DELETE_REQUEST,TASK_TYPE_DELETE_SUCCESS}from'../constants/taskTypeConstants';export var registerTaskType=function registerTaskType(taskType){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(dispatch){var _yield$axios$post,data;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.prev=0;dispatch({type:TASK_TYPE_REGISTER_REQUEST});_context.next=4;return axios.post('/api/tipostareas',taskType);case 4:_yield$axios$post=_context.sent;data=_yield$axios$post.data;dispatch({type:TASK_TYPE_REGISTER_SUCCESS,payload:data});_context.next=12;break;case 9:_context.prev=9;_context.t0=_context[\"catch\"](0);dispatch({type:TASK_TYPE_REGISTER_FAIL,payload:_context.t0.response&&_context.t0.response.data.message?_context.t0.response.data.message:_context.t0.message});case 12:case\"end\":return _context.stop();}},_callee,null,[[0,9]]);}));return function(_x){return _ref.apply(this,arguments);};}();};export var getTaskTypes=function getTaskTypes(){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(dispatch){var _yield$axios$get,data;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:_context2.prev=0;dispatch({type:TASK_TYPE_LIST_REQUEST});_context2.next=4;return axios.get('/api/tipostareas');case 4:_yield$axios$get=_context2.sent;data=_yield$axios$get.data;dispatch({type:TASK_TYPE_LIST_SUCCESS,payload:data});_context2.next=12;break;case 9:_context2.prev=9;_context2.t0=_context2[\"catch\"](0);dispatch({type:TASK_TYPE_LIST_FAIL,payload:_context2.t0.response&&_context2.t0.response.data.message?_context2.t0.response.data.message:_context2.t0.message});case 12:case\"end\":return _context2.stop();}},_callee2,null,[[0,9]]);}));return function(_x2){return _ref2.apply(this,arguments);};}();};export var taskTypeUpdateInfo=function taskTypeUpdateInfo(taskType){return/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(dispatch){var _yield$axios$put,data;return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1)switch(_context3.prev=_context3.next){case 0:_context3.prev=0;dispatch({type:TASK_TYPE_UPDATE_REQUEST});_context3.next=4;return axios.put(\"/api/tipostareas/\".concat(taskType.id_tipos_tarea),taskType);case 4:_yield$axios$put=_context3.sent;data=_yield$axios$put.data;dispatch({type:TASK_TYPE_UPDATE_SUCCESS,payload:data});_context3.next=12;break;case 9:_context3.prev=9;_context3.t0=_context3[\"catch\"](0);dispatch({type:TASK_TYPE_UPDATE_FAIL,payload:_context3.t0.response&&_context3.t0.response.data.message?_context3.t0.response.data.message:_context3.t0.message});case 12:case\"end\":return _context3.stop();}},_callee3,null,[[0,9]]);}));return function(_x3){return _ref3.apply(this,arguments);};}();};export var deleteTaskType=function deleteTaskType(id){return/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(dispatch){return _regeneratorRuntime().wrap(function _callee4$(_context4){while(1)switch(_context4.prev=_context4.next){case 0:_context4.prev=0;dispatch({type:TASK_TYPE_DELETE_REQUEST});_context4.next=4;return axios.delete(\"/api/tipostareas/\".concat(id));case 4:dispatch({type:TASK_TYPE_DELETE_SUCCESS});_context4.next=10;break;case 7:_context4.prev=7;_context4.t0=_context4[\"catch\"](0);dispatch({type:TASK_TYPE_DELETE_FAIL,payload:_context4.t0.response&&_context4.t0.response.data.message?_context4.t0.response.data.message:_context4.t0.message});case 10:case\"end\":return _context4.stop();}},_callee4,null,[[0,7]]);}));return function(_x4){return _ref4.apply(this,arguments);};}();};","map":{"version":3,"names":["axios","TASK_TYPE_REGISTER_REQUEST","TASK_TYPE_REGISTER_SUCCESS","TASK_TYPE_REGISTER_FAIL","TASK_TYPE_LIST_REQUEST","TASK_TYPE_LIST_SUCCESS","TASK_TYPE_LIST_FAIL","TASK_TYPE_UPDATE_SUCCESS","TASK_TYPE_UPDATE_REQUEST","TASK_TYPE_UPDATE_FAIL","TASK_TYPE_DELETE_FAIL","TASK_TYPE_DELETE_REQUEST","TASK_TYPE_DELETE_SUCCESS","registerTaskType","taskType","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","dispatch","_yield$axios$post","data","wrap","_callee$","_context","prev","next","type","post","sent","payload","t0","response","message","stop","_x","apply","arguments","getTaskTypes","_ref2","_callee2","_yield$axios$get","_callee2$","_context2","get","_x2","taskTypeUpdateInfo","_ref3","_callee3","_yield$axios$put","_callee3$","_context3","put","concat","id_tipos_tarea","_x3","deleteTaskType","id","_ref4","_callee4","_callee4$","_context4","delete","_x4"],"sources":["C:/trabajo/Alehope/actividadesPreBuild/Frontend/src/redux/actions/taskTypeActions.js"],"sourcesContent":["import axios from 'axios'\r\nimport {\r\n  TASK_TYPE_REGISTER_REQUEST,\r\n  TASK_TYPE_REGISTER_SUCCESS,\r\n  TASK_TYPE_REGISTER_FAIL,\r\n  TASK_TYPE_LIST_REQUEST,\r\n  TASK_TYPE_LIST_SUCCESS,\r\n  TASK_TYPE_LIST_FAIL,\r\n  TASK_TYPE_UPDATE_SUCCESS,\r\n  TASK_TYPE_UPDATE_REQUEST,\r\n  TASK_TYPE_UPDATE_FAIL,\r\n  TASK_TYPE_DELETE_FAIL,\r\n  TASK_TYPE_DELETE_REQUEST,\r\n  TASK_TYPE_DELETE_SUCCESS,\r\n} from '../constants/taskTypeConstants'\r\n\r\nexport const registerTaskType = (taskType) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: TASK_TYPE_REGISTER_REQUEST })\r\n\r\n    const { data } = await axios.post('/api/tipostareas', taskType)\r\n\r\n    dispatch({ type: TASK_TYPE_REGISTER_SUCCESS, payload: data })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: TASK_TYPE_REGISTER_FAIL,\r\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const getTaskTypes = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: TASK_TYPE_LIST_REQUEST })\r\n\r\n    const { data } = await axios.get('/api/tipostareas')\r\n\r\n    dispatch({ type: TASK_TYPE_LIST_SUCCESS, payload: data })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: TASK_TYPE_LIST_FAIL,\r\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const taskTypeUpdateInfo = (taskType) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: TASK_TYPE_UPDATE_REQUEST })\r\n\r\n    const { data } = await axios.put(`/api/tipostareas/${taskType.id_tipos_tarea}`, taskType)\r\n\r\n    dispatch({ type: TASK_TYPE_UPDATE_SUCCESS, payload: data })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: TASK_TYPE_UPDATE_FAIL,\r\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const deleteTaskType = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: TASK_TYPE_DELETE_REQUEST })\r\n\r\n    await axios.delete(`/api/tipostareas/${id}`)\r\n\r\n    dispatch({ type: TASK_TYPE_DELETE_SUCCESS })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: TASK_TYPE_DELETE_FAIL,\r\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n    })\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}