{"ast":null,"code":"import { TASK_TYPE_REGISTER_REQUEST, TASK_TYPE_REGISTER_SUCCESS, TASK_TYPE_REGISTER_FAIL, TASK_TYPE_REGISTER_RESET, TASK_TYPE_LIST_REQUEST, TASK_TYPE_LIST_SUCCESS, TASK_TYPE_LIST_FAIL, TASK_TYPE_LIST_RESET, TASK_TYPE_UPDATE_SUCCESS, TASK_TYPE_UPDATE_REQUEST, TASK_TYPE_UPDATE_FAIL, TASK_TYPE_UPDATE_RESET, TASK_TYPE_DELETE_FAIL, TASK_TYPE_DELETE_REQUEST, TASK_TYPE_DELETE_SUCCESS, TASK_TYPE_DELETE_RESET } from '../constants/taskTypeConstants.js';\nexport var taskTypeRegisterReducer = function taskTypeRegisterReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case TASK_TYPE_REGISTER_REQUEST:\n      return {\n        loadingTaskTypeRegister: true\n      };\n    case TASK_TYPE_REGISTER_SUCCESS:\n      return {\n        loadingTaskTypeRegister: false,\n        successTaskTypeRegister: true,\n        taskType: action.payload\n      };\n    case TASK_TYPE_REGISTER_FAIL:\n      return {\n        loadingTaskTypeRegister: false,\n        errorTaskTypeRegister: action.payload\n      };\n    case TASK_TYPE_REGISTER_RESET:\n      return {};\n    default:\n      return state;\n  }\n};\nexport var taskTypeListReducer = function taskTypeListReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    taskTypes: []\n  };\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case TASK_TYPE_LIST_REQUEST:\n      return {\n        loadingTaskTypeList: true\n      };\n    case TASK_TYPE_LIST_SUCCESS:\n      return {\n        loadingTaskTypeList: false,\n        successTaskTypeList: true,\n        taskTypes: action.payload\n      };\n    case TASK_TYPE_LIST_FAIL:\n      return {\n        loadingTaskTypeList: false,\n        errorTaskTypeList: action.payload\n      };\n    case TASK_TYPE_LIST_RESET:\n      return {};\n    default:\n      return state;\n  }\n};\nexport var taskTypeUpdateReducer = function taskTypeUpdateReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    taskTypeUpdated: {}\n  };\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case TASK_TYPE_UPDATE_REQUEST:\n      return {\n        loadingTaskTypeUpdate: true\n      };\n    case TASK_TYPE_UPDATE_SUCCESS:\n      return {\n        loadingTaskTypeUpdate: false,\n        successTaskTypeUpdate: true,\n        taskTypeUpdated: action.payload\n      };\n    case TASK_TYPE_UPDATE_FAIL:\n      return {\n        loadingTaskTypeUpdate: false,\n        errorTaskTypeUpdate: action.payload\n      };\n    case TASK_TYPE_UPDATE_RESET:\n      return {};\n    default:\n      return state;\n  }\n};\nexport var taskTypeDeleteReducer = function taskTypeDeleteReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case TASK_TYPE_DELETE_REQUEST:\n      return {\n        loadingTaskTypeDelete: true\n      };\n    case TASK_TYPE_DELETE_SUCCESS:\n      return {\n        loadingTaskTypeDelete: false,\n        successTaskTypeDelete: true\n      };\n    case TASK_TYPE_DELETE_FAIL:\n      return {\n        loadingTaskTypeDelete: false,\n        errorTaskTypeDelete: action.payload\n      };\n    case TASK_TYPE_DELETE_RESET:\n      return {};\n    default:\n      return state;\n  }\n};","map":{"version":3,"names":["TASK_TYPE_REGISTER_REQUEST","TASK_TYPE_REGISTER_SUCCESS","TASK_TYPE_REGISTER_FAIL","TASK_TYPE_REGISTER_RESET","TASK_TYPE_LIST_REQUEST","TASK_TYPE_LIST_SUCCESS","TASK_TYPE_LIST_FAIL","TASK_TYPE_LIST_RESET","TASK_TYPE_UPDATE_SUCCESS","TASK_TYPE_UPDATE_REQUEST","TASK_TYPE_UPDATE_FAIL","TASK_TYPE_UPDATE_RESET","TASK_TYPE_DELETE_FAIL","TASK_TYPE_DELETE_REQUEST","TASK_TYPE_DELETE_SUCCESS","TASK_TYPE_DELETE_RESET","taskTypeRegisterReducer","state","arguments","length","undefined","action","type","loadingTaskTypeRegister","successTaskTypeRegister","taskType","payload","errorTaskTypeRegister","taskTypeListReducer","taskTypes","loadingTaskTypeList","successTaskTypeList","errorTaskTypeList","taskTypeUpdateReducer","taskTypeUpdated","loadingTaskTypeUpdate","successTaskTypeUpdate","errorTaskTypeUpdate","taskTypeDeleteReducer","loadingTaskTypeDelete","successTaskTypeDelete","errorTaskTypeDelete"],"sources":["C:/trabajo/Alehope/actividadesPreBuild/Frontend/src/redux/reducers/taskTypeReducer.js"],"sourcesContent":["import {\r\n  TASK_TYPE_REGISTER_REQUEST,\r\n  TASK_TYPE_REGISTER_SUCCESS,\r\n  TASK_TYPE_REGISTER_FAIL,\r\n  TASK_TYPE_REGISTER_RESET,\r\n  TASK_TYPE_LIST_REQUEST,\r\n  TASK_TYPE_LIST_SUCCESS,\r\n  TASK_TYPE_LIST_FAIL,\r\n  TASK_TYPE_LIST_RESET,\r\n  TASK_TYPE_UPDATE_SUCCESS,\r\n  TASK_TYPE_UPDATE_REQUEST,\r\n  TASK_TYPE_UPDATE_FAIL,\r\n  TASK_TYPE_UPDATE_RESET,\r\n  TASK_TYPE_DELETE_FAIL,\r\n  TASK_TYPE_DELETE_REQUEST,\r\n  TASK_TYPE_DELETE_SUCCESS,\r\n  TASK_TYPE_DELETE_RESET,\r\n} from '../constants/taskTypeConstants.js'\r\n\r\nexport const taskTypeRegisterReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case TASK_TYPE_REGISTER_REQUEST:\r\n      return { loadingTaskTypeRegister: true }\r\n    case TASK_TYPE_REGISTER_SUCCESS:\r\n      return {\r\n        loadingTaskTypeRegister: false,\r\n        successTaskTypeRegister: true,\r\n        taskType: action.payload,\r\n      }\r\n    case TASK_TYPE_REGISTER_FAIL:\r\n      return {\r\n        loadingTaskTypeRegister: false,\r\n        errorTaskTypeRegister: action.payload,\r\n      }\r\n    case TASK_TYPE_REGISTER_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const taskTypeListReducer = (state = { taskTypes: [] }, action) => {\r\n  switch (action.type) {\r\n    case TASK_TYPE_LIST_REQUEST:\r\n      return { loadingTaskTypeList: true }\r\n    case TASK_TYPE_LIST_SUCCESS:\r\n      return {\r\n        loadingTaskTypeList: false,\r\n        successTaskTypeList: true,\r\n        taskTypes: action.payload,\r\n      }\r\n    case TASK_TYPE_LIST_FAIL:\r\n      return { loadingTaskTypeList: false, errorTaskTypeList: action.payload }\r\n    case TASK_TYPE_LIST_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const taskTypeUpdateReducer = (state = { taskTypeUpdated: {} }, action) => {\r\n  switch (action.type) {\r\n    case TASK_TYPE_UPDATE_REQUEST:\r\n      return { loadingTaskTypeUpdate: true }\r\n    case TASK_TYPE_UPDATE_SUCCESS:\r\n      return {\r\n        loadingTaskTypeUpdate: false,\r\n        successTaskTypeUpdate: true,\r\n        taskTypeUpdated: action.payload,\r\n      }\r\n    case TASK_TYPE_UPDATE_FAIL:\r\n      return { loadingTaskTypeUpdate: false, errorTaskTypeUpdate: action.payload }\r\n    case TASK_TYPE_UPDATE_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const taskTypeDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case TASK_TYPE_DELETE_REQUEST:\r\n      return { loadingTaskTypeDelete: true }\r\n    case TASK_TYPE_DELETE_SUCCESS:\r\n      return { loadingTaskTypeDelete: false, successTaskTypeDelete: true }\r\n    case TASK_TYPE_DELETE_FAIL:\r\n      return { loadingTaskTypeDelete: false, errorTaskTypeDelete: action.payload }\r\n    case TASK_TYPE_DELETE_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n"],"mappings":"AAAA,SACEA,0BAA0B,EAC1BC,0BAA0B,EAC1BC,uBAAuB,EACvBC,wBAAwB,EACxBC,sBAAsB,EACtBC,sBAAsB,EACtBC,mBAAmB,EACnBC,oBAAoB,EACpBC,wBAAwB,EACxBC,wBAAwB,EACxBC,qBAAqB,EACrBC,sBAAsB,EACtBC,qBAAqB,EACrBC,wBAAwB,EACxBC,wBAAwB,EACxBC,sBAAsB,QACjB,mCAAmC;AAE1C,OAAO,IAAMC,uBAAuB,GAAG,SAA1BA,uBAAuBA,CAAA,EAA2B;EAAA,IAAvBC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;EAAA,IAAEG,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EACxD,QAAQC,MAAM,CAACC,IAAI;IACjB,KAAKtB,0BAA0B;MAC7B,OAAO;QAAEuB,uBAAuB,EAAE;MAAK,CAAC;IAC1C,KAAKtB,0BAA0B;MAC7B,OAAO;QACLsB,uBAAuB,EAAE,KAAK;QAC9BC,uBAAuB,EAAE,IAAI;QAC7BC,QAAQ,EAAEJ,MAAM,CAACK;MACnB,CAAC;IACH,KAAKxB,uBAAuB;MAC1B,OAAO;QACLqB,uBAAuB,EAAE,KAAK;QAC9BI,qBAAqB,EAAEN,MAAM,CAACK;MAChC,CAAC;IACH,KAAKvB,wBAAwB;MAC3B,OAAO,CAAC,CAAC;IACX;MACE,OAAOc,KAAK;EAAA;AAElB,CAAC;AAED,OAAO,IAAMW,mBAAmB,GAAG,SAAtBA,mBAAmBA,CAAA,EAA0C;EAAA,IAAtCX,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG;IAAEW,SAAS,EAAE;EAAG,CAAC;EAAA,IAAER,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EACnE,QAAQC,MAAM,CAACC,IAAI;IACjB,KAAKlB,sBAAsB;MACzB,OAAO;QAAE0B,mBAAmB,EAAE;MAAK,CAAC;IACtC,KAAKzB,sBAAsB;MACzB,OAAO;QACLyB,mBAAmB,EAAE,KAAK;QAC1BC,mBAAmB,EAAE,IAAI;QACzBF,SAAS,EAAER,MAAM,CAACK;MACpB,CAAC;IACH,KAAKpB,mBAAmB;MACtB,OAAO;QAAEwB,mBAAmB,EAAE,KAAK;QAAEE,iBAAiB,EAAEX,MAAM,CAACK;MAAQ,CAAC;IAC1E,KAAKnB,oBAAoB;MACvB,OAAO,CAAC,CAAC;IACX;MACE,OAAOU,KAAK;EAAA;AAElB,CAAC;AAED,OAAO,IAAMgB,qBAAqB,GAAG,SAAxBA,qBAAqBA,CAAA,EAAgD;EAAA,IAA5ChB,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG;IAAEgB,eAAe,EAAE,CAAC;EAAE,CAAC;EAAA,IAAEb,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAC3E,QAAQC,MAAM,CAACC,IAAI;IACjB,KAAKb,wBAAwB;MAC3B,OAAO;QAAE0B,qBAAqB,EAAE;MAAK,CAAC;IACxC,KAAK3B,wBAAwB;MAC3B,OAAO;QACL2B,qBAAqB,EAAE,KAAK;QAC5BC,qBAAqB,EAAE,IAAI;QAC3BF,eAAe,EAAEb,MAAM,CAACK;MAC1B,CAAC;IACH,KAAKhB,qBAAqB;MACxB,OAAO;QAAEyB,qBAAqB,EAAE,KAAK;QAAEE,mBAAmB,EAAEhB,MAAM,CAACK;MAAQ,CAAC;IAC9E,KAAKf,sBAAsB;MACzB,OAAO,CAAC,CAAC;IACX;MACE,OAAOM,KAAK;EAAA;AAElB,CAAC;AAED,OAAO,IAAMqB,qBAAqB,GAAG,SAAxBA,qBAAqBA,CAAA,EAA2B;EAAA,IAAvBrB,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;EAAA,IAAEG,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EACtD,QAAQC,MAAM,CAACC,IAAI;IACjB,KAAKT,wBAAwB;MAC3B,OAAO;QAAE0B,qBAAqB,EAAE;MAAK,CAAC;IACxC,KAAKzB,wBAAwB;MAC3B,OAAO;QAAEyB,qBAAqB,EAAE,KAAK;QAAEC,qBAAqB,EAAE;MAAK,CAAC;IACtE,KAAK5B,qBAAqB;MACxB,OAAO;QAAE2B,qBAAqB,EAAE,KAAK;QAAEE,mBAAmB,EAAEpB,MAAM,CAACK;MAAQ,CAAC;IAC9E,KAAKX,sBAAsB;MACzB,OAAO,CAAC,CAAC;IACX;MACE,OAAOE,KAAK;EAAA;AAElB,CAAC"},"metadata":{},"sourceType":"module"}